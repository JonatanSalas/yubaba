(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1:function(e,n,t){"use strict";var r,a,o=t(0),i=t(42),l=(r=function(e,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),c=function(){return(c=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)};!function(e){e.animation="animation",e.wait="wait"}(a||(a={}));var s=o.createContext(void 0),u=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return l(n,e),n.prototype.render=function(){var e=this;return"function"!=typeof this.props.children?o.createElement(s.Consumer,null,function(n){return o.createElement(s.Provider,{value:{ref:function(t){e.props.receiveRef&&e.props.receiveRef(t),n&&n.ref(t)},data:function(t){var r=e.props.data?[e.props.data].concat(t):t;n&&n.data(r),e.props.receiveData&&e.props.receiveData(t)},renderChildren:function(t){n&&n.renderChildren(t),e.props.receiveRenderChildren&&e.props.receiveRenderChildren(t)},style:c({},e.props.style,n?n.style:{})}},e.props.children)}):o.createElement(s.Consumer,null,function(n){if("function"==typeof e.props.children){if(n){var t=e.props.data?[e.props.data]:[];n.renderChildren(e.props.children),n.data(t)}return e.props.receiveRenderChildren&&e.props.receiveRenderChildren(e.props.children),e.props.children({ref:function(t){n&&n.ref(t),e.props.receiveRef&&e.props.receiveRef(t)},style:n?c({},e.props.style,n.style):e.props.style||{}})}throw new Error("Children is guaranteed to be a function. Impossible condition.")})},n}(o.Component),p=function(){return(p=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)};function f(){var e=document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body&&document.body.scrollTop,n=document.documentElement&&document.documentElement.scrollLeft?document.documentElement.scrollLeft:document.body&&document.body.scrollLeft;return{scrollTop:e||0,scrollLeft:n||0}}function m(e,n){void 0===n&&(n={});var t=e.getBoundingClientRect(),r=f(),a=r.scrollLeft,o=r.scrollTop,i=(t.height-e.offsetHeight)/2,l=(t.width-e.offsetWidth)/2;return{size:{width:n.useOffsetSize?e.offsetWidth:t.width,height:n.useOffsetSize?e.offsetHeight:t.height},location:{left:t.left+a+l,top:t.top+o+i},raw:{rect:t,scrollTop:o,scrollLeft:a}}}function d(e){return{top:e.location.top+Math.ceil(e.size.width/2),left:e.location.left-Math.ceil(e.size.height/2)}}function h(){return{left:Math.ceil(window.innerWidth/2),top:Math.ceil(window.innerHeight/2)}}function g(e){var n=f(),t=n.scrollTop,r=n.scrollLeft,a=t-e.raw.scrollTop,o=r-e.raw.scrollLeft;return p({},e,{location:{top:e.location.top+a,left:e.location.left+o}})}var b=function(){var e=function(){},n=function(){},t=new Promise(function(t,r){e=t,n=r});return{resolve:e,reject:n,promise:t}},y=new Map,x=function(e){return y.get(e)},E=function(e){return y.has(e)},v=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),w=function(){return(w=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},k=o.createContext(void 0),O=function(e){return function(n){return o.createElement(k.Consumer,null,function(t){return o.createElement(e,w({context:t},n))})}},j=O(function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.state={style:{visibility:"hidden"}},n.onFinish=function(e){n.props.context&&n.props.context.onFinish&&n.props.context.onFinish(e),n.props.name&&e.name!==n.props.name||n.setState({style:{visibility:"visible"}})},n}return v(n,e),n.prototype.render=function(){return o.createElement(k.Provider,{value:{onFinish:this.onFinish}},this.props.children({style:this.state.style}))},n}(o.Component)),_=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),C=function(){return(C=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},R=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&(t[r[a]]=e[r[a]])}return t},A=O(function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.state={shown:!1,childProps:{}},n.TIME_TO_WAIT_FOR_NEXT_BABA=50,n.animating=!1,n.unmounting=!1,n.abortAnimations=function(){},n.executeAnimations=function(){var e=x(n.props.name);if(e){e.data;var t=R(e,["data"]);n.animating=!0;var r={fromTarget:t,toTarget:C({render:n.renderChildren},m(n.element))},o=e.data.map(function(e){if(e.action===a.animation){var t,o=function(e){t||(t=document.createElement("div"),document.body.insertBefore(t,document.body.firstChild)),requestAnimationFrame(function(){return Object(i.unstable_renderSubtreeIntoContainer)(n,e,t)})},l={},c=function(e){e?(l=C({},l,e,{style:C({},l.style,e.style)}),n.setState({childProps:l||{}})):n.setState({childProps:{}})};return{action:a.animation,payload:{beforeAnimate:function(){if(e.payload.beforeAnimate){var n=b(),t=e.payload.beforeAnimate(r,n.resolve,c);return t&&o(t),n.promise}return Promise.resolve()},animate:function(){var n=b(),t=e.payload.animate(r,n.resolve,c);return t&&o(t),n.promise},afterAnimate:function(){if(e.payload.afterAnimate){var n=b(),t=e.payload.afterAnimate(r,n.resolve,c);return t&&o(t),n.promise}return Promise.resolve()},cleanup:function(){t&&(Object(i.unmountComponentAtNode)(t),document.body.removeChild(t)),c(null)}}}}return e}),l=o.reduce(function(e,n){switch(n.action){case a.animation:return e[e.length-1].push(n.payload),e;case a.wait:return e.push([]),e;default:return e}},[[]]);n.abortAnimations=function(){n.animating&&(n.animating=!1,l.forEach(function(e){return e.forEach(function(e){return e.cleanup()})}))};var c=o.map(function(e){return e.action===a.animation?e.payload.beforeAnimate():Promise.resolve()});Promise.all(c).then(function(){return l.reduce(function(e,n){return e.then(function(){return Promise.all(n.map(function(e){return e.animate()}))})},Promise.resolve()).then(function(){return n.setState({shown:!0}),n.storeDOMData(),n.props.context&&n.props.context.onFinish({name:n.props.name}),l.reduce(function(e,n){return e.then(function(){return Promise.all(n.map(function(e){return e.afterAnimate()})).then(function(){})})},Promise.resolve())}).then(function(){l.forEach(function(e){return e.forEach(function(e){return e.cleanup()})})}).then(function(){n.animating=!1,n.props.onFinish&&n.props.onFinish()})})}},n.setRef=function(e){n.element=e},n.setReactNode=function(e){n.renderChildren=e},n.setData=function(e){n.data=e},n}return _(n,e),n.prototype.componentDidMount=function(){var e=this.props,n=e.in,t=e.name;void 0===n&&E(t)?this.executeAnimations():((void 0===n||n)&&this.showSelfAndNotifyManager(),n&&this.storeDOMData())},n.prototype.componentWillUnmount=function(){this.storeDOMData(),this.delayedClearDOMData(),this.abortAnimations(),this.unmounting=!0},n.prototype.componentDidUpdate=function(e){if(this.props.in!==e.in){if(this.props.in){if(E(this.props.name))return void this.executeAnimations();this.storeDOMData(),this.showSelfAndNotifyManager()}this.setState({shown:!1}),this.storeDOMData(),this.delayedClearDOMData(),this.abortAnimations()}},n.prototype.showSelfAndNotifyManager=function(){this.setState({shown:!0}),this.props.context&&this.props.context.onFinish({name:this.props.name})},n.prototype.delayedClearDOMData=function(){var e=this;setTimeout(function(){var n;n=e.props.name,y.delete(n)},this.TIME_TO_WAIT_FOR_NEXT_BABA)},n.prototype.storeDOMData=function(){var e,n;if(!this.unmounting&&this.data){var t=m(this.element);0,e=this.props.name,n=C({},t,{render:this.renderChildren,data:this.data}),y.set(e,n)}},n.prototype.render=function(){return o.createElement(u,{receiveData:this.setData,receiveRenderChildren:this.setReactNode,receiveRef:this.setRef,style:C({opacity:this.state.shown?1:0},this.state.childProps.style)},this.props.children)},n}(o.PureComponent)),z=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),P=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.data={action:a.wait},n}return z(n,e),n.prototype.render=function(){return o.createElement(u,{data:this.data},this.props.children)},n}(o.Component);function q(e){var n=e.width,t=e.height,r=Math.pow(n,2),a=Math.pow(t,2),o=Math.sqrt(r+a);return Math.ceil(o)}function T(e,n){return e/n}var F=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),M=function(){return(M=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},W=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.started=!1,n.state={state:"from"},n.start=function(){n.started||(n.started=!0,window.setTimeout(function(){n.setState({state:"to"}),window.setTimeout(n.props.onFinish,n.props.duration)},14))},n}return F(n,e),n.prototype.componentDidMount=function(){this.props.start&&this.start()},n.prototype.componentDidUpdate=function(){this.props.start&&this.start()},n.prototype.render=function(){var e=this.props,n=e.from,t=e.to;return o.createElement("span",{style:"from"===this.state.state?n:M({},n,t)},this.props.children)},n.defaultProps={start:!0},n}(o.Component),D=function(){},B=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),I=function(){return(I=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},S=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.beforeAnimate=function(e,t){var r=g(e.fromTarget),a=e.toTarget.location.left-r.location.left,i=e.toTarget.location.top-r.location.top,l=r.location.left-e.toTarget.location.left,c=r.location.top-e.toTarget.location.top,s=n.props.duration,u="translate3d(0, 0, 0) scale3d(1, 1, 1)",p=n.props.timingFunction,f={transition:"transform "+s+"ms "+p+", opacity "+s/2+"ms "+p,position:"absolute",transformOrigin:"0 0"};return n.renderAnimation=function(t){return o.createElement(o.Fragment,null,o.createElement(W,{key:"1",start:t.start,duration:n.props.duration,from:I({},r.location,f,{transform:u,opacity:1,zIndex:n.props.zIndex||2e4}),to:{transform:"translate3d("+a+"px, "+i+"px, 0) scale3d("+T(e.toTarget.size.width,r.size.width)+", "+T(e.toTarget.size.height,r.size.height)+", 1)",opacity:0},onFinish:t.onFinish},e.fromTarget.render({ref:D,style:{margin:0,height:r.size.height+"px",width:r.size.width+"px"}})),o.createElement(W,{key:"2",start:t.start,duration:n.props.duration,from:I({},e.toTarget.location,f,{transition:"transform "+s+"ms "+p+", opacity 10ms "+p,zIndex:n.props.zIndex?n.props.zIndex-1:19999,opacity:0,transform:"translate3d("+l+"px, "+c+"px, 0) scale3d("+T(r.size.width,e.toTarget.size.width)+", "+T(r.size.height,e.toTarget.size.height)+", 1)"}),to:{opacity:1,transform:u},onFinish:t.onFinish},e.toTarget.render({ref:D,style:{margin:0,height:e.toTarget.size.height+"px",width:e.toTarget.size.width+"px"}})))},requestAnimationFrame(t),n.renderAnimation({onFinish:t,start:!1})},n.animate=function(e,t){return n.renderAnimation({onFinish:t,start:!0})},n}return B(n,e),n.prototype.render=function(){var e={action:a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate}};return o.createElement(u,{data:e},this.props.children)},n.defaultProps={duration:500,timingFunction:"cubic-bezier(0.79, 0.22, 0, 1.19)"},n}(o.Component),N=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),L=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.beforeAnimate=function(e,t,r){var a=g(e.fromTarget),o=a.location.left-e.toTarget.location.left,i=a.location.top-e.toTarget.location.top,l=n.props.duration,c=n.props.timingFunction,s={zIndex:n.props.zIndex||99999,opacity:1,transformOrigin:"0 0",visibility:"visible",willChange:"transform",transform:"translate3d("+o+"px, "+i+"px, 0) scale3d("+T(a.size.width,e.toTarget.size.width)+", "+T(a.size.height,e.toTarget.size.height)+", 1)"};r({style:s}),setTimeout(function(){r({style:{transition:"transform "+l+"ms "+c+", opacity "+l/2+"ms "+c}}),t()},14)},n.animate=function(e,t,r){r({style:{transform:"translate3d(0, 0, 0) scale3d(1, 1, 1)"}}),setTimeout(function(){return t()},n.props.duration)},n}return N(n,e),n.prototype.render=function(){var e={action:a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate}};return o.createElement(u,{data:e},this.props.children)},n.defaultProps={duration:500,timingFunction:"cubic-bezier(0.79, 0.22, 0, 1.19)"},n}(o.Component),H=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),G=function(){return(G=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},U=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.state={started:!1},n.start=function(){requestAnimationFrame(function(){n.setState({started:!0})})},n.onTransitionEnd=function(e){n.props.onFinish()},n}return H(n,e),n.prototype.componentDidMount=function(){void 0!==this.props.step&&this.start()},n.prototype.componentDidUpdate=function(){void 0===this.props.step||this.state.started||this.start()},n.prototype.render=function(){var e=this.props,n=e.style,t=e.keyframes,r=e.step,a=e.children,i=void 0!==r&&this.state.started;return o.createElement("span",{onTransitionEnd:this.onTransitionEnd,style:G({},n,i?t[r||0]:{})},a)},n}(o.Component),Y=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),J=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.beforeAnimate=function(e,t){var r=n.props.duration;return n.renderAnimation=function(e){return o.createElement(U,{step:e.step,style:{position:"fixed",top:0,left:0,right:0,bottom:0,background:n.props.background,transform:"translate3d("+{left:"100%, 0, 0",right:"-100%, 0, 0",down:"0, -100%, 0",up:"0, 100%, 0"}[n.props.direction]+")",transition:"transform ease-out "+r+"ms, opacity ease-in-out "+r+"ms"},keyframes:[{transform:"translate3d(0, 0, 0)"},{transform:"translate3d(0, 0, 0)",opacity:0}],onFinish:e.onFinish})},requestAnimationFrame(t),n.renderAnimation({onFinish:t,step:void 0})},n.animate=function(e,t){return n.renderAnimation({onFinish:t,step:0})},n.afterAnimate=function(e,t){return n.renderAnimation({onFinish:t,step:1})},n}return Y(n,e),n.prototype.render=function(){var e={action:a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate,afterAnimate:this.afterAnimate}};return o.createElement(u,{data:e},this.props.children)},n.defaultProps={duration:500},n}(o.Component),K=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),Q=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.afterAnimate=function(e,t){return n.renderAnimation({onFinish:t,step:1})},n.animate=function(e,t){var r=g(e.fromTarget),a=n.props.duration,i=Math.min(r.size.width,r.size.height),l=q(r.size),c=d(r),s=h(),u=q({width:window.innerWidth,height:window.innerHeight}),p=q({width:s.left-c.left,height:s.top-c.top}),f=Math.ceil((u+p)/i);return n.renderAnimation=function(e){return o.createElement(U,{key:"circle-expand",style:{left:r.location.left-(l-r.size.width)/2,top:r.location.top-(l-r.size.height)/2,width:l,height:l,borderRadius:"50%",position:"absolute",background:n.props.background,zIndex:9999,transition:"transform ease-in "+a+"ms, opacity ease-in "+a/2+"ms",transform:"scale(1)",willChange:"transform",opacity:1},keyframes:[{transform:"scale("+f+")"},{transform:"scale("+f+")",opacity:0}],step:e.step,onFinish:e.onFinish})},n.renderAnimation({onFinish:t,step:0})},n}return K(n,e),n.prototype.render=function(){var e={action:a.animation,payload:{animate:this.animate,afterAnimate:this.afterAnimate}};return o.createElement(u,{data:e},this.props.children)},n.defaultProps={duration:500},n}(o.Component),X=function(){var e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(n,t)};return function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),V=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.beforeAnimate=function(e,t){var r=n.props.duration,a=Math.min(e.toTarget.size.width,e.toTarget.size.height),i=q(e.toTarget.size),l=d(e.toTarget),c=h(),s=q({width:window.innerWidth,height:window.innerHeight}),u=q({width:c.left-l.left,height:c.top-l.top}),p=Math.ceil((s+u)/a);return n.renderAnimation=function(t){return o.createElement(U,{style:{left:e.toTarget.location.left-(i-e.toTarget.size.width)/2,top:e.toTarget.location.top-(i-e.toTarget.size.height)/2,width:i,height:i,borderRadius:"50%",position:"absolute",background:n.props.background,willChange:"transform",zIndex:1110,transition:"transform ease-out "+r+"ms, opacity ease-out "+r+"ms",transform:"scale("+p+")"},keyframes:[{transform:"scale(1)"},{transform:"scale(1)",opacity:0}],step:t.step,onFinish:t.onFinish})},requestAnimationFrame(function(){return t()}),n.renderAnimation({onFinish:t,step:void 0})},n.animate=function(e,t){return n.renderAnimation({onFinish:t,step:0})},n.afterAnimate=function(e,t){return n.renderAnimation({onFinish:t,step:1})},n}return X(n,e),n.prototype.render=function(){var e={action:a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate,afterAnimate:this.afterAnimate}};return o.createElement(u,{data:e},this.props.children)},n.defaultProps={duration:500},n}(o.Component);t.d(n,"k",function(){return A}),t.d(n,"a",function(){return j}),t.d(n,"j",function(){return P}),t.d(n,"f",function(){return S}),t.d(n,"g",function(){return L}),t.d(n,"i",function(){return J}),t.d(n,"b",function(){return Q}),t.d(n,"c",function(){return V}),t.d(n,"e",function(){return a}),t.d(n,"d",function(){return u}),t.d(n,"h",function(){return S})},119:function(e,n,t){e.exports=t.p+"dee1a49a672f61b9bf70a45ac13babc7.png"},134:function(e,n,t){"use strict";var r,a=t(0),o=(r=function(e,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)});n.a=function(){var e=0;return function(n){function t(){return null!==n&&n.apply(this,arguments)||this}return o(t,n),t.prototype.componentDidMount=function(){window.scrollTo(0,e)},t.prototype.componentWillUnmount=function(){document.body&&(e=document.documentElement.scrollTop||document.body.scrollTop||window.pageYOffset)},t.prototype.render=function(){return null},t}(a.Component)}},135:function(e,n,t){"use strict";var r,a=t(0),o=(r=function(e,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),i=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return o(n,e),n.prototype.componentDidMount=function(){window.scrollTo(0,0)},n.prototype.render=function(){return null},n}(a.Component);n.a=i},190:function(e,n,t){"use strict";var r,a,o,i,l,c,s,u=t(0),p=t(2),f=t(226),m=t.n(f),d=t(1),h=t(8),g=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},b=p.a.div(r||(r=g(["\n  position: relative;\n  width: ",";\n  height: ",";\n  flex-shrink: 0;\n  grid-column: ",";\n  grid-row: ",";\n  background: ",";\n"],["\n  position: relative;\n  width: ",";\n  height: ",";\n  flex-shrink: 0;\n  grid-column: ",";\n  grid-row: ",";\n  background: ",";\n"])),function(e){return e.emphasis?"100%":"250px"},function(e){return e.emphasis?"100%":"332px"},function(e){return e.emphasis?"span 2":""},function(e){return e.emphasis?"span 2":""},function(e){return e.color||""}),y=p.a.img(a||(a=g(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  cursor: pointer;\n  width: 100%;\n  bottom: ",";\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  cursor: pointer;\n  width: 100%;\n  bottom: ",";\n"])),function(e){return e.emphasis?"130px":"70px"}),x=p.a.div(o||(o=g(["\n  display: grid;\n  grid-template: ",";\n  box-sizing: border-box;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  color: #ffffffde;\n  padding: 12px;\n  font-family: Roboto, sans-serif;\n  height: 25%;\n"],["\n  display: grid;\n  grid-template: ",";\n  box-sizing: border-box;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  color: #ffffffde;\n  padding: 12px;\n  font-family: Roboto, sans-serif;\n  height: 25%;\n"])),function(e){return e.emphasis?"'title star' auto\n    'context star' auto":"'title star' auto\n    "}),E=p.a.div(i||(i=g(["\n  font-size: ",";\n  white-space: nowrap;\n  grid-area: title;\n  font-weight: 400;\n  letter-spacing: 0.5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"],["\n  font-size: ",";\n  white-space: nowrap;\n  grid-area: title;\n  font-weight: 400;\n  letter-spacing: 0.5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"])),function(e){return e.emphasis?"1.25em":"1em"}),v=p.a.div(l||(l=g(["\n  margin-top: 5px;\n  font-size: 0.85em;\n  grid-area: subtitle;\n  justify-content: flex-start;\n  font-weight: 300;\n"],["\n  margin-top: 5px;\n  font-size: 0.85em;\n  grid-area: subtitle;\n  justify-content: flex-start;\n  font-weight: 300;\n"]))),w=p.a.div(c||(c=g(["\n  grid-area: star;\n  justify-self: flex-end;\n  align-self: ",";\n"],["\n  grid-area: star;\n  justify-self: flex-end;\n  align-self: ",";\n"])),function(e){return e.emphasis?"flex-start":"center"}),k=p.a.div(s||(s=g(["\n  align-self: flex-end;\n  font-style: italic;\n  grid-area: context;\n  font-size: 0.7em;\n"],["\n  align-self: flex-end;\n  font-style: italic;\n  grid-area: context;\n  font-size: 0.7em;\n"])));n.a=function(e){var n=e.emphasis,t=e.albumArt,r=e.color,a=e.artist,o=e.onClick,i=e.name,l=e.baba,c=e.expand,s=c?d.b:d.d;return u.createElement(b,{emphasis:n,color:r},u.createElement(d.k,{name:l},u.createElement(s,{background:r},u.createElement(d.g,{delay:c?100:0},function(e){var n=e.ref,r=e.style;return u.createElement(y,{onClick:o,src:t,style:r,innerRef:n})}))),u.createElement(x,{emphasis:n},u.createElement(E,{emphasis:n},i,u.createElement(v,null,a)),u.createElement(w,{emphasis:n},u.createElement(h.c,{color:"inherit","aria-label":"Menu"},u.createElement(m.a,null))),n&&u.createElement(k,null,"Recently added")))}},203:function(e,n,t){e.exports=t.p+"6245324e87af6ca0c5e624ac76f4351b.png"},227:function(e,n,t){"use strict";var r,a,o,i,l,c,s,u,p,f,m,d,h=t(0),g=t(2),b=t(8),y=t(522),x=t.n(y),E=t(191),v=t.n(E),w=t(226),k=t.n(w),O=t(413),j=t(1),_=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},C=(r=function(e,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),R=g.a.div(a||(a=_(["\n  width: 900px;\n  margin: 0 auto;\n  color: ",";\n  font-family: Roboto, sans-serif;\n  padding-top: 150px;\n  padding-bottom: 124px;\n"],["\n  width: 900px;\n  margin: 0 auto;\n  color: ",";\n  font-family: Roboto, sans-serif;\n  padding-top: 150px;\n  padding-bottom: 124px;\n"])),function(e){return"#000"===Object(O.b)(e.color)?"#000000b0":"white"}),A=g.a.div(o||(o=_(["\n  display: grid;\n  background: ",";\n  grid-template:\n    'album info' auto\n    'album released' auto;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: 1fr auto;\n"],["\n  display: grid;\n  background: ",";\n  grid-template:\n    'album info' auto\n    'album released' auto;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: 1fr auto;\n"])),function(e){return e.color}),z=g.a.img(i||(i=_(["\n  height: 300px;\n  width: 300px;\n  grid-area: album;\n"],["\n  height: 300px;\n  width: 300px;\n  grid-area: album;\n"]))),P=g.a.div(l||(l=_(["\n  background: ",";\n  padding: 30px;\n  grid-area: released;\n  position: relative;\n  opacity: 0.9;\n"],["\n  background: ",";\n  padding: 30px;\n  grid-area: released;\n  position: relative;\n  opacity: 0.9;\n"])),function(e){return e.color}),q=g.a.div(c||(c=_(["\n  grid-area: info;\n  display: flex;\n  align-items: center;\n  padding: 30px;\n  flex-wrap: wrap;\n  position: relative;\n  opacity: 0.9;\n"],["\n  grid-area: info;\n  display: flex;\n  align-items: center;\n  padding: 30px;\n  flex-wrap: wrap;\n  position: relative;\n  opacity: 0.9;\n"]))),T=g.a.div(s||(s=_(["\n  width: 100%;\n  margin-bottom: 20px;\n  font-size: 3em;\n"],["\n  width: 100%;\n  margin-bottom: 20px;\n  font-size: 3em;\n"]))),F=g.a.div(u||(u=_(["\n  width: 100%;\n"],["\n  width: 100%;\n"]))),M=Object(g.a)(b.b)(p||(p=_(["\n  border-radius: 50% !important;\n  height: 48px;\n  width: 48px;\n  top: -26px;\n  position: absolute;\n  right: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"],["\n  border-radius: 50% !important;\n  height: 48px;\n  width: 48px;\n  top: -26px;\n  position: absolute;\n  right: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"]))),W=g.a.div(f||(f=_(["\n  position: absolute;\n  top: 18px;\n  right: 12px;\n"],["\n  position: absolute;\n  top: 18px;\n  right: 12px;\n"]))),D=g.a.span(m||(m=_(["\n  margin-right: 20px;\n"],["\n  margin-right: 20px;\n"]))),B=Object(g.a)(b.b)(d||(d=_(["\n  border-bottom-left-radius: 0 !important;\n  border-bottom-right-radius: 0 !important;\n"],["\n  border-bottom-left-radius: 0 !important;\n  border-bottom-right-radius: 0 !important;\n"]))),I=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return C(n,e),n.prototype.render=function(){var e=this.props,n=e.baba,t=e.color,r=e.shrink,a=e.wait,o=e.albumArt,i=e.name,l=e.artist,c=e.songs,s=r?j.c:j.d,u=a?j.j:j.d;return h.createElement(R,{color:t},h.createElement(B,{raised:!0,elevation:20,style:{minHeight:"90vh",overflow:"visible"}},h.createElement(A,{color:t},h.createElement(j.k,{name:n},h.createElement(j.g,null,h.createElement(u,null,h.createElement(s,{background:t},function(e){var n=e.ref,t=e.style;return h.createElement(z,{src:o,style:t,innerRef:n})})))),h.createElement(q,null,h.createElement(W,null,h.createElement(b.c,{color:"inherit","aria-label":"Menu"},h.createElement(k.a,null)),h.createElement(b.c,{color:"inherit","aria-label":"Menu"},h.createElement(v.a,null))),h.createElement("div",null,h.createElement(T,null,i),h.createElement(F,null,l))),h.createElement(P,{color:Object(O.a)(.1)(t)},"Released March, 2013",h.createElement(M,null,h.createElement(b.c,null,h.createElement(x.a,null))))),h.createElement(b.d,{style:{marginLeft:"5%",width:"92%"}},h.createElement(b.g,null,h.createElement(b.h,null,h.createElement(b.f,null,h.createElement("strong",null,"Track")),h.createElement(b.f,null,h.createElement("strong",null,"Artist")),h.createElement(b.f,{numeric:!0},h.createElement("strong",null,"Time")))),h.createElement(b.e,null,c.map(function(e,n){return h.createElement(b.h,null,h.createElement(b.f,null,h.createElement(D,null,n+1)," ",e.name),h.createElement(b.f,null,l),h.createElement(b.f,{numeric:!0},e.time))})))))},n}(h.Component);n.a=I},28:function(e,n,t){e.exports=t.p+"aab7feadcc072591c71247aa2942a83e.png"},5:function(e,n,t){"use strict";var r,a=t(0),o=(r=function(e,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),i=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.state={shown:!1},n.toggle=function(){n.setState(function(e){return{shown:!e.shown}})},n.set=function(e){n.setState({shown:e})},n}return o(n,e),n.prototype.render=function(){return this.props.children({toggle:this.toggle,set:this.set,shown:this.state.shown})},n}(a.Component);n.a=i},612:function(e,n,t){t(228),t(613),e.exports=t(614)},614:function(e,n,t){"use strict";t.r(n),function(e){var n=t(15),r=t(632);Object(n.configure)(function(){return r.keys().forEach(r)},e)}.call(this,t(32)(e))},632:function(e,n,t){var r={"./react-next/test/examples/1-move.stories.tsx":633,"./react-next/test/examples/2.circle-expand.stories.tsx":635,"./react-next/test/examples/3.circle-shrink.stories.tsx":636,"./react-next/test/examples/4.swipe.stories.tsx":639,"./react-next/test/examples/5.flip-move.stories.tsx":640,"./react-next/test/examples/94.cards.stories.tsx":641,"./react-next/test/examples/95.google-images.stories.tsx":734,"./react-next/test/examples/96.google-search.stories.tsx":741,"./react-next/test/examples/97.manager.stories.tsx":742,"./react-next/test/examples/98.guess-who.stories.tsx":743,"./react-next/test/examples/99.google-music.stories.tsx":744,"./react-next/test/examples/googleMusic/Album.stories.tsx":760,"./react-next/test/examples/googleMusic/AlbumDetails.stories.tsx":761};function a(e){var n=o(e);return t(n)}function o(e){var n=r[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=632},633:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a,o,i,l,c,s,u,p,f=t(2),m=t(0),d=t(15),h=t(1),g=t(5),b=t(7),y=t(134),x=t(135),E=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},v=function(){return(v=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},w=Object(y.a)(),k=f.a.img(n||(n=E(["\n  position: relative;\n  width: 105px;\n  height: 160px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: ","px;\n"],["\n  position: relative;\n  width: 105px;\n  height: 160px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: ","px;\n"])),function(e){return e.margin?30:0}),O=Object(f.a)(k)(r||(r=E(["\n  float: right;\n"],["\n  float: right;\n"]))),j=Object(f.a)(O)(a||(a=E(["\n  width: 315px;\n  height: 480px;\n"],["\n  width: 315px;\n  height: 480px;\n"]))),_=f.a.div(o||(o=E(["\n  height: 500px;\n"],["\n  height: 500px;\n"]))),C=f.a.div(i||(i=E(["\n  height: 2000px;\n"],["\n  height: 2000px;\n"]))),R=f.a.div(l||(l=E(["\n  height: 90vh;\n"],["\n  height: 90vh;\n"]))),A=Object(f.a)(O)(c||(c=E(["\n  border-radius: 50%;\n"],["\n  border-radius: 50%;\n"]))),z=Object(f.a)(O)(s||(s=E(["\n  width: 200px;\n"],["\n  width: 200px;\n"]))),P=f.a.div(u||(u=E(["\n  width: 105px;\n  height: 160px;\n  position: relative;\n"],["\n  width: 105px;\n  height: 160px;\n  position: relative;\n"]))),q=f.a.img(p||(p=E(["\n  position: absolute;\n  height: 100%;\n  width: 100%;\n"],["\n  position: absolute;\n  height: 100%;\n  width: 100%;\n"])));Object(d.storiesOf)("Animations/CrossFadeMove",e).add("square to square",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement(h.k,{name:"square-to-square",key:"2"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(O,{src:t(76),style:r,innerRef:n})})):m.createElement(h.k,{name:"square-to-square",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:r,innerRef:n})})))})}).add("square to square with margin",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement(h.k,{name:"square-to-square-margin",key:"2"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(O,{src:t(203),style:r,innerRef:n})})):m.createElement(h.k,{name:"square-to-square-margin",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),margin:!0,style:r,innerRef:n})})))})}).add("square to big square",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement(h.k,{name:"square-to-big-square",key:"2"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(j,{src:t(76),style:r,innerRef:n})})):m.createElement(h.k,{name:"square-to-big-square",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:r,innerRef:n})})))})}).add("square to rectangle",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement(h.k,{name:"square-to-rectangle",key:"2"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(z,{src:t(203),margin:!0,style:r,innerRef:n})})):m.createElement(h.k,{name:"square-to-rectangle",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:r,innerRef:n})})))})}).add("square to circle",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement(h.k,{name:"square-to-circle",key:"2"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(A,{src:t(76),style:r,innerRef:n})})):m.createElement(h.k,{name:"square-to-circle",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:r,innerRef:n})})))})}).add("offscreen big square to small square",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement(C,null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement(h.k,{name:"offscreen-big-square-to-small-square",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(119),style:r,innerRef:n})})):m.createElement("div",null,m.createElement(R,{"data-big":!0}),m.createElement(h.k,{name:"offscreen-big-square-to-small-square",key:"2"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(j,{src:t(28),style:r,innerRef:n})}))))})}).add("square to offscreen big square with margin",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement("div",null,m.createElement(R,{"data-yolo":!0}),m.createElement(h.k,{name:"square-to-offscreen-big-square-with-margin",key:"2"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(j,{src:t(76),margin:!0,style:r,innerRef:n})}))):m.createElement(h.k,{name:"square-to-offscreen-big-square-with-margin",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),margin:!0,style:r,innerRef:n})})))})}).add("indescriminate size to square",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement("div",null,m.createElement(h.k,{name:"indescriminate-size-to-square",key:"2"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(j,{src:t(203),margin:!0,style:r,innerRef:n})}))):m.createElement(P,null,m.createElement(h.k,{name:"indescriminate-size-to-square",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(q,{src:t(28),style:r,innerRef:n})}))))})}).add("long page that saves scroll position",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement("div",null,m.createElement(x.a,null),m.createElement(h.k,{name:"long-scroll-to-no-scroll",key:"2"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(j,{src:t(119),margin:!0,style:r,innerRef:n})}))):m.createElement(C,null,m.createElement(w,null),m.createElement(_,null),m.createElement(h.k,{name:"long-scroll-to-no-scroll",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:r,innerRef:n})}))))})}).add("one element never unmounting",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),!n&&m.createElement(h.k,{name:"one-already-mounted",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:v({},r,{float:"left"}),innerRef:n})})),m.createElement(h.k,{name:"one-already-mounted",key:"2",in:!!n},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(O,{src:t(76),style:v({},r),innerRef:n})})))})}).add("one element never unmounting reversed",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n&&m.createElement(h.k,{name:"one-already-mounted-reversed",key:"1"},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:v({},r,{position:"fixed",top:0,left:0}),innerRef:n})})),m.createElement(C,null,m.createElement("br",null),m.createElement("br",null),m.createElement("br",null),m.createElement("br",null),m.createElement(h.k,{name:"one-already-mounted-reversed",key:"2",in:!n},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(O,{src:t(76),style:r,innerRef:n})}))))})}).add("both elements never unmounting",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),m.createElement(h.k,{name:"both-already-mounted",key:"1",in:!n},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:v({},r,{float:"left"}),innerRef:n})})),m.createElement(h.k,{name:"both-already-mounted",key:"2",in:!!n},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(O,{src:t(76),style:v({},r),innerRef:n})})))})}).add("both elements never unmounting reversed",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),m.createElement(h.k,{name:"both-already-mounted-reversed",key:"1",in:!!n},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:v({},r,{float:"left"}),innerRef:n})})),m.createElement(h.k,{name:"both-already-mounted-reversed",key:"2",in:!n},m.createElement(h.h,null,function(e){var n=e.ref,r=e.style;return m.createElement(O,{src:t(76),style:v({},r),innerRef:n})})))})}).add("aborting",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},n?"abort":"toggle"),n?m.createElement(h.k,{name:"aborting",key:"2"},function(e){var n=e.ref,r=e.style;return m.createElement(O,{src:t(76),style:r,innerRef:n})}):m.createElement(h.k,{name:"aborting",key:"1"},m.createElement(h.h,{duration:5e3},function(e){var n=e.ref,r=e.style;return m.createElement(k,{src:t(28),style:r,innerRef:n})})))})})}.call(this,t(32)(e))},635:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a,o=t(2),i=t(0),l=t(15),c=t(1),s=t(5),u=t(7),p=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},f=o.a.div(n||(n=p(["\n  width: 100px;\n  height: 100px;\n  background: #db6f59;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n"],["\n  width: 100px;\n  height: 100px;\n  background: #db6f59;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n"]))),m=o.a.div(r||(r=p(["\n  height: 500px;\n  width: 50px;\n  flex-shrink: 0;\n"],["\n  height: 500px;\n  width: 50px;\n  flex-shrink: 0;\n"]))),d=o.a.div(a||(a=p(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"],["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"])));Object(l.storiesOf)("Animations/CircleExpand",e).add("from square",function(){return i.createElement(s.a,null,function(e){var n=e.shown,t=e.toggle;return i.createElement("div",null,i.createElement(u.a,{onClick:t},"toggle"),n?i.createElement(d,null,i.createElement(c.k,{name:"circle-expand-square",key:"2"},function(e){var n=e.ref,t=e.style;return i.createElement("div",{style:t,ref:n})})):i.createElement(d,null,i.createElement(c.k,{name:"circle-expand-square",key:"1"},i.createElement(c.b,{background:"#db6f59"},function(e){var n=e.ref,t=e.style;return i.createElement(f,{style:t,innerRef:n})}))))})}).add("to page with different scroll",function(){return i.createElement(s.a,null,function(e){var n=e.shown,t=e.toggle;return i.createElement("div",null,i.createElement(u.a,{onClick:t},"toggle"),n?i.createElement(d,{key:"22"},i.createElement(c.k,{name:"page-with-different-scroll",key:"2"},function(e){var n=e.ref,t=e.style;return i.createElement("div",{style:t,ref:n})})):i.createElement(d,{key:"11"},i.createElement(m,null),i.createElement(c.k,{name:"page-with-different-scroll",key:"1"},i.createElement(c.b,{background:"#db6f59"},function(e){var n=e.ref,t=e.style;return i.createElement(f,{style:t,innerRef:n})})),i.createElement(m,null)))})})}.call(this,t(32)(e))},636:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a,o,i=t(2),l=t(0),c=t(15),s=t(136),u=t.n(s),p=t(1),f=t(5),m=t(7),d=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},h=i.a.div(n||(n=d(["\n  width: 100px;\n  height: 100px;\n  background: #fcce2e;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"],["\n  width: 100px;\n  height: 100px;\n  background: #fcce2e;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"]))),g=i.a.div(r||(r=d(["\n  display: flex;\n  background: ",";\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"],["\n  display: flex;\n  background: ",";\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"])),function(e){return e.background||""}),b=Object(i.a)(u.a)(a||(a=d(["\n  margin: 0;\n"],["\n  margin: 0;\n"]))),y=i.a.div(o||(o=d(["\n  height: 500px;\n  flex-shrink: 0;\n"],["\n  height: 500px;\n  flex-shrink: 0;\n"])));Object(c.storiesOf)("Animations/CircleShrink",e).add("to square",function(){return l.createElement(f.a,null,function(e){var n=e.shown,t=e.toggle;return l.createElement("div",null,l.createElement(b,{className:""}),l.createElement(m.a,{onClick:t},"toggle"),n?l.createElement(g,{background:"white"},l.createElement(p.k,{name:"circle-shrink-square",key:"2"},function(e){var n=e.ref,t=e.style;return l.createElement(h,{style:t,innerRef:n})})):l.createElement(g,{background:"#fcce2e"},l.createElement(p.k,{name:"circle-shrink-square",key:"1"},l.createElement(p.c,{background:"#fcce2e"},function(e){var n=e.ref,t=e.style;return l.createElement("div",{style:t,ref:n})}))))})}).add("to page with different scroll",function(){return l.createElement(f.a,null,function(e){var n=e.shown,t=e.toggle;return l.createElement("div",null,l.createElement(b,{className:""}),l.createElement(m.a,{onClick:t},"toggle"),n?l.createElement(g,null,l.createElement(p.k,{name:"page-with-different-scroll-shrink",key:"2"},function(e){var n=e.ref,t=e.style;return l.createElement(h,{style:t,innerRef:n})})):l.createElement(g,{background:"#fcce2e"},l.createElement(y,null),l.createElement(p.k,{name:"page-with-different-scroll-shrink",key:"1"},l.createElement(p.c,{background:"#fcce2e"},function(e){var n=e.ref,t=e.style;return l.createElement(h,{style:t,innerRef:n})})),l.createElement(y,null)))})})}.call(this,t(32)(e))},639:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a=t(2),o=t(0),i=t(15),l=t(1),c=t(5),s=t(7),u=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},p=a.a.div(n||(n=u(["\n  width: 100px;\n  height: 100px;\n  background: #db6f59;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n"],["\n  width: 100px;\n  height: 100px;\n  background: #db6f59;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n"]))),f=a.a.div(r||(r=u(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"],["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"]))),m=function(e){return o.createElement(c.a,null,function(n){var t=n.shown,r=n.toggle;return o.createElement("div",null,o.createElement(s.a,{onClick:r},"toggle"),t?o.createElement(f,null,o.createElement(l.k,{name:"swipe-"+e,key:"2"},function(e){var n=e.ref,t=e.style;return o.createElement("div",{style:t,ref:n})})):o.createElement(f,null,o.createElement(l.k,{name:"swipe-"+e,key:"1"},o.createElement(l.i,{background:"#db6f59",direction:e},function(e){var n=e.ref,t=e.style;return o.createElement(p,{style:t,innerRef:n})}))))})};Object(i.storiesOf)("Animations/Swipe",e).add("up",function(){return m("up")}).add("down",function(){return m("down")}).add("left",function(){return m("left")}).add("right",function(){return m("right")})}.call(this,t(32)(e))},640:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a,o,i,l,c,s,u,p,f=t(2),m=t(0),d=t(15),h=t(1),g=t(5),b=t(7),y=t(134),x=t(135),E=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},v=function(){return(v=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},w=Object(y.a)(),k=f.a.div(n||(n=E(["\n  position: relative;\n  width: 105px;\n  height: 160px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #2196f3;\n  margin: ","px;\n"],["\n  position: relative;\n  width: 105px;\n  height: 160px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #2196f3;\n  margin: ","px;\n"])),function(e){return e.margin?30:0}),O=Object(f.a)(k)(r||(r=E(["\n  float: right;\n"],["\n  float: right;\n"]))),j=Object(f.a)(O)(a||(a=E(["\n  width: 315px;\n  height: 480px;\n"],["\n  width: 315px;\n  height: 480px;\n"]))),_=f.a.div(o||(o=E(["\n  height: 500px;\n"],["\n  height: 500px;\n"]))),C=f.a.div(i||(i=E(["\n  height: 2000px;\n"],["\n  height: 2000px;\n"]))),R=f.a.div(l||(l=E(["\n  height: 90vh;\n"],["\n  height: 90vh;\n"]))),A=Object(f.a)(O)(c||(c=E(["\n  border-radius: 50%;\n"],["\n  border-radius: 50%;\n"]))),z=Object(f.a)(O)(s||(s=E(["\n  width: 200px;\n"],["\n  width: 200px;\n"]))),P=f.a.div(u||(u=E(["\n  width: 105px;\n  height: 160px;\n  position: relative;\n"],["\n  width: 105px;\n  height: 160px;\n  position: relative;\n"]))),q=f.a.div(p||(p=E(["\n  background-color: #2196f3;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n"],["\n  background-color: #2196f3;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n"])));Object(d.storiesOf)("Animations/FLIPMove",e).add("square to square",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),n?m.createElement(h.k,{name:"square-to-square",key:"2"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(O,{style:t,innerRef:n})})):m.createElement(h.k,{name:"square-to-square",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:t,innerRef:n})})))})}).add("square to square with margin",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),n?m.createElement(h.k,{name:"square-to-square-margin",key:"2"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(O,{style:t,innerRef:n})})):m.createElement(h.k,{name:"square-to-square-margin",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{margin:!0,style:t,innerRef:n})})))})}).add("square to big square",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),n?m.createElement(h.k,{name:"square-to-big-square",key:"2"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(j,{style:t,innerRef:n})})):m.createElement(h.k,{name:"square-to-big-square",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:t,innerRef:n})})))})}).add("square to rectangle",function(){return m.createElement(g.a,null,function(e){var n=e.shown,r=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:r},"toggle"),n?m.createElement(h.k,{name:"square-to-rectangle",key:"2"},m.createElement(h.g,null,function(e){var n=e.ref,r=e.style;return m.createElement(z,{src:t(203),margin:!0,style:r,innerRef:n})})):m.createElement(h.k,{name:"square-to-rectangle",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:t,innerRef:n})})))})}).add("square to circle",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),n?m.createElement(h.k,{name:"square-to-circle",key:"2"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(A,{style:t,innerRef:n})})):m.createElement(h.k,{name:"square-to-circle",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:t,innerRef:n})})))})}).add("offscreen big square to small square",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement(C,null,m.createElement(b.a,{onClick:t},"toggle"),n?m.createElement(h.k,{name:"offscreen-big-square-to-small-square",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:t,innerRef:n})})):m.createElement("div",null,m.createElement(R,{"data-big":!0}),m.createElement(h.k,{name:"offscreen-big-square-to-small-square",key:"2"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(j,{style:t,innerRef:n})}))))})}).add("square to offscreen big square with margin",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),n?m.createElement("div",null,m.createElement(R,{"data-yolo":!0}),m.createElement(h.k,{name:"square-to-offscreen-big-square-with-margin",key:"2"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(j,{margin:!0,style:t,innerRef:n})}))):m.createElement(h.k,{name:"square-to-offscreen-big-square-with-margin",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{margin:!0,style:t,innerRef:n})})))})}).add("indescriminate size to square",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),n?m.createElement("div",null,m.createElement(h.k,{name:"indescriminate-size-to-square",key:"2"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(j,{margin:!0,style:t,innerRef:n})}))):m.createElement(P,null,m.createElement(h.k,{name:"indescriminate-size-to-square",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(q,{style:t,innerRef:n})}))))})}).add("long page that saves scroll position",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),n?m.createElement("div",null,m.createElement(x.a,null),m.createElement(h.k,{name:"long-scroll-to-no-scroll",key:"2"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(j,{margin:!0,style:t,innerRef:n})}))):m.createElement(C,null,m.createElement(w,null),m.createElement(_,null),m.createElement(h.k,{name:"long-scroll-to-no-scroll",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:t,innerRef:n})}))))})}).add("one element never unmounting",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),!n&&m.createElement(h.k,{name:"one-already-mounted",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:v({},t,{float:"left"}),innerRef:n})})),m.createElement(h.k,{name:"one-already-mounted",key:"2",in:!!n},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(O,{style:v({},t),innerRef:n})})))})}).add("one element never unmounting reversed",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),n&&m.createElement(h.k,{name:"one-already-mounted-reversed",key:"1"},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:v({},t,{position:"fixed",top:0,left:0}),innerRef:n})})),m.createElement(C,null,m.createElement("br",null),m.createElement("br",null),m.createElement("br",null),m.createElement("br",null),m.createElement(h.k,{name:"one-already-mounted-reversed",key:"2",in:!n},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(O,{style:t,innerRef:n})}))))})}).add("both elements never unmounting",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),m.createElement(h.k,{name:"both-already-mounted",key:"1",in:!n},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:v({},t,{float:"left"}),innerRef:n})})),m.createElement(h.k,{name:"both-already-mounted",key:"2",in:!!n},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(O,{style:v({},t),innerRef:n})})))})}).add("both elements never unmounting reversed",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},"toggle"),m.createElement(h.k,{name:"both-already-mounted-reversed",key:"1",in:!!n},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:v({},t,{float:"left"}),innerRef:n})})),m.createElement(h.k,{name:"both-already-mounted-reversed",key:"2",in:!n},m.createElement(h.g,null,function(e){var n=e.ref,t=e.style;return m.createElement(O,{style:v({},t),innerRef:n})})))})}).add("aborting",function(){return m.createElement(g.a,null,function(e){var n=e.shown,t=e.toggle;return m.createElement("div",null,m.createElement(b.a,{onClick:t},n?"abort":"toggle"),n?m.createElement(h.k,{name:"aborting",key:"2"},function(e){var n=e.ref,t=e.style;return m.createElement(O,{style:t,innerRef:n})}):m.createElement(h.k,{name:"aborting",key:"1"},m.createElement(h.g,{duration:5e3},function(e){var n=e.ref,t=e.style;return m.createElement(k,{style:t,innerRef:n})})))})})}.call(this,t(32)(e))},641:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a,o,i,l,c,s,u,p,f,m,d,h,g,b=t(0),y=t(2),x=t(15),E=t(223),v=t.n(E),w=t(8),k=t(5),O=t(1),j=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},_=function(){return(_=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},C=y.a.div(n||(n=j(["\n  min-height: 120vh;\n  padding-top: 200px;\n  position: relative;\n  background-color: #fbfbfb;\n  box-sizing: border-box;\n  font-family: Roboto, sans-serif;\n\n  * {\n    box-sizing: border-box;\n  }\n"],["\n  min-height: 120vh;\n  padding-top: 200px;\n  position: relative;\n  background-color: #fbfbfb;\n  box-sizing: border-box;\n  font-family: Roboto, sans-serif;\n\n  * {\n    box-sizing: border-box;\n  }\n"]))),R=y.a.div(r||(r=j(["\n  padding-top: 110px;\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 16px;\n  max-width: 800px;\n  margin: 0 auto;\n"],["\n  padding-top: 110px;\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 16px;\n  max-width: 800px;\n  margin: 0 auto;\n"]))),A=y.a.div(a||(a=j(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  box-shadow: 0 1px 40px rgba(32, 33, 36, 0.1);\n  background-color: #fff;\n  border-radius: 3px;\n  z-index: 1;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  box-shadow: 0 1px 40px rgba(32, 33, 36, 0.1);\n  background-color: #fff;\n  border-radius: 3px;\n  z-index: 1;\n"]))),z=y.a.div(o||(o=j(["\n  position: relative;\n  height: 130px;\n  z-index: 1;\n  transition: transform ease-in-out 200ms, box-shadow ease-in-out 100ms;\n  cursor: pointer;\n  font-family: Roboto, sans-serif;\n\n  :hover {\n    box-shadow: 0 1px 50px rgba(32, 33, 36, 0.2);\n    transform: translateY(-2px);\n  }\n"],["\n  position: relative;\n  height: 130px;\n  z-index: 1;\n  transition: transform ease-in-out 200ms, box-shadow ease-in-out 100ms;\n  cursor: pointer;\n  font-family: Roboto, sans-serif;\n\n  :hover {\n    box-shadow: 0 1px 50px rgba(32, 33, 36, 0.2);\n    transform: translateY(-2px);\n  }\n"]))),P=y.a.div(i||(i=j(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 8px;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  z-index: 999;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 8px;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  z-index: 999;\n"]))),q=y.a.div(l||(l=j(["\n  width: 600px;\n  height: 100vh;\n  z-index: 1;\n  margin: 0 auto;\n  position: relative;\n\n  * {\n    box-sizing: border-box;\n  }\n"],["\n  width: 600px;\n  height: 100vh;\n  z-index: 1;\n  margin: 0 auto;\n  position: relative;\n\n  * {\n    box-sizing: border-box;\n  }\n"]))),T=y.a.div(c||(c=j(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 999;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 999;\n"]))),F=y.a.div(s||(s=j(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 50px rgba(32, 33, 36, 0.2);\n  font-family: Roboto, sans-serif;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 50px rgba(32, 33, 36, 0.2);\n  font-family: Roboto, sans-serif;\n"]))),M=y.a.div(u||(u=j(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: #3c71ca;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/vQ3jAr1UBy_9fC4Fhz2Ao6tFBTw=/0x0:3000x2000/1820x1213/filters:focal(1883x395:2363x875):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60002177/OvechkinWins_Getty_Ringer.0.jpg');\n  background-size: cover;\n  background-position: top center;\n  z-index: 0;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: #3c71ca;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/vQ3jAr1UBy_9fC4Fhz2Ao6tFBTw=/0x0:3000x2000/1820x1213/filters:focal(1883x395:2363x875):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60002177/OvechkinWins_Getty_Ringer.0.jpg');\n  background-size: cover;\n  background-position: top center;\n  z-index: 0;\n"]))),W=y.a.div(p||(p=j(["\n  max-width: 1000px;\n  margin: 0 auto;\n  height: 400px;\n  background-color: #cf132b;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/vQ3jAr1UBy_9fC4Fhz2Ao6tFBTw=/0x0:3000x2000/1820x1213/filters:focal(1883x395:2363x875):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60002177/OvechkinWins_Getty_Ringer.0.jpg');\n  background-size: cover;\n  background-position: top center;\n"],["\n  max-width: 1000px;\n  margin: 0 auto;\n  height: 400px;\n  background-color: #cf132b;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/vQ3jAr1UBy_9fC4Fhz2Ao6tFBTw=/0x0:3000x2000/1820x1213/filters:focal(1883x395:2363x875):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60002177/OvechkinWins_Getty_Ringer.0.jpg');\n  background-size: cover;\n  background-position: top center;\n"]))),D=y.a.div(f||(f=j(["\n  margin: 0 16px;\n  width: 125px;\n  height: 100px;\n  background-color: #f1f1f1;\n  flex-shrink: 0;\n"],["\n  margin: 0 16px;\n  width: 125px;\n  height: 100px;\n  background-color: #f1f1f1;\n  flex-shrink: 0;\n"]))),B=y.a.img(m||(m=j(["\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n"],["\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n"]))),I=Object(y.a)(D)(d||(d=j(["\n  width: 100%;\n  height: 266px;\n  margin: 0;\n  border-radius: 3px 3px 0 0;\n"],["\n  width: 100%;\n  height: 266px;\n  margin: 0;\n  border-radius: 3px 3px 0 0;\n"]))),S=y.a.div(h||(h=j(["\n  font-size: 20px;\n  font-family: Roboto, sans-serif;\n  margin: 16px;\n  text-align: center;\n  text-transform: uppercase;\n"],["\n  font-size: 20px;\n  font-family: Roboto, sans-serif;\n  margin: 16px;\n  text-align: center;\n  text-transform: uppercase;\n"]))),N=y.a.div(g||(g=j(["\n  position: absolute;\n  top: 400px;\n  left: 0;\n  right: 0;\n  text-transform: uppercase;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  font-size: 200px;\n  width: 100%;\n  overflow: hidden;\n  flex-wrap: wrap;\n  padding: 20px;\n  pointer-events: none;\n  font-weight: bold;\n"],["\n  position: absolute;\n  top: 400px;\n  left: 0;\n  right: 0;\n  text-transform: uppercase;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  font-size: 200px;\n  width: 100%;\n  overflow: hidden;\n  flex-wrap: wrap;\n  padding: 20px;\n  pointer-events: none;\n  font-weight: bold;\n"]))),L=[{name:"Alexander Ovechkin",image:t(642)},{name:"T.J Oshie",image:t(643)},{name:"Braden Holtby",image:t(644)},{name:"Nathan Walker",image:t(645)},{name:"Nicklas Backstrom",image:t(646)},{name:"Evgeny Kuznetsov",image:t(647)},{name:"Devante Smith-Pelly",image:t(648)},{name:"Lars Eller",image:t(649)},{name:"John Carlson",image:t(650)}];Object(x.storiesOf)("Examples/Cards",e).add("cross fade move",function(){return b.createElement(k.a,null,function(e){var n=e.shown,t=e.toggle,r=e.set;return b.createElement(C,null,!!n||b.createElement(R,null,L.map(function(e,n){return b.createElement(z,{key:n,onClick:function(){return r(""+n)}},b.createElement(O.a,null,function(t){return b.createElement(b.Fragment,null,b.createElement(O.k,{name:n+"-card"},b.createElement(O.f,{zIndex:999},function(e){var n=e.style,t=e.ref;return b.createElement(A,{style:n,innerRef:t})})),b.createElement(P,_({},t),b.createElement(O.k,{name:n+"-card-image"},b.createElement(O.f,{zIndex:1e3},function(n){var t=n.style,r=n.ref;return b.createElement(D,{style:t,innerRef:r},b.createElement(B,{src:e.image}))})),e.name))}))})),!!n&&b.createElement(q,null,b.createElement(O.a,null,function(e){return b.createElement(b.Fragment,null,b.createElement(T,_({},e),b.createElement(w.c,{color:"default","aria-label":"Menu",style:_({top:5,left:5,position:"absolute"},e.style),onClick:t},b.createElement(v.a,{color:"inherit"})),b.createElement(O.k,{name:n+"-card-image"},b.createElement(O.f,{zIndex:1e3},function(e){var t=e.style,r=e.ref;return b.createElement(I,{style:t,innerRef:r},b.createElement(B,{src:L["string"==typeof n?n:0].image}))})),b.createElement(S,null,L["string"==typeof n?n:0].name)),b.createElement(O.k,{name:n+"-card"},b.createElement(O.f,{zIndex:999},function(e){var n=e.style,t=e.ref;return b.createElement(F,{style:n,innerRef:t})})))})),b.createElement(M,null,b.createElement(W,null)),b.createElement(N,null,"Stanley Cup Champs".split("").map(function(e){return b.createElement("span",{key:e},e)})))})})}.call(this,t(32)(e))},642:function(e,n,t){e.exports=t.p+"1f49f2dbe2917f8b593d9a074d5b3f89.jpg"},643:function(e,n,t){e.exports=t.p+"d41948375fda33296cd89e2e7e9c7469.jpeg"},644:function(e,n,t){e.exports=t.p+"de8e342f45cd43b9b798d5392f69571c.jpg"},645:function(e,n,t){e.exports=t.p+"7f8647c8180bf8a178085b2f13e8d329.jpg"},646:function(e,n,t){e.exports=t.p+"38e086998e4a2efdb3945fc5c72b555b.jpg"},647:function(e,n,t){e.exports=t.p+"5d56a4b1a06dd14868cb6b9c204d8709.jpg"},648:function(e,n,t){e.exports=t.p+"258470dfb76e85d4b196e6a0856b4c22.jpg"},649:function(e,n,t){e.exports=t.p+"bc0dd211cbb76d48363130c0821cc806.jpg"},650:function(e,n,t){e.exports=t.p+"ab8342d6dd07056718e58bb0493f5016.jpg"},67:function(e,n,t){"use strict";var r=[{name:"In a Perfect World",artist:"Kodaline",recentlyAdded:!0,heroBg:"",color:"#223350",albumArt:t(745),songs:[{name:"One Day",time:"4:15"},{name:"All I Want",time:"5:05"},{name:"Love Like This",time:"3:36"},{name:"High Hopes",time:"3:50"},{name:"Brand New Day",time:"3:25"},{name:"After The Fall",time:"3:35"},{name:"Big Bad World",time:"4:21"},{name:"All Comes Down",time:"4:55"},{name:"Talk",time:"4:28"},{name:"Pray",time:"3:33"},{name:"Way Back When",time:"3:26"}],emphasis:!0},{name:"Supermodel",artist:"Foster the People",heroBg:"",color:"#265968",albumArt:t(746),songs:[{name:"Are You What You Want to Be?",time:"4:30"},{name:"Ask Yourself",time:"4:23"},{name:"Coming of Age",time:"4:40"},{name:"Nevermind",time:"5:17"},{name:"Pseudologia Fantastica",time:"5:31"},{name:"The Angelic Welcome of Mr. Jones",time:"0:33"},{name:"Best Friend",time:"4:28"},{name:"A Beginner's Guide to Destroying the Moon",time:"5:09"},{name:"The Truth",time:"4:22"},{name:"Fire Escape",time:"4:29"}]},{name:"Halcyon Days",artist:"Ellie Goulding",heroBg:"",color:"#78014f",albumArt:t(747),songs:[{name:"Don't Say a Word",time:"4:07"},{name:"My Blood",time:"3:54"},{name:"Anything Could Happen",time:"4:47"},{name:"Only You",time:"3:51"},{name:"Halcyon",time:"3:25"},{name:"Figure 8",time:"4:08"},{name:"Joy",time:"3:14"},{name:"Hanging On",time:"3:22"},{name:"Explosions",time:"4:03"},{name:"I Know You Care",time:"3:26"},{name:"Atlantis",time:"3:53"},{name:"Dead in the Water",time:"4:44"},{name:"I Need Your Love (Calvin Harris featuring Ellie Goulding) (bonus track)",time:"3:58"},{name:"Burn",time:"3:51"},{name:"Goodness Gracious",time:"3:46"},{name:"You My Everything",time:"3:29"},{name:"Hearts Without Chains",time:"3:45"},{name:"Stay Awake (with Madeon)",time:"3:26"},{name:"Under Control",time:"4:06"},{name:"Flashlight (with DJ Fresh)",time:"3:33"},{name:"How Long Will I Love You (bonus track)",time:"2:34"}]},{name:"Native",artist:"One Republic",heroBg:"",color:"#aa003a",albumArt:t(748),songs:[]},{name:"Comedown Machine",artist:"The Strokes",heroBg:"",albumArt:t(749),color:"#92010d",songs:[]},{name:"G I R L",artist:"Pharrell Williams",heroBg:t(750),albumArt:t(751),color:"#f7bb0e",songs:[{name:"Marilyn Monroe",time:"5:51"},{name:"Brand New (duet with Justin Timberlake)",time:"4:31"},{name:"Hunter",time:"4:00"},{name:"Gush",time:"3:54"},{name:"Happy",time:"3:53"},{name:"Come Get It Bae",time:"3:21"},{name:"Gust of Wind",time:"4:45"},{name:"Lost Queen",time:"7:56"},{name:"Know Who You Are (duet with Alicia Keys)",time:"3:56"},{name:"It Girl",time:"4:49"}],emphasis:!0},{name:"Jamie Lidell",artist:"Jamie Lidell",heroBg:"",color:"#aba9a2",albumArt:t(752),songs:[]},{name:"Rumours",artist:"Fleetwood Mac",heroBg:"",color:"#bdb27b",albumArt:t(753),songs:[]},{name:"Holy Fire",artist:"Foals",heroBg:"",color:"#b19f46",albumArt:t(754),songs:[]}];n.a=r},7:function(e,n,t){"use strict";var r,a=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},o=t(2).a.button(r||(r=a(["\n  position: fixed;\n  bottom: 10px;\n  left: 10px;\n  font-size: 20px;\n  border-radius: 4px;\n  background-color: #ccc;\n  border: 2px solid grey;\n  padding: 8px;\n  z-index: 999;\n"],["\n  position: fixed;\n  bottom: 10px;\n  left: 10px;\n  font-size: 20px;\n  border-radius: 4px;\n  background-color: #ccc;\n  border: 2px solid grey;\n  padding: 8px;\n  z-index: 999;\n"])));n.a=o},734:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a,o,i,l,c,s,u,p,f,m,d,h,g,b,y,x,E,v,w,k,O,j=t(15),_=t(0),C=t(2),R=t(224),A=t.n(R),z=t(223),P=t.n(z),q=t(8),T=t(5),F=t(1),M=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},W=function(){return(W=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},D=C.a.div(n||(n=M(["\n  position: relative;\n  width: 400px;\n  max-height: 666px;\n  overflow: auto;\n  border-radius: 2px;\n  box-shadow: 0 1px 50px rgba(32, 33, 36, 0.1);\n  border: 1px solid rgba(32, 33, 36, 0.1);\n  box-sizing: border-box;\n  font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n  user-select: none;\n\n  * {\n    box-sizing: border-box;\n    user-select: none;\n  }\n"],["\n  position: relative;\n  width: 400px;\n  max-height: 666px;\n  overflow: auto;\n  border-radius: 2px;\n  box-shadow: 0 1px 50px rgba(32, 33, 36, 0.1);\n  border: 1px solid rgba(32, 33, 36, 0.1);\n  box-sizing: border-box;\n  font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n  user-select: none;\n\n  * {\n    box-sizing: border-box;\n    user-select: none;\n  }\n"]))),B=C.a.header(r||(r=M(["\n  padding: 5px;\n  color: rgba(0, 0, 0, 0.87);\n  display: flex;\n"],["\n  padding: 5px;\n  color: rgba(0, 0, 0, 0.87);\n  display: flex;\n"]))),I=C.a.div(a||(a=M(["\n  background: url(",") no-repeat;\n  background-position: 0 -374px;\n  background-size: 167px;\n  height: 36px;\n  width: 92px;\n  margin-left: 92px;\n  margin-top: 10px;\n"],["\n  background: url(",") no-repeat;\n  background-position: 0 -374px;\n  background-size: 167px;\n  height: 36px;\n  width: 92px;\n  margin-left: 92px;\n  margin-top: 10px;\n"])),t(735)),S=C.a.div(o||(o=M(["\n  height: 80px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  border-radius: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n"],["\n  height: 80px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  border-radius: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n"]))),N=C.a.div(i||(i=M(["\n  height: 40px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  border-radius: 8px;\n  margin-top: 10px;\n  margin-left: 8px;\n  margin-right: 8px;\n"],["\n  height: 40px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  border-radius: 8px;\n  margin-top: 10px;\n  margin-left: 8px;\n  margin-right: 8px;\n"]))),L=C.a.div(l||(l=M(["\n  padding-top: 10px;\n  white-space: nowrap;\n  overflow: auto;\n  width: 100%;\n  padding-left: 8px;\n  padding-right: 8px;\n"],["\n  padding-top: 10px;\n  white-space: nowrap;\n  overflow: auto;\n  width: 100%;\n  padding-left: 8px;\n  padding-right: 8px;\n"]))),H=C.a.div(c||(c=M(["\n  background-color: #fff;\n  border-radius: 40px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  box-sizing: border-box;\n  display: inline-block;\n  margin-right: 8px;\n  overflow: hidden;\n  padding: 0 16px;\n\n  > span {\n    color: rgba(0, 0, 0, 0.8);\n    display: inline-block;\n    font-size: 14px;\n    font-weight: 300;\n    line-height: 40px;\n    text-decoration: none;\n    white-space: nowrap;\n  }\n"],["\n  background-color: #fff;\n  border-radius: 40px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  box-sizing: border-box;\n  display: inline-block;\n  margin-right: 8px;\n  overflow: hidden;\n  padding: 0 16px;\n\n  > span {\n    color: rgba(0, 0, 0, 0.8);\n    display: inline-block;\n    font-size: 14px;\n    font-weight: 300;\n    line-height: 40px;\n    text-decoration: none;\n    white-space: nowrap;\n  }\n"]))),G=C.a.div(s||(s=M(["\n  margin-bottom: 16px;\n"],["\n  margin-bottom: 16px;\n"]))),U=C.a.img(u||(u=M(["\n  width: 100%;\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.03);\n"],["\n  width: 100%;\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.03);\n"]))),Y=C.a.div(p||(p=M(["\n  color: rgba(32, 33, 36, 0.8);\n  font-size: 11px;\n  letter-spacing: 0.2px;\n  line-height: 14px;\n  max-height: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-top: 4px;\n"],["\n  color: rgba(32, 33, 36, 0.8);\n  font-size: 11px;\n  letter-spacing: 0.2px;\n  line-height: 14px;\n  max-height: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-top: 4px;\n"]))),J=C.a.div(f||(f=M(["\n  color: rgba(117, 117, 117, 0.85);\n  font-size: 10px;\n  height: 14px;\n  letter-spacing: 0.2px;\n  line-height: 14px;\n  overflow: hidden;\n  position: relative;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n"],["\n  color: rgba(117, 117, 117, 0.85);\n  font-size: 10px;\n  height: 14px;\n  letter-spacing: 0.2px;\n  line-height: 14px;\n  overflow: hidden;\n  position: relative;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n"]))),K=C.a.div(m||(m=M(["\n  background-color: rgba(0, 0, 0, 0.03);\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 4px);\n  top: 0;\n  pointer-events: none;\n"],["\n  background-color: rgba(0, 0, 0, 0.03);\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 4px);\n  top: 0;\n  pointer-events: none;\n"]))),Q=C.a.div(d||(d=M(["\n  position: relative;\n"],["\n  position: relative;\n"]))),X=function(e){var n=e.src,t=e.title,r=e.from,a=e.onClick,o=e.in;return _.createElement(G,null,_.createElement(Q,null,_.createElement(F.k,{name:t,in:o},_.createElement(F.g,null,function(e){var t=e.ref,r=e.style;return _.createElement(U,{src:n,onClick:a,innerRef:t,style:r})})),_.createElement(K,null)),_.createElement(Y,null,t),_.createElement(J,null,r))},V=C.a.div(h||(h=M(["\n  margin: 8px;\n  display: flex;\n  justify-content: space-between;\n"],["\n  margin: 8px;\n  display: flex;\n  justify-content: space-between;\n"]))),Z=C.a.div(g||(g=M(["\n  width: calc(50% - 4px);\n"],["\n  width: calc(50% - 4px);\n"]))),$=C.a.div(b||(b=M(["\n  position: fixed;\n  top: 8px;\n  height: 666px;\n  width: 400px;\n  overflow: auto;\n"],["\n  position: fixed;\n  top: 8px;\n  height: 666px;\n  width: 400px;\n  overflow: auto;\n"]))),ee=C.a.div(y||(y=M(["\n  color: #000000;\n  display: block;\n  font-size: 20px;\n  line-height: 30px;\n  margin-right: 32px;\n  max-height: 60px;\n  overflow: hidden;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  white-space: normal;\n  word-wrap: break-word;\n"],["\n  color: #000000;\n  display: block;\n  font-size: 20px;\n  line-height: 30px;\n  margin-right: 32px;\n  max-height: 60px;\n  overflow: hidden;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  white-space: normal;\n  word-wrap: break-word;\n"]))),ne=C.a.img(x||(x=M(["\n  background-color: #fff;\n  background-image: -webkit-linear-gradient(\n      45deg,\n      #efefef 25%,\n      transparent 25%,\n      transparent 75%,\n      #efefef 75%,\n      #efefef\n    ),\n    -webkit-linear-gradient(45deg, #efefef 25%, transparent 25%, transparent 75%, #efefef 75%, #efefef);\n  background-position: 0 0, 10px 10px;\n  background-size: 21px 21px;\n  width: 100%;\n"],["\n  background-color: #fff;\n  background-image: -webkit-linear-gradient(\n      45deg,\n      #efefef 25%,\n      transparent 25%,\n      transparent 75%,\n      #efefef 75%,\n      #efefef\n    ),\n    -webkit-linear-gradient(45deg, #efefef 25%, transparent 25%, transparent 75%, #efefef 75%, #efefef);\n  background-position: 0 0, 10px 10px;\n  background-size: 21px 21px;\n  width: 100%;\n"]))),te=C.a.div(E||(E=M(["\n  padding: 16px;\n  margin-bottom: 16px;\n"],["\n  padding: 16px;\n  margin-bottom: 16px;\n"]))),re=C.a.div(v||(v=M(["\n  color: #70757a;\n  font-size: 12px;\n  margin-top: 16px;\n"],["\n  color: #70757a;\n  font-size: 12px;\n  margin-top: 16px;\n"]))),ae=C.a.div(w||(w=M(["\n  color: #202124;\n  font-size: 12px;\n  font-weight: bold;\n  letter-spacing: 0.75px;\n  line-height: 16px;\n  text-decoration: none;\n  text-transform: uppercase;\n  margin: 8px;\n"],["\n  color: #202124;\n  font-size: 12px;\n  font-weight: bold;\n  letter-spacing: 0.75px;\n  line-height: 16px;\n  text-decoration: none;\n  text-transform: uppercase;\n  margin: 8px;\n"]))),oe=C.a.div(k||(k=M(["\n  transition: opacity ease-out 200ms;\n  background: #fff;\n  margin-top: -4px;\n"],["\n  transition: opacity ease-out 200ms;\n  background: #fff;\n  margin-top: -4px;\n"]))),ie=C.a.div(O||(O=M(["\n  transition: opacity 500ms;\n  opacity: ",";\n"],["\n  transition: opacity 500ms;\n  opacity: ",";\n"])),function(e){return e.in?1:0}),le=function(e){var n=e.src,r=e.title,a=e.onClick;return _.createElement(F.a,{name:r},function(e){return _.createElement($,null,_.createElement(q.c,{color:"default","aria-label":"Menu",style:W({top:0,left:0,position:"absolute"},e.style),onClick:a},_.createElement(P.a,{color:"inherit"})),_.createElement(F.k,{name:r},_.createElement(F.g,null,function(e){var t=e.ref,r=e.style;return _.createElement(ne,{src:n,innerRef:t,style:r})})),_.createElement(oe,W({},e),_.createElement(ie,{in:"hidden"!==e.style.visibility},_.createElement(te,null,_.createElement(ee,null,r),_.createElement(re,null,"Images may be subject to copyright.")),_.createElement(V,null,_.createElement(ae,null,"Related images"),_.createElement(ae,null,"See more")),_.createElement(V,null,_.createElement(Z,null,_.createElement(X,{src:t(89),title:"Washington Capitals - Wikipedia 1",from:"en.wikipedia.org"}),_.createElement(X,{src:t(89),title:"Washington Capitals - Wikipedia 2",from:"en.wikipedia.org"}),_.createElement(X,{src:t(89),title:"Washington Capitals - Wikipedia 3",from:"en.wikipedia.org"})),_.createElement(Z,null,_.createElement(X,{src:t(89),title:"Washington Capitals - Wikipedia 4",from:"en.wikipedia.org"}),_.createElement(X,{src:t(89),title:"Washington Capitals - Wikipedia 5",from:"en.wikipedia.org"}),_.createElement(X,{src:t(89),title:"Washington Capitals - Wikipedia 6",from:"en.wikipedia.org"}))))))})};Object(j.storiesOf)("Examples/ImageSearch",e).add("flip move",function(){return _.createElement(T.a,null,function(e){var n=e.toggle,r=e.shown;return _.createElement(D,null,_.createElement(B,null,_.createElement(q.c,{color:"default","aria-label":"Menu",style:{marginRight:"10px"}},_.createElement(A.a,null)),_.createElement(I,null)),_.createElement(S,null),_.createElement(N,null),_.createElement(L,null,_.createElement(H,null,_.createElement("span",null,"alex ovechkin")),_.createElement(H,null,_.createElement("span",null,"blue jackets")),_.createElement(H,null,_.createElement("span",null,"maple leafs")),_.createElement(H,null,_.createElement("span",null,"stanley cup"))),_.createElement(V,null,_.createElement(Z,null,_.createElement(X,{src:t(736),title:"Official Washington Capitals Website | NHL.com",from:"nhl.com",onClick:n}),_.createElement(X,{src:t(737),title:"Washington Capitals: 2017 Season Preview, Predictions",from:"puckprose.com",onClick:n}),_.createElement(X,{src:t(738),title:"The Washington Capitals are up to their old tricks again ...",from:"nhl.nbcsports.com",onClick:n})),_.createElement(Z,null,_.createElement(X,{src:t(89),title:"Washington Capitals - Wikipedia",from:"en.wikipedia.org",onClick:n,in:!r}),_.createElement(X,{src:t(739),title:"Washington Capitals - Home | Facebook",from:"facebook.com",onClick:n}),_.createElement(X,{src:t(740),title:"Capitals Announce 2017-18 Preseason Schedule",from:"nhl.com",onClick:n}))),r&&_.createElement(le,{src:t(89),title:"Washington Capitals - Wikipedia",from:"en.wikipedia.org",onClick:n}))})})}.call(this,t(32)(e))},735:function(e,n,t){e.exports=t.p+"d75f9c3df130d106af0440a53f353832.webp"},736:function(e,n,t){e.exports=t.p+"7518485cd73110a71e757b9b5a09b1ce.png"},737:function(e,n,t){e.exports=t.p+"0d3eb8a2f4a4203789b9c8dd1f47e6a3.jpeg"},738:function(e,n,t){e.exports=t.p+"c6133f3e97e4e5d50d9ff44b862a008f.jpeg"},739:function(e,n,t){e.exports=t.p+"0eaba7acd81bd95ddfb0e018de3bfc48.png"},740:function(e,n,t){e.exports=t.p+"9c0a1694a8a35d7e6a1dca6638631e84.jpeg"},741:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a,o,i,l=t(15),c=t(0),s=t(2),u=t(225),p=t.n(u),f=t(412),m=t.n(f),d=t(8),h=t(5),g=t(1),b=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},y=s.a.div(n||(n=b(["\n  position: relative;\n  width: 400px;\n  max-height: 600px;\n  overflow: auto;\n  border-radius: 3px;\n  background-color: #ccc;\n"],["\n  position: relative;\n  width: 400px;\n  max-height: 600px;\n  overflow: auto;\n  border-radius: 3px;\n  background-color: #ccc;\n"]))),x=s.a.div(r||(r=b(["\n  border-radius: 3px;\n  height: 600px;\n  padding-top: 20px;\n"],["\n  border-radius: 3px;\n  height: 600px;\n  padding-top: 20px;\n"]))),E=s.a.div(a||(a=b(["\n  margin: 10px 30px;\n  height: 50px;\n  border-radius: 8px;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16), 0 0 0 1px rgba(0, 0, 0, 0.08);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  background: white;\n"],["\n  margin: 10px 30px;\n  height: 50px;\n  border-radius: 8px;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16), 0 0 0 1px rgba(0, 0, 0, 0.08);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  background: white;\n"]))),v=s.a.input(o||(o=b(["\n  border: none;\n  outline: none;\n  line-height: 25px;\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0 0 0 16px;\n  font-size: 16px;\n  word-wrap: break-word;\n  outline: none;\n  display: flex;\n  flex: 1;\n  -webkit-tap-highlight-color: transparent;\n  width: 100%;\n  color: inherit;\n"],["\n  border: none;\n  outline: none;\n  line-height: 25px;\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0 0 0 16px;\n  font-size: 16px;\n  word-wrap: break-word;\n  outline: none;\n  display: flex;\n  flex: 1;\n  -webkit-tap-highlight-color: transparent;\n  width: 100%;\n  color: inherit;\n"]))),w=s.a.div(i||(i=b(["\n  display: flex;\n  justify-content: center;\n  color: rgba(0, 0, 0, 0.87);\n  border-bottom: 1px solid #dfe1e5;\n  height: 50px;\n  position: fixed;\n  margin-top: 8px;\n  margin-left: 8px;\n  top: 0;\n  left: 0;\n  width: 400px;\n  background: white;\n"],["\n  display: flex;\n  justify-content: center;\n  color: rgba(0, 0, 0, 0.87);\n  border-bottom: 1px solid #dfe1e5;\n  height: 50px;\n  position: fixed;\n  margin-top: 8px;\n  margin-left: 8px;\n  top: 0;\n  left: 0;\n  width: 400px;\n  background: white;\n"])));Object(l.storiesOf)("Examples/FloatingSearchBar",e).add("cross fade move",function(){return c.createElement(h.a,null,function(e){var n=e.shown,t=e.toggle;return c.createElement(y,null,c.createElement(x,null,n||c.createElement(g.k,{name:"google-searchbar"},c.createElement(g.f,{duration:150,timingFunction:""},function(e){var n=e.ref,r=e.style;return c.createElement(E,{onClick:t,innerRef:n,style:r},c.createElement(d.c,{color:"default","aria-label":"Menu",style:{marginLeft:"auto "}},c.createElement(m.a,{colorRendering:"blue"})))})),n&&c.createElement(g.k,{name:"google-searchbar"},c.createElement(g.f,{duration:150,timingFunction:""},function(e){var n=e.ref,r=e.style;return c.createElement(w,{innerRef:n,style:r},c.createElement(d.c,{color:"default","aria-label":"Menu",onClick:t},c.createElement(p.a,{color:"inherit"})),c.createElement(v,{autoFocus:!0,placeholder:"Search or type URL"}),c.createElement(d.c,{color:"default","aria-label":"Menu"},c.createElement(m.a,{colorRendering:"blue"})))}))))})})}.call(this,t(32)(e))},742:function(e,n,t){"use strict";t.r(n),function(e){var n,r=t(0),a=t(2),o=t(15),i=t(1),l=t(5),c=t(7),s=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},u=function(){return(u=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},p=a.a.div(n||(n=s(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"],["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"]))),f=function(e){var n=e.children,t=e.duration;return r.createElement(i.d,{data:{action:i.e.animation,payload:{beforeAnimate:function(e,n){n()},animate:function(e,n){setTimeout(n,t)},afterAnimate:function(e,n){n()}}}},n)};Object(o.storiesOf)("Examples/Manager",e).add("with no manager",function(){return r.createElement(l.a,null,function(e){var n=e.shown,t=e.toggle;return r.createElement("div",null,r.createElement(c.a,{onClick:t},"toggle"),n?r.createElement(p,null,"hi im content around the baba target i will be shown immediately",r.createElement(i.k,{name:"manager-example-1",key:"2"},function(e){var n=e.ref,t=e.style;return r.createElement("div",{style:t,ref:n},"hi im the destination target i will be shown when all animations have finished")})):r.createElement(p,null,r.createElement(i.k,{name:"manager-example-1",key:"1"},r.createElement(f,{duration:500},function(e){var n=e.ref,t=e.style;return r.createElement("div",{style:t,ref:n},"hi im the source target")}))))})}).add("with manager",function(){return r.createElement(l.a,null,function(e){var n=e.shown,t=e.toggle;return r.createElement("div",null,r.createElement(c.a,{onClick:t},"toggle"),n?r.createElement(i.a,null,function(e){return r.createElement(p,u({},e),"hi im content around the baba target i will be shown after all animations have finished",r.createElement(i.k,{name:"manager-example-2",key:"2"},function(e){var n=e.ref,t=e.style;return r.createElement("div",{style:t,ref:n},"hi im the destination target i will be shown when all animations have finished")}))}):r.createElement(p,null,r.createElement(i.k,{name:"manager-example-2",key:"1"},r.createElement(f,{duration:500},function(e){var n=e.ref,t=e.style;return r.createElement("div",{style:t,ref:n},"hi im the source target")}))))})})}.call(this,t(32)(e))},743:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a,o,i=t(2),l=t(0),c=t(15),s=t(136),u=t.n(s),p=t(1),f=t(5),m=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},d=function(){return(d=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},h=i.a.img(n||(n=m(["\n  width: 120px;\n  height: 160px;\n  box-sizing: border-box;\n  cursor: pointer;\n"],["\n  width: 120px;\n  height: 160px;\n  box-sizing: border-box;\n  cursor: pointer;\n"]))),g=i.a.img(r||(r=m(["\n  width: 360px;\n  height: 480px;\n  cursor: pointer;\n"],["\n  width: 360px;\n  height: 480px;\n  cursor: pointer;\n"]))),b=i.a.div(a||(a=m(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ",";\n  height: 100vh;\n"],["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ",";\n  height: 100vh;\n"])),function(e){return e.background}),y=Object(i.a)(u.a)(o||(o=m(["\n  margin: 0;\n  background-color: #db6f59;\n"],["\n  margin: 0;\n  background-color: #db6f59;\n"])));Object(c.storiesOf)("Examples/GuessWho",e).add("move",function(){return l.createElement(f.a,null,function(e){var n=e.shown,r=e.toggle;return l.createElement("div",null,l.createElement(y,{className:""}),n?l.createElement(b,{background:"#37a7e0"},l.createElement(p.k,{name:"guess-move",key:"2"},function(e){var n=e.ref,a=e.style;return l.createElement(g,{onClick:r,src:t(119),style:a,innerRef:n})})):l.createElement(b,{background:"#db6f59"},l.createElement(p.k,{name:"guess-move",key:"1"},l.createElement(p.h,null,function(e){var n=e.ref,a=e.style;return l.createElement(h,{onClick:r,src:t(28),style:a,innerRef:n})}))))})}).add("expand and move",function(){return l.createElement(f.a,null,function(e){var n=e.shown,r=e.toggle;return l.createElement("div",null,l.createElement(y,{className:""}),n?l.createElement(b,{background:"#37a7e0"},l.createElement(p.k,{name:"guess-expand-and-move",key:"2"},function(e){var n=e.ref,a=e.style;return l.createElement(g,{onClick:r,src:t(119),style:a,innerRef:n})})):l.createElement(b,{background:"#db6f59"},l.createElement(p.k,{name:"guess-expand-and-move",key:"1"},l.createElement(p.b,{background:"#fcce2e"},l.createElement(p.h,null,function(e){var n=e.ref,a=e.style;return l.createElement(h,{onClick:r,src:t(28),style:a,innerRef:n})})))))})}).add("expand then move",function(){return l.createElement(f.a,null,function(e){var n=e.shown,r=e.toggle;return l.createElement("div",null,l.createElement(y,{className:""}),n?l.createElement(b,{background:"#37a7e0"},l.createElement(p.k,{name:"guess-expand-then-move",key:"2"},function(e){var n=e.ref,a=e.style;return l.createElement(g,{onClick:r,src:t(119),style:a,innerRef:n})})):l.createElement(b,{background:"#db6f59"},l.createElement(p.k,{name:"guess-expand-then-move",key:"1"},l.createElement(p.b,{background:"#fcce2e"},l.createElement(p.j,null,l.createElement(p.h,null,function(e){var n=e.ref,a=e.style;return l.createElement(h,{onClick:r,src:t(28),style:a,innerRef:n})}))))))})}).add("managed expand then move",function(){return l.createElement(f.a,null,function(e){var n=e.shown,r=e.toggle;return l.createElement("div",null,l.createElement(y,{className:""}),n?l.createElement(p.a,{key:"b"},function(e){return l.createElement(b,d({background:"#37a7e0"},e),l.createElement(p.k,{name:"managed-guess-move-expand",key:"2"},function(e){var n=e.ref,a=e.style;return l.createElement(g,{onClick:r,src:t(119),style:a,innerRef:n})}))}):l.createElement(p.a,{key:"c"},function(e){return l.createElement(b,d({background:"#db6f59"},e),l.createElement(p.k,{name:"managed-guess-move-expand",key:"1"},l.createElement(p.b,{background:"#fcce2e"},l.createElement(p.j,null,l.createElement(p.h,null,function(e){var n=e.ref,a=e.style;return l.createElement(h,{onClick:r,src:t(28),style:a,innerRef:n})})))))}))})}).add("managed move then expand + reverse",function(){return l.createElement(f.a,null,function(e){var n=e.shown,r=e.toggle;return l.createElement("div",null,l.createElement(y,{className:""}),n?l.createElement(p.a,{key:"c"},function(e){return l.createElement(b,d({background:"#37a7e0"},e),l.createElement(p.k,{name:"managed-altogether",key:"1"},l.createElement(p.h,null,l.createElement(p.j,null,l.createElement(p.c,{background:"#37a7e0"},function(e){var n=e.ref,a=e.style;return l.createElement(g,{onClick:r,src:t(119),style:a,innerRef:n})})))))}):l.createElement(p.a,{key:"b"},function(e){return l.createElement(b,d({background:"#db6f59"},e),l.createElement(p.k,{name:"managed-altogether",key:"2"},l.createElement(p.b,{background:"#fcce2e"},l.createElement(p.j,null,l.createElement(p.h,null,function(e){var n=e.ref,a=e.style;return l.createElement(h,{onClick:r,src:t(28),style:a,innerRef:n})})))))}))})})}.call(this,t(32)(e))},744:function(e,n,t){"use strict";t.r(n),function(e){var n,r,a,o,i,l,c=t(2),s=t(0),u=t(15),p=t(136),f=t.n(p),m=t(66),d=t(8),h=t(224),g=t.n(h),b=t(414),y=t.n(b),x=t(191),E=t.n(x),v=t(225),w=t.n(v),k=t(190),O=t(1),j=t(67),_=t(134),C=t(135),R=t(227),A=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},z=(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),P=function(){return(P=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},q=Object(_.a)(),T=c.a.div(r||(r=A(["\n  padding-top: 66px;\n  margin: 0 auto;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ",";\n"],["\n  padding-top: 66px;\n  margin: 0 auto;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ",";\n"])),function(e){return e.background}),F=Object(c.a)(T)(a||(a=A(["\n  position: absolute;\n  top: 0;\n  min-height: 100vh;\n  left: 0;\n  right: 0;\n"],["\n  position: absolute;\n  top: 0;\n  min-height: 100vh;\n  left: 0;\n  right: 0;\n"]))),M=c.a.div(o||(o=A(["\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-template-columns: repeat(5, auto);\n  grid-gap: 4px;\n"],["\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-template-columns: repeat(5, auto);\n  grid-gap: 4px;\n"]))),W=Object(c.a)(f.a)(i||(i=A(["\n  margin: 0;\n  background: #212121;\n"],["\n  margin: 0;\n  background: #212121;\n"]))),D=c.a.div(l||(l=A(["\n  position: fixed;\n  background: ",";\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n  background-size: cover;\n  background-position-y: -110px;\n  background-repeat: no-repeat;\n"],["\n  position: fixed;\n  background: ",";\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n  background-size: cover;\n  background-position-y: -110px;\n  background-repeat: no-repeat;\n"])),function(e){return e.background}),B=Object(m.createMuiTheme)({palette:{primary:{light:"#484848",main:"#212121",dark:"#000000",contrastText:"#fff"}}}),I=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.state={shown:void 0},n.select=function(e){n.setState({shown:e})},n}return z(n,e),n.prototype.getKey=function(){return["multiple-targets","move",this.props.expand&&"expand",this.props.shrink&&"shrink",this.props.wait&&"wait"].filter(Boolean).join("-")},n.prototype.renderItems=function(){var e=this,n=j.a.map(function(n,t){return s.createElement(k.a,P({expand:e.props.expand,baba:e.getKey()+"-"+t,onClick:function(){return e.select(t)},key:t},n))});return s.createElement(O.a,{key:"b"},function(e){return s.createElement(T,P({background:"#212121"},e),s.createElement(q,null),s.createElement(W,{className:""}),s.createElement(M,null,n))})},n.prototype.renderDetails=function(e){var n=this,t=e&&j.a[e].heroBg;return s.createElement(O.a,{key:"c"},function(r){return s.createElement(F,P({background:""},r),s.createElement(D,{background:n.props.expand&&t?"url("+t+")":j.a[e||0].color}),s.createElement(d.a,{position:"fixed",style:{background:"transparent",boxShadow:"none",zIndex:1}},s.createElement(d.i,null,s.createElement(d.c,{color:"inherit","aria-label":"Menu",style:{marginRight:"10px"},onClick:function(){return n.select()}},s.createElement(w.a,null)),s.createElement(d.c,{color:"inherit","aria-label":"Menu",style:{marginLeft:"auto"}},s.createElement(y.a,null)),s.createElement(d.c,{color:"inherit","aria-label":"Menu"},s.createElement(E.a,null)))),s.createElement(W,{className:""}),s.createElement(C.a,null),s.createElement(R.a,P({baba:n.getKey()+"-"+e,shrink:!!n.props.shrink,wait:!!n.props.wait},j.a[e||0])))})},n.prototype.render=function(){return s.createElement(m.MuiThemeProvider,{theme:B},s.createElement(d.a,{position:"fixed",style:{zIndex:1,display:void 0===this.state.shown?"":"none"}},s.createElement(d.i,null,s.createElement(d.c,{color:"inherit","aria-label":"Menu",style:{marginRight:"10px"}},s.createElement(g.a,null)),s.createElement(d.j,{variant:"title",color:"inherit"},"My Library"),s.createElement(d.c,{color:"inherit","aria-label":"Menu",style:{marginLeft:"auto"}},s.createElement(y.a,null)),s.createElement(d.c,{color:"inherit","aria-label":"Menu"},s.createElement(E.a,null)))),void 0!==this.state.shown?this.renderDetails(this.state.shown):this.renderItems())},n}(s.Component);Object(u.storiesOf)("Examples/GoogleMusic",e).add("cross fade move",function(){return s.createElement(I,null)}).add("+ expand",function(){return s.createElement(I,{expand:!0})}).add("+ shrink",function(){return s.createElement(I,{expand:!0,shrink:!0})}).add("+ wait",function(){return s.createElement(I,{expand:!0,shrink:!0,wait:!0})})}.call(this,t(32)(e))},745:function(e,n,t){e.exports=t.p+"1bf5ea6fa68f3a3ee59cd4f5d8262eed.jpg"},746:function(e,n,t){e.exports=t.p+"11dd46941292ae89638a3be527ae6484.jpg"},747:function(e,n,t){e.exports=t.p+"dd9c6058cdd8f0a614e74e6cbc971d8e.png"},748:function(e,n,t){e.exports=t.p+"769bf539a12c7c57612c4e72f5576564.png"},749:function(e,n,t){e.exports=t.p+"7d7e2f008572f6ee7d1e607b7bca2ae2.jpg"},750:function(e,n,t){e.exports=t.p+"bad48182e680328c542cf59ecf505216.jpg"},751:function(e,n,t){e.exports=t.p+"44a26abcd4c6f3633afec92e763a337e.png"},752:function(e,n,t){e.exports=t.p+"bc9d40e307c96c7fbe35493dc959f4da.jpg"},753:function(e,n,t){e.exports=t.p+"2700d718ed66623c214fe7d9823800db.jpg"},754:function(e,n,t){e.exports=t.p+"976fabb3d53e66b5517ffbd06e4ba248.jpeg"},76:function(e,n,t){e.exports=t.p+"2c3da1734e421143edcc7deed2162e53.png"},760:function(e,n,t){"use strict";t.r(n),function(e){var n,r=t(0),a=t(2),o=t(15),i=t(67),l=t(190),c=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},s=function(){return(s=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)},u=a.a.div(n||(n=c(["\n  width: 400px;\n  height: 532px;\n"],["\n  width: 400px;\n  height: 532px;\n"])));Object(o.storiesOf)("Examples/GoogleMusic/Components/Album",e).add("small",function(){return r.createElement(l.a,s({},i.a[0],{baba:"",emphasis:!1}))}).add("large",function(){return r.createElement(u,null,r.createElement(l.a,s({emphasis:!0,baba:""},i.a[0])))})}.call(this,t(32)(e))},761:function(e,n,t){"use strict";t.r(n),function(e){var n=t(0),r=t(15),a=t(67),o=t(227),i=function(){return(i=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)};Object(r.storiesOf)("Examples/GoogleMusic/Components/AlbumDetails",e).add("default",function(){return n.createElement(o.a,i({},a.a[0],{baba:"",shrink:!0,wait:!0}))})}.call(this,t(32)(e))},89:function(e,n,t){e.exports=t.p+"b4734797388651ca2f831faa1bb412e6.png"}},[[612,3,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,