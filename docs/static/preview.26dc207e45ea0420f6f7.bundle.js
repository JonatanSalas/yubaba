(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{103:function(n,e,t){"use strict";t.d(e,"a",function(){return o}),t.d(e,"b",function(){return m});var r,o,i=t(19),a=t.n(i),c=t(7),l=t.n(c),u=t(6),s=t.n(u),f=t(0),p=(r=function(n,e){return(r=s.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?l()(e):(t.prototype=e.prototype,new t)}),d=function(){return(d=a.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)};!function(n){n.animation="animation",n.wait="wait"}(o||(o={}));var m=f.createContext(void 0),h=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return p(e,n),e.prototype.render=function(){var n=this,e=this.props,t=e.children,r=e.style,o=e.className,i=e.data,a=e.receiveRenderChildren,c=e.receiveRef,l=e.receiveData;return"function"!=typeof t?f.createElement(m.Consumer,null,function(e){return f.createElement(m.Provider,{value:{ref:function(n){c&&c(n),e&&e.ref(n)},targetRef:function(t){var r=n.props.receiveTargetRef;r&&r(t),e&&e.targetRef(t)},data:function(n){var t=i?[i].concat(n):n;e&&e.data(t),l&&l(n)},renderChildren:function(n){e&&e.renderChildren(n),a&&a(n)},style:d({},r,e?e.style:{}),className:o||(e?e.className:void 0)}},t)}):f.createElement(m.Consumer,null,function(n){if("function"==typeof t){if(n){var e=i?[i]:[];n.renderChildren(t),n.data(e)}return a&&a(t),f.Children.only(t({className:o||(n?n.className:void 0),ref:function(e){n&&n.ref(e),c&&c(e)},style:n?d({},r,n.style):r||{}}))}throw new Error("Children is guaranteed to be a function. Impossible condition.")})},e}(f.Component);e.c=h},11:function(n,e,t){"use strict";var r,o,i,a,c,l,u,s,f,p,d,m,h,g,b,y,v,x,w=t(7),E=t.n(w),O=t(6),k=t.n(O),j=t(0),_=(r=function(n,e){return(r=k.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?E()(e):(t.prototype=e.prototype,new t)}),P=function(){var n=0;return function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return _(t,e),t.prototype.componentDidMount=function(){window.scrollTo(0,n)},t.prototype.componentWillUnmount=function(){document.body&&(n=document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop||window.pageYOffset)},t.prototype.render=function(){return null},t}(j.Component)},T=function(){var n=function(e,t){return(n=k.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(e,t)};return function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?E()(t):(r.prototype=t.prototype,new r)}}(),C=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return T(e,n),e.prototype.componentDidMount=function(){window.scrollTo(0,0)},e.prototype.render=function(){return null},e}(j.Component),A=t(66),z=t.n(A),R=t(2),M=t(109),D=function(n,e){return z.a?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},F=function(){var n=function(e,t){return(n=k.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(e,t)};return function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?E()(t):(r.prototype=t.prototype,new r)}}(),N=R.b.div(o||(o=D(["\n  height: 100vh;\n  max-width: 411px;\n  max-height: 731px;\n  border-radius: 3px;\n  box-shadow: 0 1px 50px rgba(32, 33, 36, 0.1);\n  border: 1px solid rgba(32, 33, 36, 0.1);\n  box-sizing: border-box;\n  font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n  user-select: none;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n\n  * {\n    box-sizing: border-box;\n    user-select: none;\n  }\n\n  button::-moz-focus-inner {\n    border: 0;\n  }\n\n  ul {\n    padding: 0;\n    margin: 0;\n  }\n"],["\n  height: 100vh;\n  max-width: 411px;\n  max-height: 731px;\n  border-radius: 3px;\n  box-shadow: 0 1px 50px rgba(32, 33, 36, 0.1);\n  border: 1px solid rgba(32, 33, 36, 0.1);\n  box-sizing: border-box;\n  font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n  user-select: none;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n\n  * {\n    box-sizing: border-box;\n    user-select: none;\n  }\n\n  button::-moz-focus-inner {\n    border: 0;\n  }\n\n  ul {\n    padding: 0;\n    margin: 0;\n  }\n"]))),I=R.b.div(i||(i=D(["\n  height: 100%;\n  overflow: auto;\n"],["\n  height: 100%;\n  overflow: auto;\n"]))),B=R.b.div(a||(a=D(["\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: 26px;\n  background-color: rgba(0, 0, 0, 0.15);\n  display: flex;\n  align-items: center;\n"],["\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: 26px;\n  background-color: rgba(0, 0, 0, 0.15);\n  display: flex;\n  align-items: center;\n"]))),W=R.b.div(c||(c=D(["\n  z-index: 999999999;\n"],["\n  z-index: 999999999;\n"]))),S=R.b.div(l||(l=D(["\n  height: 12px;\n  width: 12px;\n  margin-left: auto;\n  background-color: ",";\n  margin-right: 9px;\n  opacity: 0.35;\n"],["\n  height: 12px;\n  width: 12px;\n  margin-left: auto;\n  background-color: ",";\n  margin-right: 9px;\n  opacity: 0.35;\n"])),function(n){return n.invertColor?"#fff":"#000"}),H=Object(R.b)(S)(u||(u=D(["\n  margin-left: 0;\n  border-radius: 50%;\n"],["\n  margin-left: 0;\n  border-radius: 50%;\n"]))),L=Object(R.b)(S)(s||(s=D(["\n  margin-left: -3px;\n  width: 0;\n  height: 0;\n  background-color: transparent;\n  border-left: 7px solid transparent;\n  border-right: 7px solid transparent;\n  border-top: 12px solid ",";\n"],["\n  margin-left: -3px;\n  width: 0;\n  height: 0;\n  background-color: transparent;\n  border-left: 7px solid transparent;\n  border-right: 7px solid transparent;\n  border-top: 12px solid ",";\n"])),function(n){return n.invertColor?"#fff":"#000"}),U=R.b.div(f||(f=D(["\n  position: relative;\n  /* Hack to align contents to container taking off header height */\n  height: calc(100% - 82px);\n\n  @media (min-width: 584px) {\n    /* Hack to align contents to container taking off header height */\n    height: calc(100% - 90px);\n  }\n"],["\n  position: relative;\n  /* Hack to align contents to container taking off header height */\n  height: calc(100% - 82px);\n\n  @media (min-width: 584px) {\n    /* Hack to align contents to container taking off header height */\n    height: calc(100% - 90px);\n  }\n"]))),Y=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.theme=Object(M.createMuiTheme)({palette:{primary:{light:"#484848",main:"#212121",dark:"#000000",contrastText:"#fff"}}}),e}return F(e,n),e.prototype.render=function(){var n=this.props,e=n.invertColor,t=n.children,r=n.appBar;return j.createElement(M.MuiThemeProvider,{theme:this.theme},j.createElement(N,null,j.createElement(W,null,j.createElement(B,null,j.createElement(S,{invertColor:!!e}),j.createElement(H,{invertColor:!!e}),j.createElement(L,{invertColor:!!e})),r),j.createElement(U,null,j.createElement(I,null,t))))},e}(j.Component),G=function(n,e){return z.a?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},q=(R.b.button(p||(p=G(["\n  position: fixed;\n  bottom: 10px;\n  left: 10px;\n  font-size: 20px;\n  border-radius: 4px;\n  background-color: #ccc;\n  border: 2px solid grey;\n  padding: 8px;\n  z-index: 999;\n"],["\n  position: fixed;\n  bottom: 10px;\n  left: 10px;\n  font-size: 20px;\n  border-radius: 4px;\n  background-color: #ccc;\n  border: 2px solid grey;\n  padding: 8px;\n  z-index: 999;\n"]))),function(){var n=function(e,t){return(n=k.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(e,t)};return function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?E()(t):(r.prototype=t.prototype,new r)}}()),J=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={shown:!1},e.toggle=function(n){e.setState(function(e){return{shown:!e.shown&&(n||!0)}})},e.set=function(n){e.setState({shown:n})},e}return q(e,n),e.prototype.render=function(){return this.props.children({toggle:this.toggle,set:this.set,shown:this.state.shown})},e}(j.Component),X=t(72),K=t.n(X),Q=t(19),V=t.n(Q),Z=function(n,e){return z.a?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},$=(P(),R.b.button(m||(m=Z(["\n  font-size: ","em;\n  margin: ","px;\n  height: ","em;\n  width: ","em;\n  border-radius: ",";\n  background: #fea3aa;\n  position: relative;\n  cursor: pointer;\n  border: none;\n\n  &:before {\n    content: 'click me';\n    text-align: center;\n    left: 0;\n    right: 0;\n    position: absolute;\n    color: white;\n    font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n    top: 75%;\n    font-size: 1em;\n  }\n\n  &:after {\n    content: 'ðŸ˜Š';\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 5em;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    pointer-events: none;\n  }\n\n  ",";\n"],["\n  font-size: ","em;\n  margin: ","px;\n  height: ","em;\n  width: ","em;\n  border-radius: ",";\n  background: #fea3aa;\n  position: relative;\n  cursor: pointer;\n  border: none;\n\n  &:before {\n    content: 'click me';\n    text-align: center;\n    left: 0;\n    right: 0;\n    position: absolute;\n    color: white;\n    font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n    top: 75%;\n    font-size: 1em;\n  }\n\n  &:after {\n    content: 'ðŸ˜Š';\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 5em;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    pointer-events: none;\n  }\n\n  ",";\n"])),function(n){return n.size||1},function(n){return n.margin||0},function(n){return 10*(n.height||1)},function(n){return 10*(n.width||1)},function(n){return n.borderRadius},function(n){return n.alternate?Object(R.a)(d||(d=Z(["\n          background: #b2cefe;\n\n          &:after {\n            content: 'ðŸ˜³';\n          }\n        "],["\n          background: #b2cefe;\n\n          &:after {\n            content: 'ðŸ˜³';\n          }\n        "]))):""})),nn=(R.b.div(h||(h=Z(["\n  display: flex;\n  align-items: center;\n  background: #baed91;\n  height: 500px;\n  width: 500px;\n"],["\n  display: flex;\n  align-items: center;\n  background: #baed91;\n  height: 500px;\n  width: 500px;\n"]))),Object(R.b)($)(g||(g=Z(["\n  float: right;\n"],["\n  float: right;\n"])))),en=Object(R.b)($)(b||(b=Z(["\n  height: 100%;\n  width: 100%;\n  position: absolute;\n"],["\n  height: 100%;\n  width: 100%;\n  position: absolute;\n"]))),tn=R.b.div(y||(y=Z(["\n  height: 90vh;\n"],["\n  height: 90vh;\n"]))),rn=R.b.div(v||(v=Z(["\n  padding-top: 50vh;\n  height: 150vh;\n"],["\n  padding-top: 50vh;\n  height: 150vh;\n"]))),on=R.b.div(x||(x=Z(["\n  font-size: 1em;\n  height: 10em;\n  width: 10em;\n  position: relative;\n  float: right;\n"],["\n  font-size: 1em;\n  height: 10em;\n  width: 10em;\n  position: relative;\n  float: right;\n"]))),an=function(){return(an=V.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},cn=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof K.a){var o=0;for(r=K()(n);o<r.length;o++)e.indexOf(r[o])<0&&(t[r[o]]=n[r[o]])}return t},ln=P(),un=function(n){return function(e,t){return{Default:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd},r))})):j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))})))})},WithMargin:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({margin:100,innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd},r))})):j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))})))})},ToLarge:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({size:2,innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd},r))})):j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))})))})},ToLargeWithMargin:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({size:2,innerRef:t,margin:50,onClick:function(){return i()},alternate:n.useDistinctEnd},r))})):j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({margin:20,innerRef:e,onClick:function(){return i()}},t))})))})},ToRectangle:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({width:2,innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd},r))})):j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))})))})},ToCircle:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd,borderRadius:"50%"},r))})):j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))})))})},FromOffscreen:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd},r))})):j.createElement("div",null,j.createElement(tn,null),j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))}))))})},ToOffscreen:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement("div",null,j.createElement(tn,null),j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd},r))}))):j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))})))})},ToIndiscriminateSize:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement(on,null,j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(en,an({innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd},r))}))):j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))})))})},FromLongPage:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,o?j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-2"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd},r))})):j.createElement(rn,null,j.createElement(ln,null),j.createElement(e,{name:n.namePrefix+"-anim",key:n.namePrefix+"-1"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))}))))})},FromAlwaysMounted:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,j.createElement(e,{name:n.namePrefix+"-default",in:!o},j.createElement(t,null,function(n){var e=n.ref,t=n.style,r=cn(n,["ref","style"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()},style:an({},t,{opacity:o?0:t.opacity})},r))})),o&&j.createElement(e,{name:n.namePrefix+"-default"},j.createElement(t,null,function(e){var t=e.ref,r=cn(e,["ref"]);return j.createElement(nn,an({innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd},r))})))})},ToAlwaysMounted:function(){return j.createElement(J,null,function(r){var o=r.shown,i=r.toggle;return j.createElement("div",null,!o&&j.createElement(e,{name:n.namePrefix+"-default"},j.createElement(t,null,function(n){var e=n.ref,t=cn(n,["ref"]);return j.createElement($,an({innerRef:e,onClick:function(){return i()}},t))})),j.createElement(e,{name:n.namePrefix+"-default",in:!!o},j.createElement(t,null,function(e){var t=e.ref,r=e.style,a=cn(e,["ref","style"]);return j.createElement(nn,an({innerRef:t,onClick:function(){return i()},alternate:n.useDistinctEnd,style:an({},r,{opacity:o?r.opacity:0})},a))})))})}}}};t.d(e,"e",function(){return P}),t.d(e,"a",function(){return C}),t.d(e,"b",function(){return Y}),t.d(e,"c",function(){return J}),t.d(e,"d",function(){return un})},111:function(n,e,t){n.exports=t.p+"b4734797388651ca2f831faa1bb412e6.png"},1132:function(n,e,t){"use strict";var r,o,i=t(66),a=t.n(i),c=t(7),l=t.n(c),u=t(6),s=t.n(u),f=t(0),p=t(91),d=t(103),m=t(38),h=t(115),g=t(54),b=t(51),y=(r=function(n,e){return(r=s.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?l()(e):(t.prototype=e.prototype,new t)}),v=function(n,e){return a.a?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},x=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.renderAnimation=function(n,t){if(void 0===t&&(t={}),!n.fromTarget.targetDOMData)throw new Error("yubaba\ntargetElement was missing.");var r=e.props,i=r.duration,a=r.timingFunction,c=r.zIndex,l=Object(m.d)(n.fromTarget);return n.fromTarget.render({ref:h.a,style:{zIndex:c,opacity:t.fadeOut?0:1,transition:"transform "+i+"ms "+a+", height "+i+"ms "+a+", width "+i+"ms "+a+", opacity "+i/2+"ms "+a,position:"absolute",transformOrigin:"0 0",willChange:"transform, height, width",top:l.location.top,left:l.location.left,height:t.moveToTarget?n.toTarget.size.height:l.size.height,width:t.moveToTarget?n.toTarget.size.width:l.size.width,overflow:"hidden",transform:t.moveToTarget?"translate3d("+(n.toTarget.location.left-n.fromTarget.location.left)+"px, "+(n.toTarget.location.top-n.fromTarget.location.top)+"px, 0)":void 0},className:t.moveToTarget?Object(p.a)(o||(o=v(["\n            > * {\n              transition: transform ","ms ",";\n              transform: translate3d(\n                -","px,\n                -","px,\n                0\n              );\n            }\n          "],["\n            > * {\n              transition: transform ","ms ",";\n              transform: translate3d(\n                -","px,\n                -","px,\n                0\n              );\n            }\n          "])),i,a,n.fromTarget.targetDOMData.location.left-n.fromTarget.location.left,n.fromTarget.targetDOMData.location.top-n.fromTarget.location.top):void 0})},e.beforeAnimate=function(n,t){return t(),e.renderAnimation(n)},e.animate=function(n,t){var r=e.props.duration;return setTimeout(t,r),e.renderAnimation(n,{moveToTarget:!0})},e.afterAnimate=function(n,t,r){return r({style:function(){return{opacity:1}}}),setTimeout(t,100),e.renderAnimation(n,{moveToTarget:!0,fadeOut:!0})},e}return y(e,n),e.prototype.render=function(){var n=this.props.children;return f.createElement(d.c,{data:{action:d.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate,afterAnimate:this.afterAnimate}}},n)},e.defaultProps={duration:500,timingFunction:Object(g.c)(),zIndex:b.b.concealMove},e}(f.Component);e.a=x},1133:function(n,e,t){"use strict";var r,o=t(7),i=t.n(o),a=t(6),c=t.n(a),l=t(0),u=t(103),s=t(115),f=(r=function(n,e){return(r=c.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?i()(e):(t.prototype=e.prototype,new t)}),p=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return f(e,n),e.prototype.render=function(){var n=this;return l.createElement(u.b.Consumer,null,function(e){return n.props.children({ref:e?e.targetRef:s.a})})},e}(l.Component);e.a=p},1134:function(n,e,t){"use strict";var r,o=t(0),i=t(12),a=t(162),c=t(44),l=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),u=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.renderAnimation=function(n){var t=e.props,r=t.duration,i=t.background,l=t.direction;return o.createElement(a.a,{step:n.step,style:{position:"fixed",top:0,left:0,right:0,bottom:0,background:i,transform:"translate3d("+{left:"100%, 0, 0",right:"-100%, 0, 0",down:"0, -100%, 0",up:"0, 100%, 0"}[l]+")",transition:"transform "+Object(c.b)()+" "+r+"ms, opacity "+Object(c.c)()+" "+r+"ms"},keyframes:[{transform:"translate3d(0, 0, 0)"},{transform:"translate3d(0, 0, 0)",opacity:0}],onFinish:n.onFinish})},e.beforeAnimate=function(n,t){return t(),e.renderAnimation({onFinish:t,step:void 0})},e.animate=function(n,t){return e.renderAnimation({onFinish:t,step:0})},e.afterAnimate=function(n,t){return e.renderAnimation({onFinish:t,step:1})},e}return l(e,n),e.prototype.render=function(){var n=this.props.children;return o.createElement(i.c,{data:{action:i.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate,afterAnimate:this.afterAnimate}}},n)},e.defaultProps={duration:500},e}(o.Component);e.a=u},1135:function(n,e,t){"use strict";var r,o=t(50),i=t.n(o),a=t(72),c=t.n(a),l=t(19),u=t.n(l),s=t(7),f=t.n(s),p=t(6),d=t.n(p),m=t(0),h=t(34),g=t(103),b=t(38),y=function(){var n=function(){},e=function(){},t=new i.a(function(t,r){n=t,e=r});return{resolve:n,reject:e,promise:t}},v=t(115),x=t(219),w=new(t.n(x).a),E=function(n){return w.get(n)},O=function(n){return w.has(n)},k=t(150),j=(r=function(n,e){return(r=d.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?f()(e):(t.prototype=e.prototype,new t)}),_=function(){return(_=u.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},P=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof c.a){var o=0;for(r=c()(n);o<r.length;o++)e.indexOf(r[o])<0&&(t[r[o]]=n[r[o]])}return t},T=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={shown:!1,childProps:{}},e.TIME_TO_WAIT_FOR_NEXT_BABA=50,e.animating=!1,e.unmounting=!1,e.abortAnimations=function(){},e.executeAnimations=function(){var n=e.props.name,t=E(n);if(t){t.data;var r=P(t,["data"]);e.animating=!0;var o={fromTarget:r,toTarget:_({render:e.renderChildren,containerElement:e.containerElement,targetElement:e.targetElement,targetDOMData:e.targetElement?Object(b.c)(e.targetElement):void 0},Object(b.c)(e.containerElement))},a=t.data.map(function(n){if(n.action===g.a.animation){var t,r=function(n){t||(t=document.createElement("div"),document.body.insertBefore(t,document.body.firstChild)),requestAnimationFrame(function(){return Object(h.unstable_renderSubtreeIntoContainer)(e,n,t)})},a=function(n){n?e.setState(function(e){return{childProps:{style:n.style?n.style(e.childProps.style||{}):e.childProps.style,className:n.className?n.className(e.childProps.className):e.childProps.className}}}):e.setState({childProps:{}})};return{action:g.a.animation,payload:{beforeAnimate:function(){if(n.payload.beforeAnimate){var e=y(),t=n.payload.beforeAnimate(o,e.resolve,a);return t&&r(t),e.promise}return i.a.resolve()},animate:function(){var e=y(),t=n.payload.animate(o,e.resolve,a);return t&&r(t),e.promise},afterAnimate:function(){if(n.payload.afterAnimate){var e=y(),t=n.payload.afterAnimate(o,e.resolve,a);return t&&r(t),e.promise}return i.a.resolve()},cleanup:function(){t&&(Object(h.unmountComponentAtNode)(t),document.body.removeChild(t)),a(null)}}}}return n}),c=a.reduce(function(n,e){switch(e.action){case g.a.animation:return n[n.length-1].push(e.payload),n;case g.a.wait:return n.push([]),n;default:return n}},[[]]);e.abortAnimations=function(){e.animating&&(e.animating=!1,c.forEach(function(n){return n.forEach(function(n){return n.cleanup()})}))};var l=a.map(function(n){return n.action===g.a.animation?n.payload.beforeAnimate():i.a.resolve()});i.a.all(l).then(function(){var n=y();return requestAnimationFrame(function(){requestAnimationFrame(function(){return n.resolve()})}),n.promise}).then(function(){return c.reduce(function(n,e){return n.then(function(){return i.a.all(e.map(function(n){return n.animate()}))})},i.a.resolve()).then(function(){e.setState({shown:!0});var t=e.props.context;return t&&t.onFinish({name:n}),c.reduce(function(n,e){return n.then(function(){return i.a.all(e.map(function(n){return n.afterAnimate()})).then(function(){})})},i.a.resolve())}).then(function(){c.forEach(function(n){return n.forEach(function(n){return n.cleanup()})})}).then(function(){e.animating=!1,(0,e.props.onFinish)()})})}},e.setRef=function(n){e.containerElement=n},e.setTargetRef=function(n){e.targetElement=n},e.setReactNode=function(n){e.renderChildren=n},e.setData=function(n){e.data=n},e}return j(e,n),e.prototype.componentDidMount=function(){var n=this.props,e=n.in,t=n.name;void 0===e&&O(t)?this.executeAnimations():(void 0===e||e)&&this.showSelfAndNotifyManager()},e.prototype.componentWillUpdate=function(n){var e=this.props.in;!1===n.in&&!0===e&&(this.storeDOMData(),this.delayedClearDOMData(),this.abortAnimations())},e.prototype.componentDidUpdate=function(n){var e=this.props,t=e.in,r=e.name;if(t!==n.in&&t){if(O(r))return void this.executeAnimations();this.showSelfAndNotifyManager()}},e.prototype.componentWillUnmount=function(){this.storeDOMData(),this.delayedClearDOMData(),this.abortAnimations(),this.unmounting=!0},e.prototype.showSelfAndNotifyManager=function(){var n=this.props,e=n.context,t=n.name;this.setState({shown:!0}),e&&e.onFinish({name:t})},e.prototype.delayedClearDOMData=function(){var n=this.props.name;setTimeout(function(){return e=n,w.delete(e);var e},this.TIME_TO_WAIT_FOR_NEXT_BABA)},e.prototype.storeDOMData=function(){var n,e;if(!this.unmounting&&this.data){var t=Object(b.c)(this.containerElement),r=this.targetElement?Object(b.c)(this.targetElement):void 0;0;var o=this.props.name;n=o,e=_({},t,{targetDOMData:r,containerElement:this.containerElement,targetElement:this.targetElement,render:this.renderChildren,data:this.data}),w.set(n,e)}},e.prototype.render=function(){var n=this.state,e=n.childProps,t=n.shown,r=this.props.children;return m.createElement(g.c,{receiveData:this.setData,receiveRenderChildren:this.setReactNode,receiveRef:this.setRef,receiveTargetRef:this.setTargetRef,style:_({opacity:t?1:0},e.style),className:e.className},"function"==typeof r?r:m.Children.only(r))},e.displayName="Baba",e.defaultProps={onFinish:v.a},e}(m.PureComponent);e.a=Object(k.b)(T)},1138:function(n,e,t){"use strict";var r,o=t(72),i=t.n(o),a=t(19),c=t.n(a),l=t(7),u=t.n(l),s=t(6),f=t.n(s),p=t(0),d=t(91),m=t(103),h=t(54),g=t(51),b=(r=function(n,e){return(r=f.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?u()(e):(t.prototype=e.prototype,new t)}),y=function(){return(y=c.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},v=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.beforeAnimate=function(n,t,r){if(!n.toTarget.targetDOMData)throw new Error("yubaba\ntargetElement was missing.");var o=e.props,i=o.childrenTransformX,a=o.childrenTransformY,c=o.useClipPath,l=i?n.toTarget.targetDOMData.location.left-n.toTarget.location.left:0,u=a?n.toTarget.targetDOMData.location.top-n.toTarget.location.top:0,s=c?{clipPath:"inset(0 "+(n.toTarget.size.width-n.toTarget.targetDOMData.size.width)+"px "+(n.toTarget.size.height-n.toTarget.targetDOMData.size.height)+"px 0)"}:{height:n.toTarget.targetDOMData.size.height,width:n.toTarget.targetDOMData.size.width};r({style:function(e){return n.toTarget.targetDOMData?y({},e,s,{opacity:1,visibility:"visible",willChange:Object(g.a)("height, width, clip-path")(e.willChange),overflow:"hidden"}):void 0},className:function(){return n.toTarget.targetDOMData?Object(d.a)({"> *":{transform:"translate3d(-"+l+"px, -"+u+"px, 0)"}}):void 0}}),t()},e.animate=function(n,t,r){var o=e.props,i=o.timingFunction,a=o.duration,c=o.useClipPath?{clipPath:"inset(0 0 0 0)"}:{height:n.toTarget.size.height,width:n.toTarget.size.width};r({style:function(n){return y({},n,c,{transition:Object(g.a)("height "+a+"ms "+i+", width "+a+"ms "+i+", clip-path "+a+"ms "+i)(n.transition)})},className:function(){return Object(d.a)({"> *":{transform:"translate3d(0, 0, 0)",transition:"transform "+a+"ms "+i}})}}),setTimeout(function(){return t()},a)},e}return b(e,n),e.prototype.render=function(){var n=this.props.children;return p.createElement(m.c,{data:{action:m.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate}}},n)},e.defaultProps={duration:500,timingFunction:Object(h.c)(),childrenTransformX:!0,childrenTransformY:!0},e}(p.Component),x=t(498),w=function(){var n=function(e,t){return(n=f.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(e,t)};return function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?u()(t):(r.prototype=t.prototype,new r)}}(),E=function(){return(E=c.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},O=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof i.a){var o=0;for(r=i()(n);o<r.length;o++)e.indexOf(r[o])<0&&(t[r[o]]=n[r[o]])}return t},k=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return w(e,n),e.prototype.render=function(){var n=this.props,e=n.children,t=O(n,["children"]);return p.createElement(v,E({},t),p.createElement(x.a,E({},t,{useFocalElement:!0}),e))},e.defaultProps=E({},v.defaultProps,x.a.defaultProps),e}(p.Component);e.a=k},115:function(n,e,t){"use strict";e.a=function(){}},116:function(n,e,t){"use strict";e.a=function(){}},12:function(n,e,t){"use strict";t.d(e,"a",function(){return o}),t.d(e,"b",function(){return l});var r,o,i=t(0),a=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),c=function(){return(c=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)};!function(n){n.animation="animation",n.wait="wait"}(o||(o={}));var l=i.createContext(void 0),u=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return a(e,n),e.prototype.render=function(){var n=this,e=this.props,t=e.children,r=e.style,o=e.className,a=e.data,u=e.receiveRenderChildren,s=e.receiveRef,f=e.receiveData;return"function"!=typeof t?i.createElement(l.Consumer,null,function(e){return i.createElement(l.Provider,{value:{ref:function(n){s&&s(n),e&&e.ref(n)},targetRef:function(t){var r=n.props.receiveTargetRef;r&&r(t),e&&e.targetRef(t)},data:function(n){var t=a?[a].concat(n):n;e&&e.data(t),f&&f(n)},renderChildren:function(n){e&&e.renderChildren(n),u&&u(n)},style:c({},r,e?e.style:{}),className:o||(e?e.className:void 0)}},t)}):i.createElement(l.Consumer,null,function(n){if("function"==typeof t){if(n){var e=a?[a]:[];n.renderChildren(t),n.data(e)}return u&&u(t),i.Children.only(t({className:o||(n?n.className:void 0),ref:function(e){n&&n.ref(e),s&&s(e)},style:n?c({},r,n.style):r||{}}))}throw new Error("Children is guaranteed to be a function. Impossible condition.")})},e}(i.Component);e.c=u},14:function(n,e,t){"use strict";t.d(e,"e",function(){return P}),t.d(e,"m",function(){return T}),t.d(e,"u",function(){return C}),t.d(e,"v",function(){return A}),t.d(e,"r",function(){return z}),t.d(e,"q",function(){return R}),t.d(e,"t",function(){return M}),t.d(e,"l",function(){return D}),t.d(e,"j",function(){return F}),t.d(e,"h",function(){return N}),t.d(e,"f",function(){return I}),t.d(e,"g",function(){return B}),t.d(e,"k",function(){return W}),t.d(e,"a",function(){return S}),t.d(e,"i",function(){return H}),t.d(e,"p",function(){return L}),t.d(e,"o",function(){return U}),t.d(e,"n",function(){return Y}),t.d(e,"c",function(){return G}),t.d(e,"s",function(){return q}),t.d(e,"b",function(){return J}),t.d(e,"d",function(){return X});var r,o,i,a,c,l,u,s,f,p,d,m,h,g,b,y,v,x,w,E,O,k,j=t(2),_=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},P=j.b.header(r||(r=_(["\n  margin-top: 26px;\n  padding: 5px;\n  color: rgba(0, 0, 0, 0.87);\n  display: flex;\n"],["\n  margin-top: 26px;\n  padding: 5px;\n  color: rgba(0, 0, 0, 0.87);\n  display: flex;\n"]))),T=j.b.div(o||(o=_(["\n  background: url(",") no-repeat;\n  background-position: 0 -374px;\n  background-size: 167px;\n  height: 36px;\n  width: 92px;\n  margin-left: 92px;\n  margin-top: 10px;\n"],["\n  background: url(",") no-repeat;\n  background-position: 0 -374px;\n  background-size: 167px;\n  height: 36px;\n  width: 92px;\n  margin-left: 92px;\n  margin-top: 10px;\n"])),t(810)),C=j.b.div(i||(i=_(["\n  height: 80px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  border-radius: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n"],["\n  height: 80px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  border-radius: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n"]))),A=j.b.div(a||(a=_(["\n  height: 40px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  border-radius: 8px;\n  margin-top: 10px;\n  margin-left: 8px;\n  margin-right: 8px;\n"],["\n  height: 40px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  border-radius: 8px;\n  margin-top: 10px;\n  margin-left: 8px;\n  margin-right: 8px;\n"]))),z=j.b.div(c||(c=_(["\n  padding-top: 10px;\n  white-space: nowrap;\n  overflow: auto;\n  width: 100%;\n  padding-left: 8px;\n  padding-right: 8px;\n"],["\n  padding-top: 10px;\n  white-space: nowrap;\n  overflow: auto;\n  width: 100%;\n  padding-left: 8px;\n  padding-right: 8px;\n"]))),R=j.b.div(l||(l=_(["\n  background-color: #fff;\n  border-radius: 40px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  box-sizing: border-box;\n  display: inline-block;\n  margin-right: 8px;\n  overflow: hidden;\n  padding: 0 16px;\n\n  > span {\n    color: rgba(0, 0, 0, 0.8);\n    display: inline-block;\n    font-size: 14px;\n    font-weight: 300;\n    line-height: 40px;\n    text-decoration: none;\n    white-space: nowrap;\n  }\n"],["\n  background-color: #fff;\n  border-radius: 40px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  box-sizing: border-box;\n  display: inline-block;\n  margin-right: 8px;\n  overflow: hidden;\n  padding: 0 16px;\n\n  > span {\n    color: rgba(0, 0, 0, 0.8);\n    display: inline-block;\n    font-size: 14px;\n    font-weight: 300;\n    line-height: 40px;\n    text-decoration: none;\n    white-space: nowrap;\n  }\n"]))),M=j.b.div(u||(u=_(["\n  margin-bottom: 16px;\n"],["\n  margin-bottom: 16px;\n"]))),D=j.b.img(s||(s=_(["\n  width: 100%;\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.03);\n"],["\n  width: 100%;\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.03);\n"]))),F=j.b.div(f||(f=_(["\n  color: rgba(32, 33, 36, 0.8);\n  font-size: 11px;\n  letter-spacing: 0.2px;\n  line-height: 14px;\n  max-height: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-top: 4px;\n"],["\n  color: rgba(32, 33, 36, 0.8);\n  font-size: 11px;\n  letter-spacing: 0.2px;\n  line-height: 14px;\n  max-height: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-top: 4px;\n"]))),N=j.b.div(p||(p=_(["\n  color: rgba(117, 117, 117, 0.85);\n  font-size: 10px;\n  height: 14px;\n  letter-spacing: 0.2px;\n  line-height: 14px;\n  overflow: hidden;\n  position: relative;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n"],["\n  color: rgba(117, 117, 117, 0.85);\n  font-size: 10px;\n  height: 14px;\n  letter-spacing: 0.2px;\n  line-height: 14px;\n  overflow: hidden;\n  position: relative;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n"]))),I=j.b.div(d||(d=_(["\n  background-color: rgba(0, 0, 0, 0.03);\n  position: absolute;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  height: calc(100% - 4px);\n  pointer-events: none;\n"],["\n  background-color: rgba(0, 0, 0, 0.03);\n  position: absolute;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  height: calc(100% - 4px);\n  pointer-events: none;\n"]))),B=j.b.div(m||(m=_(["\n  position: relative;\n"],["\n  position: relative;\n"]))),W=j.b.div(h||(h=_(["\n  padding: 8px;\n  display: flex;\n  justify-content: space-between;\n"],["\n  padding: 8px;\n  display: flex;\n  justify-content: space-between;\n"]))),S=j.b.div(g||(g=_(["\n  width: calc(50% - 4px);\n"],["\n  width: calc(50% - 4px);\n"]))),H=j.b.div(b||(b=_(["\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: auto;\n"],["\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: auto;\n"]))),L=j.b.div(y||(y=_(["\n  color: #000000;\n  display: block;\n  font-size: 20px;\n  line-height: 30px;\n  margin-right: 32px;\n  max-height: 60px;\n  overflow: hidden;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  white-space: normal;\n  word-wrap: break-word;\n"],["\n  color: #000000;\n  display: block;\n  font-size: 20px;\n  line-height: 30px;\n  margin-right: 32px;\n  max-height: 60px;\n  overflow: hidden;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  white-space: normal;\n  word-wrap: break-word;\n"]))),U=j.b.img(v||(v=_(["\n  background-color: #fff;\n  background-image: -webkit-linear-gradient(\n      45deg,\n      #efefef 25%,\n      transparent 25%,\n      transparent 75%,\n      #efefef 75%,\n      #efefef\n    ),\n    -webkit-linear-gradient(45deg, #efefef 25%, transparent 25%, transparent 75%, #efefef 75%, #efefef);\n  background-position: 0 0, 10px 10px;\n  background-size: 21px 21px;\n  width: 100%;\n"],["\n  background-color: #fff;\n  background-image: -webkit-linear-gradient(\n      45deg,\n      #efefef 25%,\n      transparent 25%,\n      transparent 75%,\n      #efefef 75%,\n      #efefef\n    ),\n    -webkit-linear-gradient(45deg, #efefef 25%, transparent 25%, transparent 75%, #efefef 75%, #efefef);\n  background-position: 0 0, 10px 10px;\n  background-size: 21px 21px;\n  width: 100%;\n"]))),Y=j.b.div(x||(x=_(["\n  padding: 16px;\n  margin-bottom: 16px;\n"],["\n  padding: 16px;\n  margin-bottom: 16px;\n"]))),G=j.b.div(w||(w=_(["\n  color: #70757a;\n  font-size: 12px;\n  margin-top: 16px;\n"],["\n  color: #70757a;\n  font-size: 12px;\n  margin-top: 16px;\n"]))),q=j.b.div(E||(E=_(["\n  color: #202124;\n  font-size: 12px;\n  font-weight: bold;\n  letter-spacing: 0.75px;\n  line-height: 16px;\n  text-decoration: none;\n  text-transform: uppercase;\n  margin: 8px;\n"],["\n  color: #202124;\n  font-size: 12px;\n  font-weight: bold;\n  letter-spacing: 0.75px;\n  line-height: 16px;\n  text-decoration: none;\n  text-transform: uppercase;\n  margin: 8px;\n"]))),J=j.b.div(O||(O=_(["\n  transition: opacity ease-out 200ms;\n  background: #fff;\n  margin-top: -4px;\n"],["\n  transition: opacity ease-out 200ms;\n  background: #fff;\n  margin-top: -4px;\n"]))),X=j.b.div(k||(k=_(["\n  transition: opacity 500ms;\n  opacity: ",";\n"],["\n  transition: opacity 500ms;\n  opacity: ",";\n"])),function(n){return n.in?1:0})},149:function(n,e,t){"use strict";var r,o=t(0),i=t(12),a=t(56),c=t(39),l=t(44),u=t(52),s=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),f=function(){return(f=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},p=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.beforeAnimate=function(n,t,r){var o=e.props,i=o.zIndex,l=o.useFocalElement,s=o.transformX,p=o.transformY;if(l&&!n.toTarget.targetDOMData)throw new Error("yubaba\ntargetElement was missing.");var d=Object(c.d)(n.fromTarget),m=l&&n.toTarget.targetDOMData?n.toTarget.targetDOMData:n.toTarget,h=s?d.location.left-n.toTarget.location.left:0,g=p?d.location.top-n.toTarget.location.top:0;r({style:function(n){return f({},n,{zIndex:i,opacity:1,transformOrigin:"0 0",visibility:"visible",willChange:Object(u.a)("transform")(n.willChange),transform:"translate3d("+h+"px, "+g+"px, 0) scale3d("+a.b(d.size.width,m.size.width)+", "+a.b(d.size.height,m.size.height)+", 1)"})}}),t()},e.animate=function(n,t,r){var o=e.props,i=o.duration,a=o.timingFunction;r({style:function(n){return f({},n,{transition:Object(u.a)("transform "+i+"ms "+a+", opacity "+i/2+"ms "+a)(n.transition),transform:"translate3d(0, 0, 0) scale3d(1, 1, 1)"})}}),setTimeout(function(){return t()},i)},e}return s(e,n),e.prototype.render=function(){var n=this.props.children;return o.createElement(i.c,{data:{action:i.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate}}},n)},e.defaultProps={duration:500,timingFunction:Object(l.c)(),zIndex:u.b.move,useFocalElement:!1,transformX:!0,transformY:!0},e}(o.Component);e.a=p},150:function(n,e,t){"use strict";t.d(e,"b",function(){return h});var r,o=t(19),i=t.n(o),a=t(7),c=t.n(a),l=t(6),u=t.n(l),s=t(0),f=(r=function(n,e){return(r=u.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?c()(e):(t.prototype=e.prototype,new t)}),p=function(){return(p=i.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},d=s.createContext(void 0),m=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={style:{visibility:"hidden"}},e.onFinish=function(n){var t=e.props,r=t.context,o=t.name;r&&r.onFinish&&r.onFinish(n),o&&n.name!==o||e.setState({style:{visibility:"visible"}})},e}return f(e,n),e.prototype.render=function(){var n=this.props.children,e=this.state.style;return s.createElement(d.Provider,{value:{onFinish:this.onFinish}},n({style:e}))},e}(s.Component),h=function(n){var e;return(e=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return f(t,e),t.prototype.render=function(){var e=this,t=n;return s.createElement(d.Consumer,null,function(n){return s.createElement(t,p({context:n},e.props))})},t}(s.Component)).displayName="babaManagerContext("+n.displayName+")",e};e.a=h(m)},162:function(n,e,t){"use strict";var r,o=t(0),i=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),a=function(){return(a=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},c=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={started:!1},e.start=function(){requestAnimationFrame(function(){e.setState({started:!0})})},e.onTransitionEnd=function(n){e.props.onFinish()},e}return i(e,n),e.prototype.componentDidMount=function(){void 0!==this.props.step&&this.start()},e.prototype.componentDidUpdate=function(){void 0===this.props.step||this.state.started||this.start()},e.prototype.render=function(){var n=this.props,e=n.style,t=n.keyframes,r=n.step,i=n.children,c=void 0!==r&&this.state.started;return o.createElement("span",{onTransitionEnd:this.onTransitionEnd,style:a({},e,c?t[r||0]:{})},i)},e}(o.Component);e.a=c},163:function(n,e,t){"use strict";t.d(e,"a",function(){return r});var r=[{iconUrl:"",title:"Brunch this weekend?",recipients:"Ali Connors",body:"I'll be in your neighbourhood soon and I think it'd be great to catch up!"},{iconUrl:"",title:"Oui Oui",recipients:"Sandra Adams",body:"Do you have paris recorded?"},{iconUrl:"",title:"Summer BBQ",recipients:"to Jonas, Scott, Jennifer",body:"Hi Friends,\n\nI was at the grocery store on Sunday night... when I ran into Genie Williams! I almost didn't recognise her after 20 years!"},{iconUrl:"",title:"Birthday Gift",recipients:"Trevor Hansen",body:"Have any ideas about that thing?"},{iconUrl:"",title:"Brunch this weekend?",recipients:"Ali Connors",body:"I'll be in your neighbourhood soon and I think it'd be great to catch up!"},{iconUrl:"",title:"Oui Oui",recipients:"Sandra Adams",body:"Do you have paris recorded?"},{iconUrl:"",title:"Summer BBQ",recipients:"to Jonas, Scott, Jennifer",body:"Hi Friends,\n\nI was at the grocery store on Sunday night... when I ran into Genie Williams! I almost didn't recognise her after 20 years!"},{iconUrl:"",title:"Birthday Gift",recipients:"Trevor Hansen",body:"Have any ideas about that thing?"},{iconUrl:"",title:"Brunch this weekend?",recipients:"Ali Connors",body:"I'll be in your neighbourhood soon and I think it'd be great to catch up!"},{iconUrl:"",title:"Oui Oui",recipients:"Sandra Adams",body:"Do you have paris recorded?"},{iconUrl:"",title:"Summer BBQ",recipients:"to Jonas, Scott, Jennifer",body:"Hi Friends,\n\nI was at the grocery store on Sunday night... when I ran into Genie Williams! I almost didn't recognise her after 20 years!"},{iconUrl:"",title:"Birthday Gift",recipients:"Trevor Hansen",body:"Have any ideas about that thing?"}]},164:function(n,e,t){"use strict";var r,o=t(72),i=t.n(o),a=t(19),c=t.n(a),l=t(7),u=t.n(l),s=t(6),f=t.n(s),p=t(0),d=t(103),m=t(55),h=t(38),g=t(115),b=t(54),y=t(51),v=(r=function(n,e){return(r=f.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?u()(e):(t.prototype=e.prototype,new t)}),x=function(){return(x=c.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},w=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.renderAnimation=function(n,t){void 0===t&&(t={});var r=e.props,o=r.timingFunction,i=r.duration,a=r.zIndex,c=Object(h.d)(n.fromTarget),l=n.toTarget.location.left-c.location.left,u=n.toTarget.location.top-c.location.top;return n.fromTarget.render({ref:g.a,style:x({},c.location,{zIndex:a,transition:"transform "+i+"ms "+o+", opacity "+i/2+"ms "+o,position:"absolute",transformOrigin:"0 0",transform:"translate3d(0, 0, 0) scale3d(1, 1, 1)",opacity:1,margin:0,height:c.size.height+"px",width:c.size.width+"px"},t.moveToTarget?{transform:"translate3d("+l+"px, "+u+"px, 0) scale3d("+m.b(n.toTarget.size.width,c.size.width)+", "+m.b(n.toTarget.size.height,c.size.height)+", 1)",opacity:0}:{})})},e.beforeAnimate=function(n,t){return t(),e.renderAnimation(n)},e.animate=function(n,t){var r=e.props.duration;return setTimeout(t,r),e.renderAnimation(n,{moveToTarget:!0})},e}return v(e,n),e.prototype.render=function(){var n=this.props.children;return p.createElement(d.c,{data:{action:d.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate}}},n)},e.defaultProps={duration:500,timingFunction:Object(b.c)(),zIndex:y.b.fadeMove},e}(p.Component),E=t(498),O=function(){var n=function(e,t){return(n=f.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(e,t)};return function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?u()(t):(r.prototype=t.prototype,new r)}}(),k=function(){return(k=c.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},j=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof i.a){var o=0;for(r=i()(n);o<r.length;o++)e.indexOf(r[o])<0&&(t[r[o]]=n[r[o]])}return t},_=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return O(e,n),e.prototype.render=function(){var n=this.props,e=n.children,t=j(n,["children"]);return p.createElement(E.a,k({},t),p.createElement(w,k({},t),e))},e}(p.Component);e.a=_},22:function(n,e,t){"use strict";var r,o=t(0),i=t(34),a=t(12),c=t(39),l=function(){var n=function(){},e=function(){},t=new Promise(function(t,r){n=t,e=r});return{resolve:n,reject:e,promise:t}},u=t(116),s=new Map,f=function(n){return s.get(n)},p=function(n){return s.has(n)},d=t(465),m=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),h=function(){return(h=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},g=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(n);o<r.length;o++)e.indexOf(r[o])<0&&(t[r[o]]=n[r[o]])}return t},b=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={shown:!1,childProps:{}},e.TIME_TO_WAIT_FOR_NEXT_BABA=50,e.animating=!1,e.unmounting=!1,e.abortAnimations=function(){},e.executeAnimations=function(){var n=e.props.name,t=f(n);if(t){t.data;var r=g(t,["data"]);e.animating=!0;var o={fromTarget:r,toTarget:h({render:e.renderChildren,containerElement:e.containerElement,targetElement:e.targetElement,targetDOMData:e.targetElement?Object(c.c)(e.targetElement):void 0},Object(c.c)(e.containerElement))},u=t.data.map(function(n){if(n.action===a.a.animation){var t,r=function(n){t||(t=document.createElement("div"),document.body.insertBefore(t,document.body.firstChild)),requestAnimationFrame(function(){return Object(i.unstable_renderSubtreeIntoContainer)(e,n,t)})},c=function(n){n?e.setState(function(e){return{childProps:{style:n.style?n.style(e.childProps.style||{}):e.childProps.style,className:n.className?n.className(e.childProps.className):e.childProps.className}}}):e.setState({childProps:{}})};return{action:a.a.animation,payload:{beforeAnimate:function(){if(n.payload.beforeAnimate){var e=l(),t=n.payload.beforeAnimate(o,e.resolve,c);return t&&r(t),e.promise}return Promise.resolve()},animate:function(){var e=l(),t=n.payload.animate(o,e.resolve,c);return t&&r(t),e.promise},afterAnimate:function(){if(n.payload.afterAnimate){var e=l(),t=n.payload.afterAnimate(o,e.resolve,c);return t&&r(t),e.promise}return Promise.resolve()},cleanup:function(){t&&(Object(i.unmountComponentAtNode)(t),document.body.removeChild(t)),c(null)}}}}return n}),s=u.reduce(function(n,e){switch(e.action){case a.a.animation:return n[n.length-1].push(e.payload),n;case a.a.wait:return n.push([]),n;default:return n}},[[]]);e.abortAnimations=function(){e.animating&&(e.animating=!1,s.forEach(function(n){return n.forEach(function(n){return n.cleanup()})}))};var p=u.map(function(n){return n.action===a.a.animation?n.payload.beforeAnimate():Promise.resolve()});Promise.all(p).then(function(){var n=l();return requestAnimationFrame(function(){requestAnimationFrame(function(){return n.resolve()})}),n.promise}).then(function(){return s.reduce(function(n,e){return n.then(function(){return Promise.all(e.map(function(n){return n.animate()}))})},Promise.resolve()).then(function(){e.setState({shown:!0});var t=e.props.context;return t&&t.onFinish({name:n}),s.reduce(function(n,e){return n.then(function(){return Promise.all(e.map(function(n){return n.afterAnimate()})).then(function(){})})},Promise.resolve())}).then(function(){s.forEach(function(n){return n.forEach(function(n){return n.cleanup()})})}).then(function(){e.animating=!1,(0,e.props.onFinish)()})})}},e.setRef=function(n){e.containerElement=n},e.setTargetRef=function(n){e.targetElement=n},e.setReactNode=function(n){e.renderChildren=n},e.setData=function(n){e.data=n},e}return m(e,n),e.prototype.componentDidMount=function(){var n=this.props,e=n.in,t=n.name;void 0===e&&p(t)?this.executeAnimations():(void 0===e||e)&&this.showSelfAndNotifyManager()},e.prototype.componentWillUpdate=function(n){var e=this.props.in;!1===n.in&&!0===e&&(this.storeDOMData(),this.delayedClearDOMData(),this.abortAnimations())},e.prototype.componentDidUpdate=function(n){var e=this.props,t=e.in,r=e.name;if(t!==n.in&&t){if(p(r))return void this.executeAnimations();this.showSelfAndNotifyManager()}},e.prototype.componentWillUnmount=function(){this.storeDOMData(),this.delayedClearDOMData(),this.abortAnimations(),this.unmounting=!0},e.prototype.showSelfAndNotifyManager=function(){var n=this.props,e=n.context,t=n.name;this.setState({shown:!0}),e&&e.onFinish({name:t})},e.prototype.delayedClearDOMData=function(){var n=this.props.name;setTimeout(function(){return e=n,s.delete(e);var e},this.TIME_TO_WAIT_FOR_NEXT_BABA)},e.prototype.storeDOMData=function(){var n,e;if(!this.unmounting&&this.data){var t=Object(c.c)(this.containerElement),r=this.targetElement?Object(c.c)(this.targetElement):void 0;0;var o=this.props.name;n=o,e=h({},t,{targetDOMData:r,containerElement:this.containerElement,targetElement:this.targetElement,render:this.renderChildren,data:this.data}),s.set(n,e)}},e.prototype.render=function(){var n=this.state,e=n.childProps,t=n.shown,r=this.props.children;return o.createElement(a.c,{receiveData:this.setData,receiveRenderChildren:this.setReactNode,receiveRef:this.setRef,receiveTargetRef:this.setTargetRef,style:h({opacity:t?1:0},e.style),className:e.className},"function"==typeof r?r:o.Children.only(r))},e.displayName="Baba",e.defaultProps={onFinish:u.a},e}(o.PureComponent);e.a=Object(d.b)(b)},222:function(n,e,t){"use strict";var r=[{name:"In a Perfect World",artist:"Kodaline",recentlyAdded:!0,heroBg:"",color:"#223350",albumArt:t(819),songs:[{name:"One Day",time:"4:15"},{name:"All I Want",time:"5:05"},{name:"Love Like This",time:"3:36"},{name:"High Hopes",time:"3:50"},{name:"Brand New Day",time:"3:25"},{name:"After The Fall",time:"3:35"},{name:"Big Bad World",time:"4:21"},{name:"All Comes Down",time:"4:55"},{name:"Talk",time:"4:28"},{name:"Pray",time:"3:33"},{name:"Way Back When",time:"3:26"}],emphasis:!0},{name:"Supermodel",artist:"Foster the People",heroBg:"",color:"#265968",albumArt:t(820),songs:[{name:"Are You What You Want to Be?",time:"4:30"},{name:"Ask Yourself",time:"4:23"},{name:"Coming of Age",time:"4:40"},{name:"Nevermind",time:"5:17"},{name:"Pseudologia Fantastica",time:"5:31"},{name:"The Angelic Welcome of Mr. Jones",time:"0:33"},{name:"Best Friend",time:"4:28"},{name:"A Beginner's Guide to Destroying the Moon",time:"5:09"},{name:"The Truth",time:"4:22"},{name:"Fire Escape",time:"4:29"}]},{name:"Halcyon Days",artist:"Ellie Goulding",heroBg:"",color:"#78014f",albumArt:t(821),songs:[{name:"Don't Say a Word",time:"4:07"},{name:"My Blood",time:"3:54"},{name:"Anything Could Happen",time:"4:47"},{name:"Only You",time:"3:51"},{name:"Halcyon",time:"3:25"},{name:"Figure 8",time:"4:08"},{name:"Joy",time:"3:14"},{name:"Hanging On",time:"3:22"},{name:"Explosions",time:"4:03"},{name:"I Know You Care",time:"3:26"},{name:"Atlantis",time:"3:53"},{name:"Dead in the Water",time:"4:44"},{name:"I Need Your Love (Calvin Harris featuring Ellie Goulding) (bonus track)",time:"3:58"},{name:"Burn",time:"3:51"},{name:"Goodness Gracious",time:"3:46"},{name:"You My Everything",time:"3:29"},{name:"Hearts Without Chains",time:"3:45"},{name:"Stay Awake (with Madeon)",time:"3:26"},{name:"Under Control",time:"4:06"},{name:"Flashlight (with DJ Fresh)",time:"3:33"},{name:"How Long Will I Love You (bonus track)",time:"2:34"}]},{name:"Native",artist:"One Republic",heroBg:"",color:"#aa003a",albumArt:t(822),songs:[]},{name:"Comedown Machine",artist:"The Strokes",heroBg:"",albumArt:t(823),color:"#92010d",songs:[]},{name:"G I R L",artist:"Pharrell Williams",heroBg:t(824),albumArt:t(825),color:"#f7bb0e",songs:[{name:"Marilyn Monroe",time:"5:51"},{name:"Brand New (duet with Justin Timberlake)",time:"4:31"},{name:"Hunter",time:"4:00"},{name:"Gush",time:"3:54"},{name:"Happy",time:"3:53"},{name:"Come Get It Bae",time:"3:21"},{name:"Gust of Wind",time:"4:45"},{name:"Lost Queen",time:"7:56"},{name:"Know Who You Are (duet with Alicia Keys)",time:"3:56"},{name:"It Girl",time:"4:49"}],emphasis:!0},{name:"Jamie Lidell",artist:"Jamie Lidell",heroBg:"",color:"#aba9a2",albumArt:t(826),songs:[]},{name:"Rumours",artist:"Fleetwood Mac",heroBg:"",color:"#bdb27b",albumArt:t(827),songs:[]},{name:"Holy Fire",artist:"Foals",heroBg:"",color:"#b19f46",albumArt:t(828),songs:[]}];e.a=r},255:function(n,e,t){"use strict";var r,o=t(19),i=t.n(o),a=t(7),c=t.n(a),l=t(6),u=t.n(l),s=t(0),f=(r=function(n,e){return(r=u.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?c()(e):(t.prototype=e.prototype,new t)}),p=function(){return(p=i.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},d=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={started:!1},e.start=function(){requestAnimationFrame(function(){e.setState({started:!0})})},e.onTransitionEnd=function(n){e.props.onFinish()},e}return f(e,n),e.prototype.componentDidMount=function(){void 0!==this.props.step&&this.start()},e.prototype.componentDidUpdate=function(){void 0===this.props.step||this.state.started||this.start()},e.prototype.render=function(){var n=this.props,e=n.style,t=n.keyframes,r=n.step,o=n.children,i=void 0!==r&&this.state.started;return s.createElement("span",{onTransitionEnd:this.onTransitionEnd,style:p({},e,i?t[r||0]:{})},o)},e}(s.Component);e.a=d},256:function(n,e,t){"use strict";var r,o=t(0),i=t(12),a=t(116),c=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),l=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return c(e,n),e.prototype.render=function(){var n=this;return o.createElement(i.b.Consumer,null,function(e){return n.props.children({ref:e?e.targetRef:a.a})})},e}(o.Component);e.a=l},257:function(n,e,t){"use strict";var r,o=t(0),i=t(12),a=t(56),c=t(39),l=t(116),u=t(44),s=t(52),f=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),p=function(){return(p=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},d=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.renderAnimation=function(n,t){void 0===t&&(t={});var r=e.props,o=r.timingFunction,i=r.duration,u=r.zIndex,s=Object(c.d)(n.fromTarget),f=n.toTarget.location.left-s.location.left,d=n.toTarget.location.top-s.location.top;return n.fromTarget.render({ref:l.a,style:p({},s.location,{zIndex:u,transition:"transform "+i+"ms "+o+", opacity "+i/2+"ms "+o,position:"absolute",transformOrigin:"0 0",transform:"translate3d(0, 0, 0) scale3d(1, 1, 1)",opacity:1,margin:0,height:s.size.height+"px",width:s.size.width+"px"},t.moveToTarget?{transform:"translate3d("+f+"px, "+d+"px, 0) scale3d("+a.b(n.toTarget.size.width,s.size.width)+", "+a.b(n.toTarget.size.height,s.size.height)+", 1)",opacity:0}:{})})},e.beforeAnimate=function(n,t){return t(),e.renderAnimation(n)},e.animate=function(n,t){var r=e.props.duration;return setTimeout(t,r),e.renderAnimation(n,{moveToTarget:!0})},e}return f(e,n),e.prototype.render=function(){var n=this.props.children;return o.createElement(i.c,{data:{action:i.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate}}},n)},e.defaultProps={duration:500,timingFunction:Object(u.c)(),zIndex:s.b.fadeMove},e}(o.Component);e.a=d},259:function(n,e,t){"use strict";t.d(e,"c",function(){return u}),t.d(e,"b",function(){return s}),t.d(e,"a",function(){return f});var r,o,i,a=t(2),c=t(587),l=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},u=Object(a.b)(c.a)(r||(r=l(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n"]))),s=a.b.main(o||(o=l(["\n  box-shadow: 0 1px 40px rgba(32, 33, 36, 0.15);\n  background-color: #fff;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n"],["\n  box-shadow: 0 1px 40px rgba(32, 33, 36, 0.15);\n  background-color: #fff;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n"]))),f=Object(a.b)(c.a)(i||(i=l(["\n  color: white;\n"],["\n  color: white;\n"])))},260:function(n,e,t){"use strict";t.d(e,"a",function(){return r});var r=[{name:"Alexander Ovechkin",image:t(800)},{name:"T.J Oshie",image:t(801)},{name:"Braden Holtby",image:t(802)},{name:"Nathan Walker",image:t(803)},{name:"Nicklas Backstrom",image:t(804)},{name:"Evgeny Kuznetsov",image:t(805)},{name:"Devante Smith-Pelly",image:t(806)},{name:"Lars Eller",image:t(807)},{name:"John Carlson",image:t(808)}]},261:function(n,e,t){"use strict";t.d(e,"b",function(){return l}),t.d(e,"c",function(){return u}),t.d(e,"a",function(){return s});var r,o,i,a=t(2),c=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},l=a.b.div(r||(r=c(["\n  margin: 200px 30px;\n  height: 50px;\n  border-radius: 8px;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16), 0 0 0 1px rgba(0, 0, 0, 0.08);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  background: white;\n"],["\n  margin: 200px 30px;\n  height: 50px;\n  border-radius: 8px;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16), 0 0 0 1px rgba(0, 0, 0, 0.08);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  background: white;\n"]))),u=a.b.input(o||(o=c(["\n  border: none;\n  outline: none;\n  line-height: 25px;\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0 0 0 16px;\n  font-size: 16px;\n  word-wrap: break-word;\n  outline: none;\n  display: flex;\n  flex: 1;\n  -webkit-tap-highlight-color: transparent;\n  width: 100%;\n  color: inherit;\n"],["\n  border: none;\n  outline: none;\n  line-height: 25px;\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0 0 0 16px;\n  font-size: 16px;\n  word-wrap: break-word;\n  outline: none;\n  display: flex;\n  flex: 1;\n  -webkit-tap-highlight-color: transparent;\n  width: 100%;\n  color: inherit;\n"]))),s=a.b.div(i||(i=c(["\n  display: flex;\n  justify-content: center;\n  color: rgba(0, 0, 0, 0.87);\n  border-bottom: 1px solid #dfe1e5;\n  position: absolute;\n  margin-top: 26px;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: white;\n"],["\n  display: flex;\n  justify-content: center;\n  color: rgba(0, 0, 0, 0.87);\n  border-bottom: 1px solid #dfe1e5;\n  position: absolute;\n  margin-top: 26px;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: white;\n"])))},262:function(n,e,t){"use strict";var r,o=t(0),i=t(12),a=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),c=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return a(e,n),e.prototype.render=function(){var n=this.props,e=n.children,t=n.duration;return o.createElement(i.c,{data:{action:i.a.animation,payload:{beforeAnimate:function(n,e){e()},animate:function(n,e){setTimeout(e,t)},afterAnimate:function(n,e){e()}}}},e)},e.defaultProps={duration:1},e}(o.Component);e.a=c},38:function(n,e,t){"use strict";t.d(e,"c",function(){return c}),t.d(e,"a",function(){return l}),t.d(e,"b",function(){return u}),t.d(e,"d",function(){return s});var r=t(19),o=t.n(r),i=function(){return(i=o.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)};function a(){var n=document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body&&document.body.scrollTop,e=document.documentElement&&document.documentElement.scrollLeft?document.documentElement.scrollLeft:document.body&&document.body.scrollLeft;return{scrollTop:n||0,scrollLeft:e||0}}function c(n,e){void 0===e&&(e={});var t=n.getBoundingClientRect(),r=a(),o=r.scrollLeft,i=r.scrollTop,c=(t.height-n.offsetHeight)/2,l=(t.width-n.offsetWidth)/2;return{size:{width:e.useOffsetSize?n.offsetWidth:t.width,height:e.useOffsetSize?n.offsetHeight:t.height},location:{left:t.left+o+l,top:t.top+i+c},raw:{rect:t,scrollTop:i,scrollLeft:o}}}function l(n){return{top:n.location.top+Math.ceil(n.size.width/2),left:n.location.left-Math.ceil(n.size.height/2)}}function u(){return{left:Math.ceil(window.innerWidth/2),top:Math.ceil(window.innerHeight/2)}}function s(n){var e=a(),t=e.scrollTop,r=e.scrollLeft,o=t-n.raw.scrollTop,c=r-n.raw.scrollLeft;return i({},n,{location:{top:n.location.top+o,left:n.location.left+c}})}},39:function(n,e,t){"use strict";t.d(e,"c",function(){return i}),t.d(e,"a",function(){return a}),t.d(e,"b",function(){return c}),t.d(e,"d",function(){return l});var r=function(){return(r=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)};function o(){var n=document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body&&document.body.scrollTop,e=document.documentElement&&document.documentElement.scrollLeft?document.documentElement.scrollLeft:document.body&&document.body.scrollLeft;return{scrollTop:n||0,scrollLeft:e||0}}function i(n,e){void 0===e&&(e={});var t=n.getBoundingClientRect(),r=o(),i=r.scrollLeft,a=r.scrollTop,c=(t.height-n.offsetHeight)/2,l=(t.width-n.offsetWidth)/2;return{size:{width:e.useOffsetSize?n.offsetWidth:t.width,height:e.useOffsetSize?n.offsetHeight:t.height},location:{left:t.left+i+l,top:t.top+a+c},raw:{rect:t,scrollTop:a,scrollLeft:i}}}function a(n){return{top:n.location.top+Math.ceil(n.size.width/2),left:n.location.left-Math.ceil(n.size.height/2)}}function c(){return{left:Math.ceil(window.innerWidth/2),top:Math.ceil(window.innerHeight/2)}}function l(n){var e=o(),t=e.scrollTop,i=e.scrollLeft,a=t-n.raw.scrollTop,c=i-n.raw.scrollLeft;return r({},n,{location:{top:n.location.top+a,left:n.location.left+c}})}},44:function(n,e,t){"use strict";t.d(e,"c",function(){return r}),t.d(e,"a",function(){return o}),t.d(e,"b",function(){return i});var r=function(){return"cubic-bezier(0.4, 0.0, 0.2, 1)"},o=function(){return"cubic-bezier(0.4, 0.0, 1, 1)"},i=function(){return"cubic-bezier(0.0, 0.0, 0.2, 1)"}},45:function(n,e,t){"use strict";t.d(e,"i",function(){return x}),t.d(e,"g",function(){return w}),t.d(e,"d",function(){return E}),t.d(e,"e",function(){return O}),t.d(e,"f",function(){return k}),t.d(e,"k",function(){return j}),t.d(e,"l",function(){return _}),t.d(e,"j",function(){return P}),t.d(e,"b",function(){return T}),t.d(e,"a",function(){return C}),t.d(e,"n",function(){return A}),t.d(e,"m",function(){return z}),t.d(e,"c",function(){return R}),t.d(e,"o",function(){return M}),t.d(e,"h",function(){return D});var r,o,i,a,c,l,u,s,f,p,d,m,h,g,b,y=t(2),v=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},x=y.b.div(r||(r=v(["\n  min-height: 120vh;\n  padding-top: 200px;\n  position: relative;\n  background-color: #fbfbfb;\n  box-sizing: border-box;\n  font-family: Roboto, sans-serif;\n\n  * {\n    box-sizing: border-box;\n  }\n"],["\n  min-height: 120vh;\n  padding-top: 200px;\n  position: relative;\n  background-color: #fbfbfb;\n  box-sizing: border-box;\n  font-family: Roboto, sans-serif;\n\n  * {\n    box-sizing: border-box;\n  }\n"]))),w=y.b.div(o||(o=v(["\n  padding-top: 110px;\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 16px;\n  max-width: 800px;\n  margin: 0 auto;\n"],["\n  padding-top: 110px;\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 16px;\n  max-width: 800px;\n  margin: 0 auto;\n"]))),E=y.b.div(i||(i=v(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  box-shadow: 0 1px 40px rgba(32, 33, 36, 0.1);\n  background-color: #fff;\n  border-radius: 3px;\n  z-index: 1;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  box-shadow: 0 1px 40px rgba(32, 33, 36, 0.1);\n  background-color: #fff;\n  border-radius: 3px;\n  z-index: 1;\n"]))),O=y.b.div(a||(a=v(["\n  position: relative;\n  height: 130px;\n  z-index: 1;\n  transition: transform ease-in-out 200ms, box-shadow ease-in-out 100ms;\n  cursor: pointer;\n  font-family: Roboto, sans-serif;\n\n  :hover {\n    box-shadow: 0 1px 50px rgba(32, 33, 36, 0.2);\n    transform: translateY(-2px);\n  }\n"],["\n  position: relative;\n  height: 130px;\n  z-index: 1;\n  transition: transform ease-in-out 200ms, box-shadow ease-in-out 100ms;\n  cursor: pointer;\n  font-family: Roboto, sans-serif;\n\n  :hover {\n    box-shadow: 0 1px 50px rgba(32, 33, 36, 0.2);\n    transform: translateY(-2px);\n  }\n"]))),k=y.b.div(c||(c=v(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 8px;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  z-index: 999;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 8px;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  z-index: 999;\n"]))),j=y.b.div(l||(l=v(["\n  width: 600px;\n  height: 100vh;\n  z-index: 1;\n  margin: 0 auto;\n  position: relative;\n\n  * {\n    box-sizing: border-box;\n  }\n"],["\n  width: 600px;\n  height: 100vh;\n  z-index: 1;\n  margin: 0 auto;\n  position: relative;\n\n  * {\n    box-sizing: border-box;\n  }\n"]))),_=y.b.div(u||(u=v(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 999;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 999;\n"]))),P=y.b.div(s||(s=v(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 50px rgba(32, 33, 36, 0.2);\n  font-family: Roboto, sans-serif;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 50px rgba(32, 33, 36, 0.2);\n  font-family: Roboto, sans-serif;\n"]))),T=y.b.div(f||(f=v(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: #3c71ca;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/vQ3jAr1UBy_9fC4Fhz2Ao6tFBTw=/0x0:3000x2000/1820x1213/filters:focal(1883x395:2363x875):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60002177/OvechkinWins_Getty_Ringer.0.jpg');\n  background-size: cover;\n  background-position: top center;\n  z-index: 0;\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: #3c71ca;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/vQ3jAr1UBy_9fC4Fhz2Ao6tFBTw=/0x0:3000x2000/1820x1213/filters:focal(1883x395:2363x875):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60002177/OvechkinWins_Getty_Ringer.0.jpg');\n  background-size: cover;\n  background-position: top center;\n  z-index: 0;\n"]))),C=y.b.div(p||(p=v(["\n  max-width: 1000px;\n  margin: 0 auto;\n  height: 400px;\n  background-color: #cf132b;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/vQ3jAr1UBy_9fC4Fhz2Ao6tFBTw=/0x0:3000x2000/1820x1213/filters:focal(1883x395:2363x875):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60002177/OvechkinWins_Getty_Ringer.0.jpg');\n  background-size: cover;\n  background-position: top center;\n"],["\n  max-width: 1000px;\n  margin: 0 auto;\n  height: 400px;\n  background-color: #cf132b;\n  background-image: url('https://cdn.vox-cdn.com/thumbor/vQ3jAr1UBy_9fC4Fhz2Ao6tFBTw=/0x0:3000x2000/1820x1213/filters:focal(1883x395:2363x875):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60002177/OvechkinWins_Getty_Ringer.0.jpg');\n  background-size: cover;\n  background-position: top center;\n"]))),A=y.b.div(d||(d=v(["\n  margin: 0 16px;\n  width: 125px;\n  height: 100px;\n  background-color: #f1f1f1;\n  flex-shrink: 0;\n"],["\n  margin: 0 16px;\n  width: 125px;\n  height: 100px;\n  background-color: #f1f1f1;\n  flex-shrink: 0;\n"]))),z=y.b.img(m||(m=v(["\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n"],["\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n"]))),R=Object(y.b)(A)(h||(h=v(["\n  width: 100%;\n  height: 266px;\n  margin: 0;\n  border-radius: 3px 3px 0 0;\n"],["\n  width: 100%;\n  height: 266px;\n  margin: 0;\n  border-radius: 3px 3px 0 0;\n"]))),M=y.b.div(g||(g=v(["\n  font-size: 20px;\n  font-family: Roboto, sans-serif;\n  margin: 16px;\n  text-align: center;\n  text-transform: uppercase;\n"],["\n  font-size: 20px;\n  font-family: Roboto, sans-serif;\n  margin: 16px;\n  text-align: center;\n  text-transform: uppercase;\n"]))),D=y.b.div(b||(b=v(["\n  position: absolute;\n  top: 400px;\n  left: 0;\n  right: 0;\n  text-transform: uppercase;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  font-size: 200px;\n  width: 100%;\n  overflow: hidden;\n  flex-wrap: wrap;\n  padding: 20px;\n  pointer-events: none;\n  font-weight: bold;\n"],["\n  position: absolute;\n  top: 400px;\n  left: 0;\n  right: 0;\n  text-transform: uppercase;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  font-size: 200px;\n  width: 100%;\n  overflow: hidden;\n  flex-wrap: wrap;\n  padding: 20px;\n  pointer-events: none;\n  font-weight: bold;\n"])))},465:function(n,e,t){"use strict";t.d(e,"b",function(){return u});var r,o=t(0),i=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),a=function(){return(a=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},c=o.createContext(void 0),l=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={style:{visibility:"hidden"}},e.onFinish=function(n){var t=e.props,r=t.context,o=t.name;r&&r.onFinish&&r.onFinish(n),o&&n.name!==o||e.setState({style:{visibility:"visible"}})},e}return i(e,n),e.prototype.render=function(){var n=this.props.children,e=this.state.style;return o.createElement(c.Provider,{value:{onFinish:this.onFinish}},n({style:e}))},e}(o.Component),u=function(n){var e;return(e=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.render=function(){var e=this,t=n;return o.createElement(c.Consumer,null,function(n){return o.createElement(t,a({context:n},e.props))})},t}(o.Component)).displayName="babaManagerContext("+n.displayName+")",e};e.a=u(l)},498:function(n,e,t){"use strict";var r,o=t(19),i=t.n(o),a=t(7),c=t.n(a),l=t(6),u=t.n(l),s=t(0),f=t(103),p=t(55),d=t(38),m=t(54),h=t(51),g=(r=function(n,e){return(r=u.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?c()(e):(t.prototype=e.prototype,new t)}),b=function(){return(b=i.a||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},y=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.beforeAnimate=function(n,t,r){var o=e.props,i=o.zIndex,a=o.useFocalElement,c=o.transformX,l=o.transformY;if(a&&!n.toTarget.targetDOMData)throw new Error("yubaba\ntargetElement was missing.");var u=Object(d.d)(n.fromTarget),s=a&&n.toTarget.targetDOMData?n.toTarget.targetDOMData:n.toTarget,f=c?u.location.left-n.toTarget.location.left:0,m=l?u.location.top-n.toTarget.location.top:0;r({style:function(n){return b({},n,{zIndex:i,opacity:1,transformOrigin:"0 0",visibility:"visible",willChange:Object(h.a)("transform")(n.willChange),transform:"translate3d("+f+"px, "+m+"px, 0) scale3d("+p.b(u.size.width,s.size.width)+", "+p.b(u.size.height,s.size.height)+", 1)"})}}),t()},e.animate=function(n,t,r){var o=e.props,i=o.duration,a=o.timingFunction;r({style:function(n){return b({},n,{transition:Object(h.a)("transform "+i+"ms "+a+", opacity "+i/2+"ms "+a)(n.transition),transform:"translate3d(0, 0, 0) scale3d(1, 1, 1)"})}}),setTimeout(function(){return t()},i)},e}return g(e,n),e.prototype.render=function(){var n=this.props.children;return s.createElement(f.c,{data:{action:f.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate}}},n)},e.defaultProps={duration:500,timingFunction:Object(m.c)(),zIndex:h.b.move,useFocalElement:!1,transformX:!0,transformY:!0},e}(s.Component);e.a=y},51:function(n,e,t){"use strict";t.d(e,"a",function(){return r}),t.d(e,"b",function(){return o});var r=function(n){return function(e){return e?n+", "+e:n}},o={circleExpand:1e3,circleShrink:1e3,move:1e3,fadeMove:1001,concealMove:1e3}},52:function(n,e,t){"use strict";t.d(e,"a",function(){return r}),t.d(e,"b",function(){return o});var r=function(n){return function(e){return e?n+", "+e:n}},o={circleExpand:1e3,circleShrink:1e3,move:1e3,fadeMove:1001,concealMove:1e3}},54:function(n,e,t){"use strict";t.d(e,"c",function(){return r}),t.d(e,"a",function(){return o}),t.d(e,"b",function(){return i});var r=function(){return"cubic-bezier(0.4, 0.0, 0.2, 1)"},o=function(){return"cubic-bezier(0.4, 0.0, 1, 1)"},i=function(){return"cubic-bezier(0.0, 0.0, 0.2, 1)"}},55:function(n,e,t){"use strict";function r(n){var e=n.width,t=n.height,r=Math.pow(e,2),o=Math.pow(t,2),i=Math.sqrt(r+o);return Math.ceil(i)}function o(n,e){return n/e}t.d(e,"a",function(){return r}),t.d(e,"b",function(){return o})},56:function(n,e,t){"use strict";function r(n){var e=n.width,t=n.height,r=Math.pow(e,2),o=Math.pow(t,2),i=Math.sqrt(r+o);return Math.ceil(i)}function o(n,e){return n/e}t.d(e,"a",function(){return r}),t.d(e,"b",function(){return o})},580:function(n,e,t){"use strict";var r,o,i=t(0),a=t(91),c=t(12),l=t(39),u=t(116),s=t(44),f=t(52),p=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),d=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},m=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.renderAnimation=function(n,t){if(void 0===t&&(t={}),!n.fromTarget.targetDOMData)throw new Error("yubaba\ntargetElement was missing.");var r=e.props,i=r.duration,c=r.timingFunction,s=r.zIndex,f=Object(l.d)(n.fromTarget);return n.fromTarget.render({ref:u.a,style:{zIndex:s,opacity:t.fadeOut?0:1,transition:"transform "+i+"ms "+c+", height "+i+"ms "+c+", width "+i+"ms "+c+", opacity "+i/2+"ms "+c,position:"absolute",transformOrigin:"0 0",willChange:"transform, height, width",top:f.location.top,left:f.location.left,height:t.moveToTarget?n.toTarget.size.height:f.size.height,width:t.moveToTarget?n.toTarget.size.width:f.size.width,overflow:"hidden",transform:t.moveToTarget?"translate3d("+(n.toTarget.location.left-n.fromTarget.location.left)+"px, "+(n.toTarget.location.top-n.fromTarget.location.top)+"px, 0)":void 0},className:t.moveToTarget?Object(a.a)(o||(o=d(["\n            > * {\n              transition: transform ","ms ",";\n              transform: translate3d(\n                -","px,\n                -","px,\n                0\n              );\n            }\n          "],["\n            > * {\n              transition: transform ","ms ",";\n              transform: translate3d(\n                -","px,\n                -","px,\n                0\n              );\n            }\n          "])),i,c,n.fromTarget.targetDOMData.location.left-n.fromTarget.location.left,n.fromTarget.targetDOMData.location.top-n.fromTarget.location.top):void 0})},e.beforeAnimate=function(n,t){return t(),e.renderAnimation(n)},e.animate=function(n,t){var r=e.props.duration;return setTimeout(t,r),e.renderAnimation(n,{moveToTarget:!0})},e.afterAnimate=function(n,t,r){return r({style:function(){return{opacity:1}}}),setTimeout(t,100),e.renderAnimation(n,{moveToTarget:!0,fadeOut:!0})},e}return p(e,n),e.prototype.render=function(){var n=this.props.children;return i.createElement(c.c,{data:{action:c.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate,afterAnimate:this.afterAnimate}}},n)},e.defaultProps={duration:500,timingFunction:Object(s.c)(),zIndex:f.b.concealMove},e}(i.Component);e.a=m},581:function(n,e,t){"use strict";var r,o=t(0),i=t(257),a=t(149),c=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),l=function(){return(l=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},u=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(n);o<r.length;o++)e.indexOf(r[o])<0&&(t[r[o]]=n[r[o]])}return t},s=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return c(e,n),e.prototype.render=function(){var n=this.props,e=n.children,t=u(n,["children"]);return o.createElement(a.a,l({},t),o.createElement(i.a,l({},t),e))},e}(o.Component);e.a=s},584:function(n,e,t){"use strict";var r,o,i,a,c,l,u,s,f,p,d,m,h,g=t(0),b=t(2),y=t(4),v=t(579),x=t.n(v),w=t(148),E=t.n(w),O=t(158),k=t.n(O),j=t(463),_=t(7),P=t.n(_),T=t(6),C=t.n(T),A=t(103),z=t(55),R=t(38),M=t(255),D=t(54),F=t(51),N=(r=function(n,e){return(r=C.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?P()(e):(t.prototype=e.prototype,new t)}),I=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.renderAnimation=function(n,t){var r=e.props,o=r.duration,i=r.background,a=r.zIndex,c=Math.min(n.toTarget.size.width,n.toTarget.size.height),l=Object(z.a)(n.toTarget.size),u=Object(R.a)(n.toTarget),s=Object(R.b)(),f=Object(z.a)({width:window.innerWidth,height:window.innerHeight}),p={width:s.left-u.left,height:s.top-u.top},d=Object(z.a)(p),m=Math.ceil((f+d)/c);return g.createElement(M.a,{style:{zIndex:a,left:n.toTarget.location.left-(l-n.toTarget.size.width)/2,top:n.toTarget.location.top-(l-n.toTarget.size.height)/2,width:l,height:l,borderRadius:"50%",position:"absolute",background:i,willChange:"transform",transition:"transform "+Object(D.b)()+" "+o+"ms, opacity "+Object(D.c)()+" "+o+"ms",transform:"scale("+m+")"},keyframes:[{transform:"scale(1)"},{transform:"scale(1)",opacity:0}],step:t.step,onFinish:t.onFinish})},e.beforeAnimate=function(n,t){return t(),e.renderAnimation(n,{onFinish:t})},e.animate=function(n,t){return e.renderAnimation(n,{onFinish:t,step:0})},e.afterAnimate=function(n,t){return e.renderAnimation(n,{onFinish:t,step:1})},e}return N(e,n),e.prototype.render=function(){var n=this.props.children;return g.createElement(A.c,{data:{action:A.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate,afterAnimate:this.afterAnimate}}},n)},e.defaultProps={duration:500,zIndex:F.b.circleShrink},e}(g.Component),B=function(){var n=function(e,t){return(n=C.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(e,t)};return function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?P()(t):(r.prototype=t.prototype,new r)}}(),W=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.data={action:A.a.wait},e}return B(e,n),e.prototype.render=function(){return g.createElement(A.c,{data:this.data},this.props.children)},e}(g.Component),S=t(1135),H=t(498),L=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},U=(o=function(n,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}o(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),Y=b.b.div(i||(i=L(["\n  width: 900px;\n  margin: 0 auto;\n  color: ",";\n  font-family: Roboto, sans-serif;\n  padding-top: 150px;\n  padding-bottom: 124px;\n"],["\n  width: 900px;\n  margin: 0 auto;\n  color: ",";\n  font-family: Roboto, sans-serif;\n  padding-top: 150px;\n  padding-bottom: 124px;\n"])),function(n){return"#000"===Object(j.b)(n.color)?"#000000b0":"white"}),G=b.b.div(a||(a=L(["\n  display: grid;\n  background: ",";\n  grid-template:\n    'album info' auto\n    'album released' auto;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: 1fr auto;\n"],["\n  display: grid;\n  background: ",";\n  grid-template:\n    'album info' auto\n    'album released' auto;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: 1fr auto;\n"])),function(n){return n.color}),q=b.b.img(c||(c=L(["\n  height: 300px;\n  width: 300px;\n  grid-area: album;\n"],["\n  height: 300px;\n  width: 300px;\n  grid-area: album;\n"]))),J=b.b.div(l||(l=L(["\n  background: ",";\n  padding: 30px;\n  grid-area: released;\n  position: relative;\n  opacity: 0.9;\n"],["\n  background: ",";\n  padding: 30px;\n  grid-area: released;\n  position: relative;\n  opacity: 0.9;\n"])),function(n){return n.color}),X=b.b.div(u||(u=L(["\n  grid-area: info;\n  display: flex;\n  align-items: center;\n  padding: 30px;\n  flex-wrap: wrap;\n  position: relative;\n  opacity: 0.9;\n"],["\n  grid-area: info;\n  display: flex;\n  align-items: center;\n  padding: 30px;\n  flex-wrap: wrap;\n  position: relative;\n  opacity: 0.9;\n"]))),K=b.b.div(s||(s=L(["\n  width: 100%;\n  margin-bottom: 20px;\n  font-size: 3em;\n"],["\n  width: 100%;\n  margin-bottom: 20px;\n  font-size: 3em;\n"]))),Q=b.b.div(f||(f=L(["\n  width: 100%;\n"],["\n  width: 100%;\n"]))),V=Object(b.b)(y.c)(p||(p=L(["\n  border-radius: 50% !important;\n  height: 48px;\n  width: 48px;\n  top: -26px;\n  position: absolute;\n  right: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"],["\n  border-radius: 50% !important;\n  height: 48px;\n  width: 48px;\n  top: -26px;\n  position: absolute;\n  right: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"]))),Z=b.b.div(d||(d=L(["\n  position: absolute;\n  top: 18px;\n  right: 12px;\n"],["\n  position: absolute;\n  top: 18px;\n  right: 12px;\n"]))),$=b.b.span(m||(m=L(["\n  margin-right: 20px;\n"],["\n  margin-right: 20px;\n"]))),nn=Object(b.b)(y.c)(h||(h=L(["\n  border-bottom-left-radius: 0 !important;\n  border-bottom-right-radius: 0 !important;\n"],["\n  border-bottom-left-radius: 0 !important;\n  border-bottom-right-radius: 0 !important;\n"]))),en=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return U(e,n),e.prototype.render=function(){var n=this.props,e=n.baba,t=n.color,r=n.shrink,o=n.wait,i=n.albumArt,a=n.name,c=n.artist,l=n.songs,u=r?I:A.c,s=o?W:A.c;return g.createElement(Y,{color:t},g.createElement(nn,{raised:!0,elevation:20,style:{minHeight:"90vh",overflow:"visible"}},g.createElement(G,{color:t},g.createElement(S.a,{name:e},g.createElement(H.a,null,g.createElement(s,null,g.createElement(u,{background:t},function(n){var e=n.ref,t=n.style;return g.createElement(q,{src:i,style:t,innerRef:e})})))),g.createElement(X,null,g.createElement(Z,null,g.createElement(y.e,{color:"inherit","aria-label":"Menu"},g.createElement(k.a,null)),g.createElement(y.e,{color:"inherit","aria-label":"Menu"},g.createElement(E.a,null))),g.createElement("div",null,g.createElement(K,null,a),g.createElement(Q,null,c))),g.createElement(J,{color:Object(j.a)(.1)(t)},"Released March, 2013",g.createElement(V,null,g.createElement(y.e,null,g.createElement(x.a,null))))),g.createElement(y.i,{style:{marginLeft:"5%",width:"92%"}},g.createElement(y.l,null,g.createElement(y.m,null,g.createElement(y.k,null,g.createElement("strong",null,"Track")),g.createElement(y.k,null,g.createElement("strong",null,"Artist")),g.createElement(y.k,{numeric:!0},g.createElement("strong",null,"Time")))),g.createElement(y.j,null,l.map(function(n,e){return g.createElement(y.m,null,g.createElement(y.k,null,g.createElement($,null,e+1)," ",n.name),g.createElement(y.k,null,c),g.createElement(y.k,{numeric:!0},n.time))})))))},e}(g.Component);e.a=en},585:function(n,e,t){"use strict";var r,o,i,a,c,l,u,s,f=t(0),p=t(2),d=t(158),m=t.n(d),h=t(7),g=t.n(h),b=t(6),y=t.n(b),v=t(103),x=t(55),w=t(38),E=t(255),O=t(54),k=t(51),j=(r=function(n,e){return(r=y.a||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?g()(e):(t.prototype=e.prototype,new t)}),_=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.renderAnimation=function(n,t){var r=e.props,o=r.duration,i=r.background,a=r.zIndex,c=Object(w.d)(n.fromTarget),l=Math.min(c.size.width,c.size.height),u=Object(x.a)(c.size),s=Object(w.a)(c),p=Object(w.b)(),d=Object(x.a)({width:window.innerWidth,height:window.innerHeight}),m={width:p.left-s.left,height:p.top-s.top},h=Object(x.a)(m),g=Math.ceil((d+h)/l);return f.createElement(E.a,{style:{zIndex:a,left:c.location.left-(u-c.size.width)/2,top:c.location.top-(u-c.size.height)/2,width:u,height:u,borderRadius:"50%",position:"absolute",background:i,transition:"transform "+Object(O.a)()+" "+o+"ms, opacity "+Object(O.c)()+" "+o/2+"ms",transform:"scale(1)",willChange:"transform",opacity:1},keyframes:[{transform:"scale("+g+")"},{transform:"scale("+g+")",opacity:0}],step:t.step,onFinish:t.onFinish})},e.beforeAnimate=function(n,t){return t(),e.renderAnimation(n,{onFinish:t})},e.animate=function(n,t){return e.renderAnimation(n,{onFinish:t,step:0})},e.afterAnimate=function(n,t){return e.renderAnimation(n,{onFinish:t,step:1})},e}return j(e,n),e.prototype.render=function(){var n=this.props.children;return f.createElement(v.c,{data:{action:v.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate,afterAnimate:this.afterAnimate}}},n)},e.defaultProps={duration:500,zIndex:k.b.circleExpand},e}(f.Component),P=t(1135),T=t(498),C=t(4),A=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},z=p.b.div(o||(o=A(["\n  position: relative;\n  width: ",";\n  height: ",";\n  flex-shrink: 0;\n  grid-column: ",";\n  grid-row: ",";\n  background: ",";\n"],["\n  position: relative;\n  width: ",";\n  height: ",";\n  flex-shrink: 0;\n  grid-column: ",";\n  grid-row: ",";\n  background: ",";\n"])),function(n){return n.emphasis?"100%":"250px"},function(n){return n.emphasis?"100%":"332px"},function(n){return n.emphasis?"span 2":""},function(n){return n.emphasis?"span 2":""},function(n){return n.color||""}),R=p.b.img(i||(i=A(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  cursor: pointer;\n  width: 100%;\n  bottom: ",";\n"],["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  cursor: pointer;\n  width: 100%;\n  bottom: ",";\n"])),function(n){return n.emphasis?"130px":"70px"}),M=p.b.div(a||(a=A(["\n  display: grid;\n  grid-template: ",";\n  box-sizing: border-box;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  color: #ffffffde;\n  padding: 12px;\n  font-family: Roboto, sans-serif;\n  height: 25%;\n"],["\n  display: grid;\n  grid-template: ",";\n  box-sizing: border-box;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  color: #ffffffde;\n  padding: 12px;\n  font-family: Roboto, sans-serif;\n  height: 25%;\n"])),function(n){return n.emphasis?"'title star' auto\n    'context star' auto":"'title star' auto\n    "}),D=p.b.div(c||(c=A(["\n  font-size: ",";\n  white-space: nowrap;\n  grid-area: title;\n  font-weight: 400;\n  letter-spacing: 0.5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"],["\n  font-size: ",";\n  white-space: nowrap;\n  grid-area: title;\n  font-weight: 400;\n  letter-spacing: 0.5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"])),function(n){return n.emphasis?"1.25em":"1em"}),F=p.b.div(l||(l=A(["\n  margin-top: 5px;\n  font-size: 0.85em;\n  grid-area: subtitle;\n  justify-content: flex-start;\n  font-weight: 300;\n"],["\n  margin-top: 5px;\n  font-size: 0.85em;\n  grid-area: subtitle;\n  justify-content: flex-start;\n  font-weight: 300;\n"]))),N=p.b.div(u||(u=A(["\n  grid-area: star;\n  justify-self: flex-end;\n  align-self: ",";\n"],["\n  grid-area: star;\n  justify-self: flex-end;\n  align-self: ",";\n"])),function(n){return n.emphasis?"flex-start":"center"}),I=p.b.div(s||(s=A(["\n  align-self: flex-end;\n  font-style: italic;\n  grid-area: context;\n  font-size: 0.7em;\n"],["\n  align-self: flex-end;\n  font-style: italic;\n  grid-area: context;\n  font-size: 0.7em;\n"])));e.a=function(n){var e=n.emphasis,t=n.albumArt,r=n.color,o=n.artist,i=n.onClick,a=n.name,c=n.baba,l=n.expand,u=l?_:v.c;return f.createElement(z,{emphasis:e,color:r},f.createElement(P.a,{name:c},f.createElement(u,{background:r},f.createElement(T.a,{delay:l?100:0},function(n){var e=n.ref,r=n.style;return f.createElement(R,{onClick:i,src:t,style:r,innerRef:e})}))),f.createElement(M,{emphasis:e},f.createElement(D,{emphasis:e},a,f.createElement(F,null,o)),f.createElement(N,{emphasis:e},f.createElement(C.e,{color:"inherit","aria-label":"Menu"},f.createElement(m.a,null))),e&&f.createElement(I,null,"Recently added")))}},586:function(n,e,t){"use strict";var r,o=t(0),i=t(91),a=t(12),c=t(44),l=t(52),u=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),s=function(){return(s=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},f=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.beforeAnimate=function(n,t,r){if(!n.toTarget.targetDOMData)throw new Error("yubaba\ntargetElement was missing.");var o=e.props,a=o.childrenTransformX,c=o.childrenTransformY,u=o.useClipPath,f=a?n.toTarget.targetDOMData.location.left-n.toTarget.location.left:0,p=c?n.toTarget.targetDOMData.location.top-n.toTarget.location.top:0,d=u?{clipPath:"inset(0 "+(n.toTarget.size.width-n.toTarget.targetDOMData.size.width)+"px "+(n.toTarget.size.height-n.toTarget.targetDOMData.size.height)+"px 0)"}:{height:n.toTarget.targetDOMData.size.height,width:n.toTarget.targetDOMData.size.width};r({style:function(e){return n.toTarget.targetDOMData?s({},e,d,{opacity:1,visibility:"visible",willChange:Object(l.a)("height, width, clip-path")(e.willChange),overflow:"hidden"}):void 0},className:function(){return n.toTarget.targetDOMData?Object(i.a)({"> *":{transform:"translate3d(-"+f+"px, -"+p+"px, 0)"}}):void 0}}),t()},e.animate=function(n,t,r){var o=e.props,a=o.timingFunction,c=o.duration,u=o.useClipPath?{clipPath:"inset(0 0 0 0)"}:{height:n.toTarget.size.height,width:n.toTarget.size.width};r({style:function(n){return s({},n,u,{transition:Object(l.a)("height "+c+"ms "+a+", width "+c+"ms "+a+", clip-path "+c+"ms "+a)(n.transition)})},className:function(){return Object(i.a)({"> *":{transform:"translate3d(0, 0, 0)",transition:"transform "+c+"ms "+a}})}}),setTimeout(function(){return t()},c)},e}return u(e,n),e.prototype.render=function(){var n=this.props.children;return o.createElement(a.c,{data:{action:a.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate}}},n)},e.defaultProps={duration:500,timingFunction:Object(c.c)(),childrenTransformX:!0,childrenTransformY:!0},e}(o.Component),p=t(149),d=function(){var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(e,t)};return function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),m=function(){return(m=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},h=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(n);o<r.length;o++)e.indexOf(r[o])<0&&(t[r[o]]=n[r[o]])}return t},g=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return d(e,n),e.prototype.render=function(){var n=this.props,e=n.children,t=h(n,["children"]);return o.createElement(f,m({},t),o.createElement(p.a,m({},t,{useFocalElement:!0}),e))},e.defaultProps=m({},f.defaultProps,p.a.defaultProps),e}(o.Component);e.a=g},588:function(n,e,t){"use strict";var r,o=t(0),i=t(12),a=t(56),c=t(39),l=t(162),u=t(44),s=t(52),f=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),p=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.renderAnimation=function(n,t){var r=e.props,i=r.duration,s=r.background,f=r.zIndex,p=Object(c.d)(n.fromTarget),d=Math.min(p.size.width,p.size.height),m=Object(a.a)(p.size),h=Object(c.a)(p),g=Object(c.b)(),b=Object(a.a)({width:window.innerWidth,height:window.innerHeight}),y={width:g.left-h.left,height:g.top-h.top},v=Object(a.a)(y),x=Math.ceil((b+v)/d);return o.createElement(l.a,{style:{zIndex:f,left:p.location.left-(m-p.size.width)/2,top:p.location.top-(m-p.size.height)/2,width:m,height:m,borderRadius:"50%",position:"absolute",background:s,transition:"transform "+Object(u.a)()+" "+i+"ms, opacity "+Object(u.c)()+" "+i/2+"ms",transform:"scale(1)",willChange:"transform",opacity:1},keyframes:[{transform:"scale("+x+")"},{transform:"scale("+x+")",opacity:0}],step:t.step,onFinish:t.onFinish})},e.beforeAnimate=function(n,t){return t(),e.renderAnimation(n,{onFinish:t})},e.animate=function(n,t){return e.renderAnimation(n,{onFinish:t,step:0})},e.afterAnimate=function(n,t){return e.renderAnimation(n,{onFinish:t,step:1})},e}return f(e,n),e.prototype.render=function(){var n=this.props.children;return o.createElement(i.c,{data:{action:i.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate,afterAnimate:this.afterAnimate}}},n)},e.defaultProps={duration:500,zIndex:s.b.circleExpand},e}(o.Component);e.a=p},589:function(n,e,t){"use strict";var r,o=t(0),i=t(12),a=t(56),c=t(39),l=t(162),u=t(44),s=t(52),f=(r=function(n,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),p=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.renderAnimation=function(n,t){var r=e.props,i=r.duration,s=r.background,f=r.zIndex,p=Math.min(n.toTarget.size.width,n.toTarget.size.height),d=Object(a.a)(n.toTarget.size),m=Object(c.a)(n.toTarget),h=Object(c.b)(),g=Object(a.a)({width:window.innerWidth,height:window.innerHeight}),b={width:h.left-m.left,height:h.top-m.top},y=Object(a.a)(b),v=Math.ceil((g+y)/p);return o.createElement(l.a,{style:{zIndex:f,left:n.toTarget.location.left-(d-n.toTarget.size.width)/2,top:n.toTarget.location.top-(d-n.toTarget.size.height)/2,width:d,height:d,borderRadius:"50%",position:"absolute",background:s,willChange:"transform",transition:"transform "+Object(u.b)()+" "+i+"ms, opacity "+Object(u.c)()+" "+i+"ms",transform:"scale("+v+")"},keyframes:[{transform:"scale(1)"},{transform:"scale(1)",opacity:0}],step:t.step,onFinish:t.onFinish})},e.beforeAnimate=function(n,t){return t(),e.renderAnimation(n,{onFinish:t})},e.animate=function(n,t){return e.renderAnimation(n,{onFinish:t,step:0})},e.afterAnimate=function(n,t){return e.renderAnimation(n,{onFinish:t,step:1})},e}return f(e,n),e.prototype.render=function(){var n=this.props.children;return o.createElement(i.c,{data:{action:i.a.animation,payload:{beforeAnimate:this.beforeAnimate,animate:this.animate,afterAnimate:this.afterAnimate}}},n)},e.defaultProps={duration:500,zIndex:s.b.circleShrink},e}(o.Component);e.a=p},677:function(n,e,t){t(265),t(678),n.exports=t(679)},679:function(n,e,t){"use strict";t.r(e),function(n){var e=t(17),r=t(576);Object(r.setOptions)({name:"yubaba (back to github)",url:"https://github.com/madou/yubaba",showStoriesPanel:!0,showAddonPanel:!0,addonPanelInRight:!0});var o=t(698);Object(e.configure)(function(){return o.keys().forEach(o)},n)}.call(this,t(42)(n))},698:function(n,e,t){var r={"./yubaba-examples/src/parentChild/emailThreads/stories.tsx":699,"./yubaba-examples/src/parentChild/hockeyCards/stories.tsx":799,"./yubaba-examples/src/parentChild/imageSearch/stories.tsx":809,"./yubaba-examples/src/parentChild/musicPlayer/stories.tsx":816,"./yubaba-examples/src/transformation/searchBar/stories.tsx":829,"./yubaba/src/BabaManager/stories.tsx":830,"./yubaba/src/animations/CircleExpand/stories.tsx":831,"./yubaba/src/animations/CircleShrink/stories.tsx":832,"./yubaba/src/animations/ConcealMove/stories.tsx":833,"./yubaba/src/animations/CrossFadeMove/stories.tsx":834,"./yubaba/src/animations/FadeMove/stories.tsx":835,"./yubaba/src/animations/Move/stories.tsx":836,"./yubaba/src/animations/Reveal/stories.tsx":837,"./yubaba/src/animations/RevealMove/stories.tsx":838,"./yubaba/src/animations/Swipe/stories.tsx":839};function o(n){var e=i(n);return t(e)}function i(n){var e=r[n];if(!(e+1)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e}o.keys=function(){return Object.keys(r)},o.resolve=i,n.exports=o,o.id=698},699:function(n,e,t){"use strict";t.r(e),function(n){var e=t(0),r=t(34),o=t(17),i=t(460),a=t(1137),c=t(263),l=t(1136),u=t(1135),s=t(1138),f=t(1132),p=t(1133),d=t(11),m=t(160),h=t.n(m),g=t(221),b=t.n(g),y=t(148),v=t.n(y),x=t(462),w=t.n(x),E=t(158),O=t.n(E),k=t(159),j=t.n(k),_=t(4),P=t(259),T=t(163),C=function(){return(C=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},A=function(n){return e.createElement(e.Fragment,null,e.createElement(_.o,{gutterBottom:!0,variant:"subheading",color:"inherit",style:{marginTop:20,marginLeft:22}},"Today"),e.createElement(_.f,null,T.a.map(function(t,o){return e.createElement(e.Fragment,{key:o},e.createElement(u.a,{name:"card-"+o,in:n.in},e.createElement(s.a,{duration:600},function(n){return e.createElement(_.g,{innerRef:function(e){return n.ref(Object(r.findDOMNode)(e))},style:n.style,button:!0},e.createElement(_.b,null,e.createElement(w.a,null)),e.createElement(_.h,{primary:t.title,secondary:t.recipients+" - "+t.body,secondaryTypographyProps:{noWrap:!0}}),e.createElement(P.c,{to:"/screen/"+o}))})),e.createElement(_.d,{inset:!0,component:"li"}))})))},z=function(n){return e.createElement(u.a,{name:"card-"+n.index},e.createElement(f.a,null,function(t){return e.createElement(P.b,C({innerRef:t.ref,style:t.style,className:t.className},n),e.createElement(_.g,null,e.createElement(_.o,{variant:"title"},T.a[n.index].title),e.createElement(_.e,{color:"inherit","aria-label":"Menu",style:{marginLeft:"auto",marginRight:"-10px"}},e.createElement(O.a,null))),e.createElement(_.d,null),e.createElement(p.a,null,function(t){return e.createElement(_.g,{innerRef:function(n){return t.ref(Object(r.findDOMNode)(n))}},e.createElement(_.b,null,e.createElement(w.a,null)),e.createElement(_.h,{primary:T.a[n.index].title,secondary:T.a[n.index].recipients}))}),e.createElement(_.g,null,e.createElement(_.o,{variant:"body2"},T.a[n.index].body)))}))},R=function(){return e.createElement(a.a,null,e.createElement(c.a,{render:function(){return e.createElement(P.a,{to:"/"},e.createElement(_.e,{color:"inherit","aria-label":"Menu",style:{marginLeft:"-15px",marginRight:20}},e.createElement(j.a,null)))},path:"/screen/:index"}),e.createElement(c.a,{path:"*",render:function(){return e.createElement(e.Fragment,null,e.createElement(_.e,{color:"inherit","aria-label":"Menu",style:{marginLeft:"-15px",marginRight:20}},e.createElement(h.a,null)),e.createElement(_.o,{variant:"title",color:"inherit"},"Inbox"))}}))},M=function(n){return void 0===n&&(n="/"),function(){return e.createElement(l.a,{initialEntries:[n]},e.createElement(d.b,{invertColor:!0,appBar:e.createElement(_.a,{position:"static",style:{paddingTop:26,background:"rgb(97, 0, 236)",zIndex:1}},e.createElement(_.n,null,e.createElement(R,null),e.createElement(_.e,{color:"inherit","aria-label":"Menu",style:{marginLeft:"auto"}},e.createElement(b.a,null)),e.createElement(_.e,{color:"inherit","aria-label":"Menu",style:{marginRight:"-15px"}},e.createElement(v.a,null))))},e.createElement(c.a,{render:function(n){return e.createElement(z,{index:n.match.params.index})},path:"/screen/:index"}),e.createElement(c.a,{path:"/",exact:!0},function(n){return e.createElement(A,{in:!!n.match,"aria-hidden":!n.match})})))}};Object(o.storiesOf)("yubaba-examples/ParentChild/EmailThreads",n).add("Default",Object(i.withMarkdownNotes)("")(M())).add("Screen",Object(i.withMarkdownNotes)("")(M("/screen/1")))}.call(this,t(42)(n))},799:function(n,e,t){"use strict";t.r(e),function(n){var e=t(0),r=t(17),o=t(254),i=t.n(o),a=t(4),c=t(11),l=t(150),u=t(1135),s=t(164),f=t(45),p=t(260),d=function(){return(d=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)};Object(r.storiesOf)("yubaba-examples/ParentChild/Cards",n).add("Default",function(){return e.createElement(c.c,null,function(n){var t=n.shown,r=n.toggle,o=n.set;return e.createElement(f.i,null,!!t||e.createElement(f.g,null,p.a.map(function(n,t){return e.createElement(f.e,{key:t,onClick:function(){return o(""+t)}},e.createElement(l.a,null,function(r){return e.createElement(e.Fragment,null,e.createElement(u.a,{name:t+"-card"},e.createElement(s.a,{zIndex:999},function(n){var t=n.style,r=n.ref;return e.createElement(f.d,{style:t,innerRef:r})})),e.createElement(f.f,d({},r),e.createElement(u.a,{name:t+"-card-image"},e.createElement(s.a,{zIndex:1e3},function(t){var r=t.style,o=t.ref;return e.createElement(f.n,{style:r,innerRef:o},e.createElement(f.m,{src:n.image}))})),n.name))}))})),!!t&&e.createElement(f.k,null,e.createElement(l.a,null,function(n){return e.createElement(e.Fragment,null,e.createElement(f.l,d({},n),e.createElement(a.e,{color:"default","aria-label":"Menu",style:d({top:5,left:5,position:"absolute"},n.style),onClick:function(){return r()}},e.createElement(i.a,{color:"inherit"})),e.createElement(u.a,{name:t+"-card-image"},e.createElement(s.a,{zIndex:1e3},function(n){var r=n.style,o=n.ref;return e.createElement(f.c,{style:r,innerRef:o},e.createElement(f.m,{src:p.a["string"==typeof t?t:0].image}))})),e.createElement(f.o,null,p.a["string"==typeof t?t:0].name)),e.createElement(u.a,{name:t+"-card"},e.createElement(s.a,{zIndex:999},function(n){var t=n.style,r=n.ref;return e.createElement(f.j,{style:t,innerRef:r})})))})),e.createElement(f.b,null,e.createElement(f.a,null)),e.createElement(f.h,null,"Stanley Cup Champs".split("").map(function(n){return e.createElement("span",{key:n},n)})))})})}.call(this,t(42)(n))},800:function(n,e,t){n.exports=t.p+"1f49f2dbe2917f8b593d9a074d5b3f89.jpg"},801:function(n,e,t){n.exports=t.p+"d41948375fda33296cd89e2e7e9c7469.jpeg"},802:function(n,e,t){n.exports=t.p+"de8e342f45cd43b9b798d5392f69571c.jpg"},803:function(n,e,t){n.exports=t.p+"7f8647c8180bf8a178085b2f13e8d329.jpg"},804:function(n,e,t){n.exports=t.p+"38e086998e4a2efdb3945fc5c72b555b.jpg"},805:function(n,e,t){n.exports=t.p+"5d56a4b1a06dd14868cb6b9c204d8709.jpg"},806:function(n,e,t){n.exports=t.p+"258470dfb76e85d4b196e6a0856b4c22.jpg"},807:function(n,e,t){n.exports=t.p+"bc0dd211cbb76d48363130c0821cc806.jpg"},808:function(n,e,t){n.exports=t.p+"ab8342d6dd07056718e58bb0493f5016.jpg"},809:function(n,e,t){"use strict";t.r(e),function(n){var e=t(17),r=t(0),o=t(160),i=t.n(o),a=t(254),c=t.n(a),l=t(4),u=t(11),s=t(1135),f=t(498),p=t(150),d=t(14),m=function(){return(m=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},h=function(n){var e=n.src,t=n.title,o=n.from,i=n.onClick,a=n.in,c=n.selected;return r.createElement(d.t,null,r.createElement(d.g,null,r.createElement(s.a,{name:t,in:a},r.createElement(f.a,null,function(n){var t=n.ref,o=n.style;return r.createElement(d.l,{src:e,onClick:i,innerRef:t,style:m({},o,{opacity:c?0:o.opacity})})})),r.createElement(d.f,null)),r.createElement(d.j,null,t),r.createElement(d.h,null,o))},g=function(n){var e=n.src,o=n.title,i=n.onClick;return r.createElement(p.a,{name:o},function(n){return r.createElement(d.i,m({},n),r.createElement(l.e,{color:"default","aria-label":"Menu",style:{top:26,left:0,position:"absolute"},onClick:i},r.createElement(c.a,{color:"inherit"})),r.createElement(s.a,{name:o},r.createElement(f.a,null,function(n){var t=n.ref,o=n.style;return r.createElement(d.o,{src:e,innerRef:t,style:o})})),r.createElement(d.b,null,r.createElement(d.d,{in:"hidden"!==n.style.visibility},r.createElement(d.n,null,r.createElement(d.p,null,o),r.createElement(d.c,null,"Images may be subject to copyright.")),r.createElement(d.k,null,r.createElement(d.s,null,"Related images"),r.createElement(d.s,null,"See more")),r.createElement(d.k,null,r.createElement(d.a,null,r.createElement(h,{src:t(111),title:"Washington Capitals - Wikipedia 1",from:"en.wikipedia.org"}),r.createElement(h,{src:t(111),title:"Washington Capitals - Wikipedia 2",from:"en.wikipedia.org"}),r.createElement(h,{src:t(111),title:"Washington Capitals - Wikipedia 3",from:"en.wikipedia.org"})),r.createElement(d.a,null,r.createElement(h,{src:t(111),title:"Washington Capitals - Wikipedia 4",from:"en.wikipedia.org"}),r.createElement(h,{src:t(111),title:"Washington Capitals - Wikipedia 5",from:"en.wikipedia.org"}),r.createElement(h,{src:t(111),title:"Washington Capitals - Wikipedia 6",from:"en.wikipedia.org"}))))))})};Object(e.storiesOf)("yubaba-examples/ParentChild/ImageSearch",n).add("Default",function(){return r.createElement(u.c,null,function(n){var e=n.toggle,o=n.shown;return r.createElement(u.b,null,r.createElement(d.e,null,r.createElement(l.e,{color:"default","aria-label":"Menu",style:{marginRight:"10px"}},r.createElement(i.a,null)),r.createElement(d.m,null)),r.createElement(d.u,null),r.createElement(d.v,null),r.createElement(d.r,null,r.createElement(d.q,null,r.createElement("span",null,"alex ovechkin")),r.createElement(d.q,null,r.createElement("span",null,"blue jackets")),r.createElement(d.q,null,r.createElement("span",null,"maple leafs")),r.createElement(d.q,null,r.createElement("span",null,"stanley cup"))),r.createElement(d.k,null,r.createElement(d.a,null,r.createElement(h,{src:t(811),title:"Official Washington Capitals Website | NHL.com",from:"nhl.com",onClick:e}),r.createElement(h,{src:t(812),title:"Washington Capitals: 2017 Season Preview, Predictions",from:"puckprose.com",onClick:e}),r.createElement(h,{src:t(813),title:"The Washington Capitals are up to their old tricks again ...",from:"nhl.nbcsports.com",onClick:e})),r.createElement(d.a,null,r.createElement(h,{src:t(111),title:"Washington Capitals - Wikipedia",from:"en.wikipedia.org",onClick:e,in:!o,selected:!!o}),r.createElement(h,{src:t(814),title:"Washington Capitals - Home | Facebook",from:"facebook.com",onClick:e}),r.createElement(h,{src:t(815),title:"Capitals Announce 2017-18 Preseason Schedule",from:"nhl.com",onClick:e}))),o&&r.createElement(g,{src:t(111),title:"Washington Capitals - Wikipedia",from:"en.wikipedia.org",onClick:e}))})})}.call(this,t(42)(n))},810:function(n,e,t){n.exports=t.p+"d75f9c3df130d106af0440a53f353832.webp"},811:function(n,e,t){n.exports=t.p+"7518485cd73110a71e757b9b5a09b1ce.png"},812:function(n,e,t){n.exports=t.p+"0d3eb8a2f4a4203789b9c8dd1f47e6a3.jpeg"},813:function(n,e,t){n.exports=t.p+"c6133f3e97e4e5d50d9ff44b862a008f.jpeg"},814:function(n,e,t){n.exports=t.p+"0eaba7acd81bd95ddfb0e018de3bfc48.png"},815:function(n,e,t){n.exports=t.p+"9c0a1694a8a35d7e6a1dca6638631e84.jpeg"},816:function(n,e,t){"use strict";t.r(e),function(n){var e,r,o,i,a,c,l=t(2),u=t(0),s=t(17),f=t(161),p=t.n(f),d=t(109),m=t(4),h=t(160),g=t.n(h),b=t(221),y=t.n(b),v=t(148),x=t.n(v),w=t(159),E=t.n(w),O=t(585),k=t(150),j=t(222),_=t(11),P=t(584),T=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},C=(e=function(n,t){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,t)},function(n,t){function r(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),A=function(){return(A=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},z=_.e(),R=l.b.div(r||(r=T(["\n  padding-top: 66px;\n  margin: 0 auto;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ",";\n"],["\n  padding-top: 66px;\n  margin: 0 auto;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ",";\n"])),function(n){return n.background}),M=Object(l.b)(R)(o||(o=T(["\n  position: absolute;\n  top: 0;\n  min-height: 100vh;\n  left: 0;\n  right: 0;\n"],["\n  position: absolute;\n  top: 0;\n  min-height: 100vh;\n  left: 0;\n  right: 0;\n"]))),D=l.b.div(i||(i=T(["\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-template-columns: repeat(5, auto);\n  grid-gap: 4px;\n"],["\n  display: grid;\n  grid-auto-flow: row dense;\n  grid-template-columns: repeat(5, auto);\n  grid-gap: 4px;\n"]))),F=Object(l.b)(p.a)(a||(a=T(["\n  margin: 0;\n  background: #212121;\n"],["\n  margin: 0;\n  background: #212121;\n"]))),N=l.b.div(c||(c=T(["\n  position: fixed;\n  background: ",";\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n  background-size: cover;\n  background-position-y: -110px;\n  background-repeat: no-repeat;\n"],["\n  position: fixed;\n  background: ",";\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n  background-size: cover;\n  background-position-y: -110px;\n  background-repeat: no-repeat;\n"])),function(n){return n.background}),I=Object(d.createMuiTheme)({palette:{primary:{light:"#484848",main:"#212121",dark:"#000000",contrastText:"#fff"}}}),B=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={shown:void 0},e.select=function(n){e.setState({shown:n})},e}return C(e,n),e.prototype.getKey=function(){return["multiple-targets","move",this.props.expand&&"expand",this.props.shrink&&"shrink",this.props.wait&&"wait"].filter(Boolean).join("-")},e.prototype.renderItems=function(){var n=this,e=j.a.map(function(e,t){return u.createElement(O.a,A({expand:n.props.expand,baba:n.getKey()+"-"+t,onClick:function(){return n.select(t)},key:t},e))});return u.createElement(k.a,{key:"b"},function(n){return u.createElement(R,A({background:"#212121"},n),u.createElement(z,null),u.createElement(F,{className:""}),u.createElement(D,null,e))})},e.prototype.renderDetails=function(n){var e=this,t=n&&j.a[n].heroBg;return u.createElement(k.a,{key:"c"},function(r){return u.createElement(M,A({background:""},r),u.createElement(N,{background:e.props.expand&&t?"url("+t+")":j.a[n||0].color}),u.createElement(m.a,{position:"fixed",style:{background:"transparent",boxShadow:"none",zIndex:1}},u.createElement(m.n,null,u.createElement(m.e,{color:"inherit","aria-label":"Menu",style:{marginRight:"10px"},onClick:function(){return e.select()}},u.createElement(E.a,null)),u.createElement(m.e,{color:"inherit","aria-label":"Menu",style:{marginLeft:"auto"}},u.createElement(y.a,null)),u.createElement(m.e,{color:"inherit","aria-label":"Menu"},u.createElement(x.a,null)))),u.createElement(F,{className:""}),u.createElement(_.a,null),u.createElement(P.a,A({baba:e.getKey()+"-"+n,shrink:!!e.props.shrink,wait:!!e.props.wait},j.a[n||0])))})},e.prototype.render=function(){return u.createElement(d.MuiThemeProvider,{theme:I},u.createElement(m.a,{position:"fixed",style:{zIndex:1,display:void 0===this.state.shown?"":"none"}},u.createElement(m.n,null,u.createElement(m.e,{color:"inherit","aria-label":"Menu",style:{marginRight:"10px"}},u.createElement(g.a,null)),u.createElement(m.o,{variant:"title",color:"inherit"},"My Library"),u.createElement(m.e,{color:"inherit","aria-label":"Menu",style:{marginLeft:"auto"}},u.createElement(y.a,null)),u.createElement(m.e,{color:"inherit","aria-label":"Menu"},u.createElement(x.a,null)))),void 0!==this.state.shown?this.renderDetails(this.state.shown):this.renderItems())},e}(u.Component);Object(s.storiesOf)("yubaba-examples/ParentChild/MusicPlayer",n).add("Default",function(){return u.createElement(B,{expand:!0,shrink:!0})}).add("MoveOnly",function(){return u.createElement(B,null)})}.call(this,t(42)(n))},819:function(n,e,t){n.exports=t.p+"1bf5ea6fa68f3a3ee59cd4f5d8262eed.jpg"},820:function(n,e,t){n.exports=t.p+"11dd46941292ae89638a3be527ae6484.jpg"},821:function(n,e,t){n.exports=t.p+"dd9c6058cdd8f0a614e74e6cbc971d8e.png"},822:function(n,e,t){n.exports=t.p+"769bf539a12c7c57612c4e72f5576564.png"},823:function(n,e,t){n.exports=t.p+"7d7e2f008572f6ee7d1e607b7bca2ae2.jpg"},824:function(n,e,t){n.exports=t.p+"bad48182e680328c542cf59ecf505216.jpg"},825:function(n,e,t){n.exports=t.p+"44a26abcd4c6f3633afec92e763a337e.png"},826:function(n,e,t){n.exports=t.p+"bc9d40e307c96c7fbe35493dc959f4da.jpg"},827:function(n,e,t){n.exports=t.p+"2700d718ed66623c214fe7d9823800db.jpg"},828:function(n,e,t){n.exports=t.p+"976fabb3d53e66b5517ffbd06e4ba248.jpeg"},829:function(n,e,t){"use strict";t.r(e),function(n){var e=t(17),r=t(0),o=t(159),i=t.n(o),a=t(464),c=t.n(a),l=t(4),u=t(1135),s=t(164),f=t(11),p=t(261);Object(e.storiesOf)("yubaba-examples/Transformation/SearchBar",n).add("Default",function(){return r.createElement(f.c,null,function(n){var e=n.shown,t=n.toggle;return r.createElement(f.b,null,e||r.createElement(u.a,{name:"google-searchbar"},r.createElement(s.a,{duration:400},function(n){var e=n.ref,o=n.style;return r.createElement(p.b,{onClick:function(){return t()},innerRef:e,style:o},r.createElement(l.e,{color:"default","aria-label":"Menu",style:{marginLeft:"auto "}},r.createElement(c.a,{colorRendering:"blue"})))})),e&&r.createElement(u.a,{name:"google-searchbar"},r.createElement(s.a,{duration:300},function(n){var e=n.ref,o=n.style;return r.createElement(p.a,{innerRef:e,style:o},r.createElement(l.e,{color:"default","aria-label":"Menu",onClick:function(){return t()}},r.createElement(i.a,{color:"inherit"})),r.createElement(p.c,{autoFocus:!0,placeholder:"Search or type URL"}),r.createElement(l.e,{color:"default","aria-label":"Menu"},r.createElement(c.a,{colorRendering:"blue"})))})))})})}.call(this,t(42)(n))},830:function(n,e,t){"use strict";t.r(e),function(n){var e,r,o,i,a=t(0),c=t(2),l=t(17),u=t(161),s=t.n(u),f=t(22),p=t(262),d=t(465),m=t(11),h=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},g=function(){return(g=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},b=Object(c.b)(s.a)(e||(e=h(["\n  background-color: #f2a2e8;\n  margin: 0;\n  box-sizing: border-box;\n\n  * {\n    box-sizing: border-box;\n  }\n"],["\n  background-color: #f2a2e8;\n  margin: 0;\n  box-sizing: border-box;\n\n  * {\n    box-sizing: border-box;\n  }\n"]))),y=c.b.div(r||(r=h(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: ",";\n  font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n  font-size: 24px;\n  padding: 50px;\n  height: calc(100vh - 100px);\n  margin: 50px;\n"],["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: ",";\n  font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n  font-size: 24px;\n  padding: 50px;\n  height: calc(100vh - 100px);\n  margin: 50px;\n"])),function(n){return n.color}),v=c.b.button(o||(o=h(["\n  background-color: #baed91;\n  padding: 10px;\n  font-family: inherit;\n  font-size: inherit;\n  cursor: pointer;\n  border: none;\n"],["\n  background-color: #baed91;\n  padding: 10px;\n  font-family: inherit;\n  font-size: inherit;\n  cursor: pointer;\n  border: none;\n"]))),x=c.b.div(i||(i=h(["\n  max-width: 500px;\n  padding-bottom: 20px;\n  text-align: center;\n"],["\n  max-width: 500px;\n  padding-bottom: 20px;\n  text-align: center;\n"])));Object(l.storiesOf)("yubaba/BabaManager",n).add("NoManager",function(){return a.createElement(m.c,null,function(n){var e=n.shown,t=n.toggle;return a.createElement(a.Fragment,null,a.createElement(b,{className:""}),e?a.createElement(y,{color:"#b2cefe"},a.createElement(x,null,"This text was displayed immediately, which might not be what we want!",a.createElement("br",null),a.createElement("br",null),"Thanks to BabaManager we can hide elements until all animations have finished."),a.createElement(f.a,{name:"manager-example-1",key:"2"},function(n){var e=n.ref,r=n.style;return a.createElement(v,{style:r,innerRef:e,onClick:function(){return t()}},"This button was shown after the animation completed.",a.createElement("br",null),"Click me and I'll render the previous page!")})):a.createElement(y,{color:"#f8b88b"},a.createElement(f.a,{name:"manager-example-1",key:"1"},a.createElement(p.a,{duration:500},function(n){var e=n.ref,r=n.style;return a.createElement(v,{style:r,innerRef:e,onClick:function(){return t()}},"Click me and I'll render the next page and start the animation")}))))})}).add("WithManager",function(){return a.createElement(m.c,null,function(n){var e=n.shown,t=n.toggle;return a.createElement("div",null,a.createElement(b,{className:""}),e?a.createElement(d.a,null,function(n){return a.createElement(y,g({},n,{color:"#b2cefe"}),a.createElement(x,null,"This text and container were hidden until the animation completed thanks to BabaManager."),a.createElement(f.a,{name:"manager-example-2",key:"2"},function(n){var e=n.ref,r=n.style;return a.createElement(v,{style:r,innerRef:e,onClick:function(){return t()}},"This button was shown after the animation completed.",a.createElement("br",null),"Click me and I'll render the previous page!")}))}):a.createElement(y,{color:"#f8b88b"},a.createElement(f.a,{name:"manager-example-2",key:"1"},a.createElement(p.a,{duration:500},function(n){var e=n.ref,r=n.style;return a.createElement(v,{style:r,innerRef:e,onClick:function(){return t()}},"Click me and I'll render the next page and start the animation")}))))})})}.call(this,t(42)(n))},831:function(n,e,t){"use strict";t.r(e),function(n){var e,r,o,i=t(2),a=t(0),c=t(17),l=t(22),u=t(588),s=t(11),f=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},p=i.b.div(e||(e=f(["\n  width: 100px;\n  height: 100px;\n  background: #fea3aa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  cursor: pointer;\n"],["\n  width: 100px;\n  height: 100px;\n  background: #fea3aa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  cursor: pointer;\n"]))),d=i.b.div(r||(r=f(["\n  height: 500px;\n  width: 50px;\n  flex-shrink: 0;\n"],["\n  height: 500px;\n  width: 50px;\n  flex-shrink: 0;\n"]))),m=i.b.div(o||(o=f(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"],["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"])));Object(c.storiesOf)("yubaba/CircleExpand",n).add("FromStaticPosition",function(){return a.createElement(s.c,null,function(n){var e=n.shown,t=n.toggle;return a.createElement("div",null,e?a.createElement(m,{onClick:function(){return t()},style:{cursor:"pointer"}},a.createElement(l.a,{name:"circle-expand-square",key:"2"},function(n){var e=n.ref,t=n.style;return a.createElement("div",{style:t,ref:e})})):a.createElement(m,null,a.createElement(l.a,{name:"circle-expand-square",key:"1"},a.createElement(u.a,{background:"#fea3aa"},function(n){var e=n.ref,r=n.style;return a.createElement(p,{onClick:function(){return t()},style:r,innerRef:e})}))))})}).add("ToLongPage",function(){return a.createElement(s.c,null,function(n){var e=n.shown,t=n.toggle;return a.createElement("div",null,e?a.createElement(m,{key:"22",onClick:function(){return t()},style:{cursor:"pointer"}},a.createElement(d,null),a.createElement(d,null),a.createElement(l.a,{name:"page-with-different-scroll",key:"2"},function(n){var e=n.ref,t=n.style;return a.createElement("div",{style:t,ref:e})}),a.createElement(d,null),a.createElement(d,null)):a.createElement(m,{key:"11"},a.createElement(d,null),a.createElement(l.a,{name:"page-with-different-scroll",key:"1"},a.createElement(u.a,{background:"#fea3aa"},function(n){var e=n.ref,r=n.style;return a.createElement(p,{onClick:function(){return t()},style:r,innerRef:e})})),a.createElement(d,null)))})})}.call(this,t(42)(n))},832:function(n,e,t){"use strict";t.r(e),function(n){var e,r,o,i,a=t(2),c=t(0),l=t(17),u=t(161),s=t.n(u),f=t(22),p=t(589),d=t(11),m=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},h=a.b.div(e||(e=m(["\n  width: 100px;\n  height: 100px;\n  background: #faf884;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n"],["\n  width: 100px;\n  height: 100px;\n  background: #faf884;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n"]))),g=a.b.div(r||(r=m(["\n  display: flex;\n  background: ",";\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"],["\n  display: flex;\n  background: ",";\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n"])),function(n){return n.background||""}),b=Object(a.b)(s.a)(o||(o=m(["\n  margin: 0;\n"],["\n  margin: 0;\n"]))),y=a.b.div(i||(i=m(["\n  height: 500px;\n  flex-shrink: 0;\n"],["\n  height: 500px;\n  flex-shrink: 0;\n"])));Object(l.storiesOf)("yubaba/CircleShrink",n).add("Default",function(){return c.createElement(d.c,null,function(n){var e=n.shown,t=n.toggle;return c.createElement("div",null,c.createElement(b,{className:""}),e?c.createElement(g,{background:"white"},c.createElement(f.a,{name:"circle-shrink-square",key:"2"},function(n){var e=n.ref,r=n.style;return c.createElement(h,{onClick:function(){return t()},style:r,innerRef:e})})):c.createElement(g,{background:"#faf884",onClick:function(){return t()},style:{cursor:"pointer"}},c.createElement(f.a,{name:"circle-shrink-square",key:"1"},c.createElement(p.a,{background:"#faf884"},function(n){var e=n.ref,t=n.style;return c.createElement("div",{style:t,ref:e})}))))})}).add("ToLongPage",function(){return c.createElement(d.c,null,function(n){var e=n.shown,t=n.toggle;return c.createElement("div",null,c.createElement(b,{className:""}),e?c.createElement(g,null,c.createElement(y,null),c.createElement(y,null),c.createElement(f.a,{name:"page-with-different-scroll-shrink",key:"2"},function(n){var e=n.ref,r=n.style;return c.createElement(h,{onClick:function(){return t()},style:r,innerRef:e})}),c.createElement(y,null),c.createElement(y,null)):c.createElement(g,{background:"#faf884",onClick:function(){return t()},style:{cursor:"pointer"}},c.createElement(y,null),c.createElement(f.a,{name:"page-with-different-scroll-shrink",key:"1"},c.createElement(p.a,{background:"#faf884"},function(n){var e=n.ref,t=n.style;return c.createElement(h,{style:t,innerRef:e})})),c.createElement(y,null)))})})}.call(this,t(42)(n))},833:function(n,e,t){"use strict";t.r(e),function(n){var e,r,o,i=t(0),a=t(17),c=t(2),l=t(11),u=t(22),s=t(256),f=t(580),p=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},d=function(){return(d=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var o in e=arguments[t])Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o]);return n}).apply(this,arguments)},m=c.b.div(e||(e=p(["\n  margin: 100px auto;\n  display: flex;\n  justify-content: center;\n"],["\n  margin: 100px auto;\n  display: flex;\n  justify-content: center;\n"]))),h=c.b.div(r||(r=p(["\n  background: #fea3aa;\n  height: ","px;\n  width: ","px;\n\n  position: relative;\n  cursor: pointer;\n\n  &:before {\n    content: 'click me';\n    text-align: center;\n    left: 0;\n    right: 0;\n    position: absolute;\n    color: white;\n    font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n    top: 70%;\n  }\n\n  &:after {\n    content: 'ðŸ˜Š';\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 50px;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    pointer-events: none;\n  }\n"],["\n  background: #fea3aa;\n  height: ","px;\n  width: ","px;\n\n  position: relative;\n  cursor: pointer;\n\n  &:before {\n    content: 'click me';\n    text-align: center;\n    left: 0;\n    right: 0;\n    position: absolute;\n    color: white;\n    font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n    top: 70%;\n  }\n\n  &:after {\n    content: 'ðŸ˜Š';\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 50px;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    pointer-events: none;\n  }\n"])),function(n){return n.height},function(n){return n.width}),g=c.b.div(o||(o=p(["\n  display: flex;\n  align-items: center;\n  background: #baed91;\n  height: ","px;\n  width: ","px;\n"],["\n  display: flex;\n  align-items: center;\n  background: #baed91;\n  height: ","px;\n  width: ","px;\n"])),function(n){return"both"===n.orientation||"vertical"===n.orientation?3*n.height:n.height},function(n){return"both"===n.orientation||"horizontal"===n.orientation?3*n.width:n.width}),b=function(n,e,t){return i.createElement(l.c,null,function(r){var o=r.shown,a=r.toggle;return i.createElement(i.Fragment,null,o&&i.createElement(u.a,{name:"conceal-move-"+t},function(t){return i.createElement(h,{onClick:function(){return a()},style:t.style,className:t.className,innerRef:t.ref,width:n,height:e})}),o||i.createElement(u.a,{name:"conceal-move-"+t},i.createElement(f.a,null,function(r){return i.createElement("div",d({},r),i.createElement(g,{width:n,height:e,orientation:t},i.createElement(s.a,null,function(t){return i.createElement(h,{width:n,height:e,onClick:function(){return a()},innerRef:t.ref})})))})))})};Object(a.storiesOf)("yubaba/ConcealMove",n).addDecorator(function(n){return i.createElement(m,null,n())}).add("TargetHeight",function(){return b(200,200,"vertical")}).add("TargetWidth",function(){return b(200,200,"horizontal")}).add("TargetBoth",function(){return b(200,200,"both")})}.call(this,t(42)(n))},834:function(n,e,t){"use strict";t.r(e),function(n){var e=t(17),r=t(22),o=t(581),i=t(11),a=Object(i.d)({namePrefix:"CrossFadeMove",useDistinctEnd:!0})(r.a,o.a),c=Object(e.storiesOf)("yubaba/CrossFadeMove",n);Object.keys(a).forEach(function(n){return c.add(n,a[n])})}.call(this,t(42)(n))},835:function(n,e,t){"use strict";t.r(e),function(n){var e=t(17),r=t(11),o=t(22),i=t(257),a=Object(r.d)({namePrefix:"FadeMove",useDistinctEnd:!0})(o.a,i.a),c=Object(e.storiesOf)("yubaba/FadeMove",n);Object.keys(a).forEach(function(n){return c.add(n,a[n])})}.call(this,t(42)(n))},836:function(n,e,t){"use strict";t.r(e),function(n){var e=t(17),r=t(22),o=t(149),i=t(11),a=Object(i.d)({namePrefix:"Move",useDistinctEnd:!1})(r.a,o.a),c=Object(e.storiesOf)("yubaba/Move",n);Object.keys(a).forEach(function(n){return c.add(n,a[n])})}.call(this,t(42)(n))},837:function(n,e){},838:function(n,e,t){"use strict";t.r(e),function(n){var e,r,o,i=t(0),a=t(17),c=t(2),l=t(11),u=t(22),s=t(262),f=t(256),p=t(586),d=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},m={left:"flex-start",center:"center",right:"flex-end"},h=c.b.div(e||(e=d(["\n  margin: 100px ",";\n  display: flex;\n  justify-content: ",";\n"],["\n  margin: 100px ",";\n  display: flex;\n  justify-content: ",";\n"])),function(n){return"center"===n.appearance?"auto":"100px"},function(n){return m[n.appearance]}),g=c.b.div(r||(r=d(["\n  background: #fea3aa;\n  height: ","px;\n  width: ","px;\n  position: relative;\n  cursor: pointer;\n\n  &:before {\n    content: 'click me';\n    text-align: center;\n    left: 0;\n    right: 0;\n    position: absolute;\n    color: white;\n    font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n    top: 70%;\n  }\n\n  &:after {\n    content: 'ðŸ˜Š';\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 50px;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    pointer-events: none;\n  }\n"],["\n  background: #fea3aa;\n  height: ","px;\n  width: ","px;\n  position: relative;\n  cursor: pointer;\n\n  &:before {\n    content: 'click me';\n    text-align: center;\n    left: 0;\n    right: 0;\n    position: absolute;\n    color: white;\n    font-family: Roboto, HelveticaNeue, Arial, sans-serif;\n    top: 70%;\n  }\n\n  &:after {\n    content: 'ðŸ˜Š';\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 50px;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    pointer-events: none;\n  }\n"])),function(n){return n.height},function(n){return n.width}),b=c.b.div(o||(o=d(["\n  display: flex;\n  align-items: center;\n  background: #baed91;\n  margin: 200px auto;\n  height: ","px;\n  max-width: ","px;\n"],["\n  display: flex;\n  align-items: center;\n  background: #baed91;\n  margin: 200px auto;\n  height: ","px;\n  max-width: ","px;\n"])),function(n){return"both"===n.orientation||"vertical"===n.orientation?3*n.height:n.height},function(n){return"both"===n.orientation||"horizontal"===n.orientation?3*n.width:n.width}),y=function(n,e,t,r,o){return void 0===o&&(o=!1),i.createElement(l.c,null,function(a){var c=a.shown,l=a.toggle;return i.createElement(i.Fragment,null,c||i.createElement(h,{appearance:r},i.createElement(u.a,{name:"reveal-move-"+t+"-"+r+"-"+o},i.createElement(p.a,{childrenTransformX:o||"vertical"===t,childrenTransformY:o||"horizontal"===t,transformX:o||"center"!==r,useClipPath:o},function(t){return i.createElement(g,{onClick:function(){return l()},style:t.style,className:t.className,innerRef:t.ref,width:n,height:e})}))),c&&i.createElement(u.a,{name:"reveal-move-"+t+"-"+r+"-"+o},i.createElement(s.a,null,function(r){return i.createElement(b,{width:n,height:e,orientation:t,style:r.style,className:r.className,innerRef:r.ref},i.createElement(f.a,null,function(t){return i.createElement(g,{width:n,height:e,onClick:function(){return l()},innerRef:t.ref})}))})))})};Object(a.storiesOf)("yubaba/RevealMove",n).add("RevealHeight/Left",function(){return y(200,200,"vertical","left")}).add("RevealWidth/Left",function(){return y(200,200,"horizontal","left")}).add("RevealBoth/Left",function(){return y(200,200,"both","left")}).add("RevealHeight/Center",function(){return y(200,200,"vertical","center")}).add("RevealWidth/Center",function(){return y(200,200,"horizontal","center")}).add("RevealBoth/Center",function(){return y(200,200,"both","center")}).add("RevealHeight/Right",function(){return y(200,200,"vertical","right")}).add("RevealWidth/Right",function(){return y(200,200,"horizontal","right")}).add("RevealBoth/Right",function(){return y(200,200,"both","right")}).add("RevealHeight/Left/ClipPath",function(){return y(200,200,"vertical","left",!0)}).add("RevealWidth/Left/ClipPath",function(){return y(200,200,"horizontal","left",!0)}).add("RevealBoth/Left/ClipPath",function(){return y(200,200,"both","left",!0)}).add("RevealHeight/Center/ClipPath",function(){return y(200,200,"vertical","center",!0)}).add("RevealWidth/Center/ClipPath",function(){return y(200,200,"horizontal","center",!0)}).add("RevealBoth/Center/ClipPath",function(){return y(200,200,"both","center",!0)}).add("RevealHeight/Right/ClipPath",function(){return y(200,200,"vertical","right",!0)}).add("RevealWidth/Right/ClipPath",function(){return y(200,200,"horizontal","right",!0)}).add("RevealBoth/Right/ClipPath",function(){return y(200,200,"both","right",!0)})}.call(this,t(42)(n))},839:function(n,e,t){"use strict";t.r(e),function(n){var e,r,o=t(2),i=t(0),a=t(17),c=t(22),l=t(1134),u=t(11),s=function(n,e){return Object.defineProperty?Object.defineProperty(n,"raw",{value:e}):n.raw=e,n},f=o.b.button(e||(e=s(["\n  width: 100px;\n  height: 100px;\n  background: #f8b88b;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  cursor: pointer;\n  border: none;\n"],["\n  width: 100px;\n  height: 100px;\n  background: #f8b88b;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  cursor: pointer;\n  border: none;\n"]))),p=o.b.div(r||(r=s(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n  cursor: ",";\n"],["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n  cursor: ",";\n"])),function(n){return n.interactive?"pointer":"default"}),d=function(n){return i.createElement(u.c,null,function(e){var t=e.shown,r=e.toggle;return i.createElement("div",null,t?i.createElement(p,{onClick:function(){return r()},interactive:!0},i.createElement(c.a,{name:"swipe-"+n,key:"2"},function(n){var e=n.ref,t=n.style;return i.createElement("div",{style:t,ref:e})})):i.createElement(p,null,i.createElement(c.a,{name:"swipe-"+n,key:"1"},i.createElement(l.a,{background:"#f8b88b",direction:n},function(n){var e=n.ref,t=n.style;return i.createElement(f,{onClick:function(){return r()},style:t,innerRef:e})}))))})};Object(a.storiesOf)("yubaba/Swipe",n).add("Up",function(){return d("up")}).add("Down",function(){return d("down")}).add("Left",function(){return d("left")}).add("Right",function(){return d("right")})}.call(this,t(42)(n))}},[[677,3,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,